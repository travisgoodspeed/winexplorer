' Credit where credit is due
' Thanks Penga, H00k, and many others.
' Thanks to #echostar on uicn.net
' Thanks to CC for keeping the info free
'ripped from A.friend A3d script

' This script to be used with regular ISO programmer"""
' BEV BD0 WRITER will write a new BD0 to a ROM10 card that is
' unlocked but still prompts for BD0 and blocks the restoring of these keys within nagraedit or viagra or MROM
' script will write NEW BD0=AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA using CMD03 based on the A3D unlocker
' this is a last resort and worked on my screwed card (BD0 was all zeros), I had to run couple times for it to write all keys!!!

const retry_constant = 10
const initdelay=2000
DIM DATASP
Sub Main ()
sc.verbose = false
ClearOutputWindow
for i = 1 to 16
sc.print "writing " & i & " of 16 keys"
sc.print "Sending packet.1.." & vbcr & "=================" & vbcr
sc.write("21C101A041")
sc.print "Response from card: " & vbcr
sc.print "" & vbcr
sc.print "writing AA to C040-C04F"
sc.print "" & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.2.." & vbcr & "=================" & vbcr
sc.write("210008A0CA000002C0000687")
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.3.." & vbcr & "=================" & vbcr
sc.write("21000DA0CA000000030008001010150058")
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.4.." & vbcr & "=================" & vbcr
sc.write("210008A0CA000002C0000687 ")
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.5.." & vbcr & "=================" & vbcr
sc.write("210008A0CA000002C0000687")
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.6.." & vbcr & "=================" & vbcr
DATASP = i-1
if DATASP=0 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C040A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD6")
else
if DATASP=1 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C041A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD7")
else
if DATASP=2 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C042A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD4")
else
if DATASP=3 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C043A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD5")
else
if DATASP=4 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C044A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD2")
else
if DATASP=5 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C045A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD3")
else
if DATASP=6 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C046A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD0")
else
if DATASP=7 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C047A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD1")
else
if DATASP=8 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C048A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDE")
else
if DATASP=9 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C049A696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDF")
else
if DATASP=10 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04AA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDC")
else
if DATASP=11 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04BA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDD")
else
if DATASP=12 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04CA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDA")
else
if DATASP=13 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04DA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DDB")
else
if DATASP=14 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04EA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD8")
else
if DATASP=15 then
sc.write ("210064A0CA00004D034B080C206F15CD7AB7C04FA696B7097ECF056DAD52A81E17E67F1E1A14910CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D0CCD320C5AEA2D2D997985044C63D5E70CCD320C5AEA2D2DD9")
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
end if
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print
sc.delay(initdelay)

sc.print "Sending packet.7.." & vbcr & "=================" & vbcr
sc.write("219200B3")
sc.print "Response from card: " & vbcr
sc.delay(80)
answer = read_answer()
sc.print "" & vbcr
sc.print "key# "
sc.print i &" written"
sc.delay(initdelay)

wx.closeport
sc.delay(initdelay)
wx.openport

next

sc.print
sc.print "Card should now have a new BD0 Open Nagraedit and try reading card" & vbcr
sc.print "If/when prompted for Backdoor0 enter AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA." & vbcr
sc.print
sc.print "Note: If you still get Backdoor0 not correct then run again." & vbcr
sc.print
End sub

function read_answer()
length = sc.bytesinbuffer
sc.read(length)
if length = 0 then
answer=""
sc.print("(No answer)")
else
For X = 0 to length - 1
ThisByte = Hex(Sc.GetByte(X))
if Len(ThisByte) = 1 then ThisByte = "0" & ThisByte
Thisbyte = Thisbyte & " "
res = res & Thisbyte
Sc.Print(ThisByte)
Next
end if
Sc.Print
read_answer = answer
end function

Wx.ResetDelay = 150
Wx.ByteDelay = 0
Wx.RxByteTimeout = 50
Wx.CommPort = "com1:"
Wx.BaudRate = 115200
Wx.ResetBaudRate = 9600
Wx.Parity = 1
Wx.StopBits = 2
Wx.DTRControl = 1
Wx.RTSControl = 0
Wx.ResetMode = 1
Wx.ResetLine = 0
Wx.ByteConvention = 0
Wx.FlushEchoByte = 1
Wx.FlushBeforeWrite = 1
Wx.IgnoreTimeouts = 0
Wx.ResetAfterTimeout = 0
Wx.LogTransactions = 0
Wx.DisplayUSW = 0
Wx.DisplayFuse = 0