' New VB Script File - Created 19/06/05
' Modificado para rom102 rev109 12/07/06

'
'                         XXXXX                   XX   XXXX   XXXXX
'                         XX  XX   XXX   XX   XX XXX  XX  XX XX   XX
'                         XX  XX  XX XX  XXX XXX  XX  XX  XX X    XX
'                         XX XX   XX XX  XX X XX  XX  XX  XX     XX
'                         XXXX    XX XX  XX   XX  XX  XX  XX    XX
'                         XX XX   XX XX  XX   XX  XX  XX  XX  XX
'                         XX  XX   XXX   XX   XX  XX  XX  XX XX
'                         XX   XX                XXXX  XXXX  XXXXXXX
'                         ===========================================

' Nombre: PasswordSender :Envia passwords a tarjetas de Dishnetwor Rom102
' Lista     Una lista de Password Conocidos
' Rutina 1  Incremento al Nibble bajo con acarreo al Nibble Alto (No tarda)
' Rutina 2  Incremento ambos Nibbles del Byte Par con acarreo al Byte Inpar (No tarda)
' Rutina 3  Incremento ambos Nibble de 4 Bytes y acarreo a los otros 4 Bytes (mariguanada)
' Rutina 4  Incremento de 1 en 1 al byte Par con acarreo de 1 al byte impar (tarda 7 Hrs si no hay muchos errores))
' Rutina 5  Incremento de 1 en 1 a todo el password (tarda riatales nunca lo he terminado)
' Utilizar ISO Programmer
' ****** Al usuario se le recomienda que lean los comentarios en el Script
'              ******            ******
' Creditos a Malcom
' www.HuMexico.org



' Corran este Scrip y ya que este corriendo abran Nagraedit 4 o 4.1 y que quede sobre el Winexplorer
' he observado que salen mas OK de esta forma, porque NO SE
' OK  el password fue procesado por la tarjeta
'...  El password no fue correctamente procesado por la tarjeta
'La Rutina 4 esta Pesada pero apescado algunos password que no conocia
'La Rutina 5 es larguisima
' Mas comentarios abajo



  Dim D3,D5,x8,x7,x6,x5,x4,x3,x2,x1
  Dim Fin,Fcmd,Lee,CH,Pwd
  Dim suma
  Dim cont
  Dim TmpN
  Dim TmpS
  Dim Chk
  Dim PWW
  Dim RP
  Dim pict


  pict="pict.jpg"
 Sc.Picturebox "pict.jpg",3

Sub Main()
'   ***************************** A T E N C I O N ***********************************************
    'De las siguentes dos lineas solo UNA debe tener comilla al inicio LA OTRA NO
    'RP="90"     'Respuesta esperada de los Blocker de Silverman (ChecksumBlocker)
     RP="6F"    'Respuesta esperada de los Blocker de Penga  (NoMore64)
                'y Emulaciones  Rom10 y Rom11 to 102
'    El scrip esta configurado para indicar que una tarjeta con un blocker de Penga
'    esta abierta si RP="6F" no tiene comilla a su izquierda
'    Si la tarjeta tiene un blocker que no es de penga, Se va a abrir cuando el password se le envia
'    pero no va a mostrar ninguna indicacion de que se abrio. Asi que dale una checadita
'    con el NagraEdit haber si se  abrio.
'   **********************************************************************************************

    CH="Ok "    'Password procesado correctamente, NO INDICA QUE LA TARJETA SE ABRIO
    call echosetting
    sc.verbose=false
    print "                     ****************************************************** "+VBCR
    print "                       I N I C I A    L I S T A   D E   P A S S W O R D S   "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="Lst Pwd: "    ' Indicador de rutina en curso
    call lista
    print "                     ****************************************************** "+VBCR
    print "                                 I N I C I A    R U T I N A   1             "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="R1 Pwd: "     ' Indicador de rutina en curso
    call pass1
    print "                     ****************************************************** "+VBCR
    print "                                 I N I C I A    R U T I N A   2             "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="R2 Pwd: "     ' Indicador de rutina en curso
    call pass2
    print "                     ****************************************************** "+VBCR
    print "                                 I N I C I A    R U T I N A   3             "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="R3 Pwd: "     ' Indicador de rutina en curso
    call pass3
    print "                     ****************************************************** "+VBCR
    print "                                 I N I C I A    C O D I G O   4             "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="R4 Pwd: "     ' Indicador de rutina en curso
    call pass4
    print "                     ****************************************************** "+VBCR
    print "                       R U T I N A   I N C R E M E N T O   D E  1  E N  1   "+VBCR
    print "                     ****************************************************** "+VBCR
    PWW="R5 Pwd: "     ' Indicador de rutina en curso
    call incremento
end sub

Sub Envia
  'print " Pwd: " + Ucase(Mid(Fcmd,11,16))+ " "
  print PWW + Ucase(Mid(Fcmd,11,16))+ " "
  write (Fcmd)
'                **********************************************************
  delay(30)      ' Retardo entre  cada password que se envia a la tarjeta
'                **********************************************************
  Lee=Respuesta
End Sub

'  ****************************************************************
'   Lista de Passwords
'   Aqui puedes Agregar Passwords que vayas conociendo solo
'   Agrega dos lineas despues de la instruccion "Sub Lista"
'   Pwd="AAAAAAAAAAAAAAAA" -->Tu nuevo pasword entre comillas
'   MandarAlaTarjeta       -->Rutina que en via tu nuevo password
'  ****************************************************************
Sub Lista
Pwd="DEADBEEFBAADF00D"
MandarAlaTarjeta
Pwd="DEADDEADDEADDEAD"
MandarAlaTarjeta
Pwd="DEADBEEFBAADBEEF"
MandarAlaTarjeta
Pwd="BEEFBEEFBEEFBEEF"
MandarAlaTarjeta
Pwd="BAADBAADBAADBAAD"
MandarAlaTarjeta
Pwd="F00DF00DF00DF00D"
MandarAlaTarjeta
Pwd="DEADBEEFDEADBEEF"
MandarAlaTarjeta
Pwd="BAADF00DBAADF00D"
MandarAlaTarjeta
Pwd="DEADB10FB11DF12D"
MandarAlaTarjeta
Pwd="DEADBEEFBAADFEED"
MandarAlaTarjeta
Pwd="DEADD00DD00DDEAD"
MandarAlaTarjeta
Pwd="DEADDEADDEADDEAD"
MandarAlaTarjeta
Pwd="BAADBADDDEADDEAD"
MandarAlaTarjeta
Pwd="DED0DEBEBECAFE99"
MandarAlaTarjeta
Pwd="DEEDBAADD00DF00D"
MandarAlaTarjeta
Pwd="DEEEEEEAAAAAAAFF"
MandarAlaTarjeta
Pwd="FEADBEEFBAADFF0D"
MandarAlaTarjeta
Pwd="FEEDDADADEADBEEF"
MandarAlaTarjeta
Pwd="CADAB0CABEBEC0CA"
MandarAlaTarjeta
Pwd="CADACADACADACADA"
MandarAlaTarjeta
Pwd="B0CAB0CAB0CAB0CA"
MandarAlaTarjeta
Pwd="BEBEBEBEBEBEBEBE"
MandarAlaTarjeta
Pwd="C0CAC0CAC0CAC0CA"
MandarAlaTarjeta
Pwd="CADAB0CACADAB0CA"
MandarAlaTarjeta
Pwd="BEBEC0CABEBEC0CA"
MandarAlaTarjeta
Pwd="FEDEBEBEC0CAC01A"
MandarAlaTarjeta
Pwd="CADABACABEBEC0CA"
MandarAlaTarjeta
Pwd="CADAB0CABEBECAFE"
MandarAlaTarjeta
Pwd="CAFECAFECAFECAFE"
MandarAlaTarjeta
Pwd="BEBECAFEBEBECAFE"
MandarAlaTarjeta
Pwd="COFFEECOFFEECODE"
MandarAlaTarjeta
Pwd="C0DEC0DEC0DEC0DE"
MandarAlaTarjeta
Pwd="DEAFDEAFDEAFDEAF"
MandarAlaTarjeta
Pwd="DEEFDEEFDEEFDEEF"
MandarAlaTarjeta
Pwd="DEAFDEAFDEEFDEEF"
MandarAlaTarjeta
Pwd="DEEFDEEFDEAFDEAF"
MandarAlaTarjeta
Pwd="0123456789ABCDEF"
MandarAlaTarjeta
Pwd="0123456701234567"
MandarAlaTarjeta
Pwd="1111222211112222"
MandarAlaTarjeta
Pwd="AAAABBBBCCCCDDDD"
MandarAlaTarjeta
Pwd="1234123412341234"
MandarAlaTarjeta
Pwd="ABCDABCDABCDABCD"
MandarAlaTarjeta
Pwd="1122334455667788"
MandarAlaTarjeta
Pwd="11AA22BB33CC44DD"
MandarAlaTarjeta
Pwd="02CEE178B38C261E"
MandarAlaTarjeta
Pwd="0316990316990316"
MandarAlaTarjeta
Pwd="092736FEED092736"
MandarAlaTarjeta
Pwd="1234567890123456"
MandarAlaTarjeta
Pwd="123BADBADB0B4321"
MandarAlaTarjeta
Pwd="1966196719651966"
MandarAlaTarjeta
Pwd="1966196719661967"
MandarAlaTarjeta
Pwd="1999199919991999"
MandarAlaTarjeta
Pwd="2112211221122112"
MandarAlaTarjeta
Pwd="264DC30E8324A1B2"
MandarAlaTarjeta
Pwd="379465D7E54A7969"
MandarAlaTarjeta
Pwd="44464F524D554C41"
MandarAlaTarjeta
Pwd="51424C53564D465B"
MandarAlaTarjeta
Pwd="6789067890678906"
MandarAlaTarjeta
Pwd="6969696969696969"
MandarAlaTarjeta
Pwd="7498749874987498"
MandarAlaTarjeta
Pwd="3210321032103210"
MandarAlaTarjeta
Pwd="A1A2A3A4A5A6A7A8"
MandarAlaTarjeta
Pwd="A1B1C1A2B2C3AAAA"
MandarAlaTarjeta
Pwd="AA11AA11AA11AA11"
MandarAlaTarjeta
Pwd="AABBCCDDEEFF1122"
MandarAlaTarjeta
Pwd="AB12AB12AB12AB12"
MandarAlaTarjeta
Pwd="ABCDEF0123456789"
MandarAlaTarjeta
Pwd="B81B81B81B81B81B"
MandarAlaTarjeta
Pwd="BABA007BABA007BA"
MandarAlaTarjeta
Pwd="BADDADBEDDEDBABE"
MandarAlaTarjeta
Pwd="CACABEBECACABEBE"
MandarAlaTarjeta
Pwd="CACACACACACACACA"
MandarAlaTarjeta
Pwd="C0C0C0C0C0C0C0C0"
MandarAlaTarjeta
Pwd="ACADACADACADACAD"
MandarAlaTarjeta
Pwd="A590610A590914AB"
MandarAlaTarjeta
Pwd="DOBADAD0BADAD0BA"
MandarAlaTarjeta
Pwd="1971197119711982"
MandarAlaTarjeta
Pwd="1223A665310D5718"
MandarAlaTarjeta
Pwd="78366337836633AC"
MandarAlaTarjeta
Pwd="1072107210721072"
MandarAlaTarjeta
Pwd="AABBCCDDAABBCCDD"
MandarAlaTarjeta
End Sub



Sub pass1
    For z=0 to 255
     x8=z: x7=z: x6=z: x5=z: x4=z: x3=z: x2=z: x1=z: x1=z
     Cadena : Envia
    Next
end sub

sub pass2
    For y=0 to 15
     x8=y+(16*y): x6=y+(16*y): x4=y+(16*y): x2=y+(16*y)
    For z=0 to 15
     x7=z+(16*z): x5=z+(16*z): x3=z+(16*z): x1=z+(16*z)
     Cadena : Envia
    Next
    Next
end sub

sub pass3
    For y=0 to 15
     x8=y+(16*y): x7=y+(16*y): x6=y+(16*y): x5=y+(16*y)
    For z=0 to 15
     x4=z+(16*z): x3=z+(16*z): x2=z+(16*z): x1=z+(16*z)
     Cadena : Envia
    Next
    Next
end sub

sub pass4
    'Tarda 7 Horas
    For y=0 to 255
     x8=y: x6= y: x4=y: x2=y
    For z=0 to 255
     x7=z: x5=z: x3=z: x1=z
     Cadena : Envia
    Next
    Next
End Sub

sub incremento
  TmpN=0
  D3=0
  D5=0
  call echosetting
  For x8=0 to 255
  For x7=0 to 255
  For x6=0 to 255
  For x5=0 to 255
  For x4=0 to 255
  For x3=0 to 255
  For x2=0 to 255
  For x1=0 to 255
    Cadena:Envia
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
end sub



Function Respuesta()
  Dim Tamano
  Tamano = sc.bytesinbuffer
  sc.read(Tamano)
  If Tamano = 0 Then
     answer=""
     'Print "Sin Respuesta, Reseteando y Re-Enviando Password" + VbCr
     Print "..."+ VbCr
     Reset
     'Tamano=5
     Resp="12 00 00 69 00 00 "
   Else
     For X = 0 to Tamano - 1
       ElByte = Hex(Sc.GetByte(X))
       If Len(ElByte) = 1 Then ElByte = "0" & ElByte
       ElByte = ElByte & " "
       Resp = Resp & ElByte
     Next
  End if
  IF Tamano<6 then
      Delay(20)
      IF Tamano >0 Then Print "..."+ VbCr  'Print "Respuesta Incorrecta, Re-Enviando Password" + VbCr
      Envia
    else
      IF Mid(Resp,10,2)="90" Then Call CHCHCH
      Print CH + VbCr
  End If
  Respuesta = Mid(Resp,10,2)
End function

Sub MandarAlaTarjeta
 IF Sc.IsHex(Pwd) Then
   IF Len(Pwd)=16 Then
     x8=HextoDec(Mid(Pwd,1,2))
     x7=HextoDec(Mid(Pwd,3,2))
     x6=HextoDec(Mid(Pwd,5,2))
     x5=HextoDec(Mid(Pwd,7,2))
     x4=HextoDec(Mid(Pwd,9,2))
     x3=HextoDec(Mid(Pwd,11,2))
     x2=HextoDec(Mid(Pwd,13,2))
     x1=HextoDec(Mid(Pwd,15,2))
     Cadena : Envia
   End IF
 End IF
End Sub

Sub cadena
  Fcmd="21000AA0FF"
  Call chks
  Fcmd=Fcmd + Right("00"+Hex(x8),2)
  Fcmd=Fcmd + Right("00"+Hex(x7),2)
  Fcmd=Fcmd + Right("00"+Hex(x6),2)
  Fcmd=Fcmd + Right("00"+Hex(x5),2)
  Fcmd=Fcmd + Right("00"+Hex(x4),2)
  Fcmd=Fcmd + Right("00"+Hex(x3),2)
  Fcmd=Fcmd + Right("00"+Hex(x2),2)
  Fcmd=Fcmd + Right("00"+Hex(x1),2)
  Fcmd=Fcmd + Right("00"+Chk,2)
end Sub

sub chks
  TmpN= &H74 xor x8
  TmpN= TmpN xor x7
  TmpN= TmpN xor x6
  TmpN= TmpN xor x5
  TmpN= TmpN xor x4
  TmpN= TmpN xor x3
  TmpN= TmpN xor x2
  TmpN= TmpN xor x1
  Chk=hex(TmpN)
End Sub

Sub EchoSetting
  Wx.BaudRate = 115200
  Wx.ResetBaudRate = 9600
  Wx.Parity = 1
  Wx.StopBits = 2
  Wx.DTRControl = 1
  Wx.RTSControl = 0
  Wx.ResetDelay = 10
  Wx.ByteDelay = 5
  Wx.RxByteTimeout = 200
  Wx.ResetMode = 1
  Wx.ResetLine = 0
  Wx.ByteConvention = 0
  Wx.FlushEchoByte = 1
  Wx.FlushBeforeWrite = 1
  Wx.IgnoreTimeouts = 1
  Wx.ResetAfterTimeout = 0
  Wx.LogTransactions = 0
  Wx.DisplayUSW = 0
  Wx.DisplayFuse = 0
End Sub

Function HexToDec(HexNumber)
    ' This function takes 1 argument, a string containing a hex value of any digit length
    ' and returns the decimal equivalent
    Dim DecimalValue
    Dim DigitCount
    Dim Digit
    Dim HexDigit

    HexNumber = Replace(UCase(HexNumber), " ", "")
    DigitCount = Len(HexNumber)

    For Digit = 1 To DigitCount

        HexDigit = Mid(HexNumber, Digit, 1)
        If Asc(HexDigit) < 58 Then
            DecimalValue = HexDigit * 16 ^ (DigitCount - Digit)
        Else
            DecimalValue = (Asc(HexDigit) - 55) * 16 ^ (DigitCount - Digit)
        End If
        HexToDec = HexToDec + DecimalValue
    Next
End Function

Function GetATR ()

    Dim temp

    Call Sc.ProgressBox(0,0,0,0)
    Sc.Write("06100E10019300")
    Sc.Delay(500)
    Sc.Read(&h02)
        temp = Sc.GetByte(&h01)
        Sc.Read (temp)

    If (temp <> 20) Then
        GetATR = False
    Else
        GetATR = True
    End If

End Function

sub incremento
  TmpN=0
  D3=0
  D5=0
  call echosetting
  For x8=0 to 255
  For x7=0 to 255
  For x6=0 to 255
  For x5=0 to 255
  For x4=0 to 255
  For x3=0 to 255
  For x2=0 to 255
  For x1=0 to 255
    cadena:envia
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
    IF Fin="S" then Exit For
  next
end sub

Sub CHCHCH
' *****************************************************************
'  Respuesta enviada cuando la tarjeta YA se Abrio esto solo ocurre
'  si la respuesta elegida arriba corresponde a la enviadada por
'  el Blocker en la tarjeta.
' ******************************************************************
CH="Chanca ChaChan ChaChan... YA ESTA ABIERTA"
Sc.Picturebox "pict.jpg",5
msgbox"Chanca ChaChan ChaChan... YA ESTA ABIERTA"
End Sub
'________________Setting up WinExplorer_________________
'Comunicacion Tab
Wx.BaudRate = 115200
Wx.ResetBaudRate = 9600
Wx.Parity = 1 ' 0 = None, 1 = Odd, 2 = Even, 3 = Mark, 4 = Space
Wx.RxByteTimeout = 200 ' In milliseconds
Wx.ByteDelay = 40000 ' In microseconds
Wx.ResetDelay = 40000 ' In microseconds
Wx.StopBits = 2 ' 0 = 1 stop bit, 1 = 1.5 stop bits, 2 = 2 stop bits
Wx.ByteConvention = 0 ' 0 = Inverse, 1 = Direct
Wx.FlushEchoByte = 1 ' 0 = no flush, 1 = flush - A Phoenix interface will echo each byte transmitted.
Wx.FlushBeforeWrite = 0 ' 0 = no flush, 1 = flush - Flush the receive buffer before each write to strip off Null bytes.
'Advance Tab
Wx.ResetMode = 1 ' 0 = No Resets, 1 = ISO Reset (Expect a ATR), 2 = Device Reset (No ATR)
Wx.IgnoreTimeouts = 0 ' 0 = Abort script on a receive timeout, 1 = Ignore all receive timeouts
Wx.ResetAfterTimeout = 0 ' 0 = Don't reset after a timeout, 1 = do a reset after a timeout - Not used if "IgnoreTimeouts=0"
Wx.DTRControl = 1 ' Initial state of DTR 0 = off, 1 = on
Wx.RTSControl = 0 ' Initial state of RTS 0 = off, 1 = on
Wx.ResetLine = 0 ' 0 = Toggle RTS for Reset, 1 = Toggle DTR for Reset
'Program Settings Tab
Wx.LogTransactions = 0 ' 0 = Don't log transactions, 1 = log transactions
Wx.DisplayUSW = 0 ' Display USW after script complete 0 = no, 1 = yes
Wx.DisplayFuse = 0 ' Display Fuse after script complete 0 = no, 1 = yes