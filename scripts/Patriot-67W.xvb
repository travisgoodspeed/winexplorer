'Patriot-67W
'Nonstealth Script
'By Pilot-69 and Doc33 (DALnet.irc #dss and #dssware)

'======================================================
'What's New?
'added updates to 67 as a temp fix for new CMD60/C9 Nanocommand - C9/D2 dynamic hashing (12-17-2001)
'Will NOT work on BS cards because the new hash looks at the 8000-8003 bytes on the card...
'THIS IS A NON_BS FIX ONLY!!!
'======================================================

'Added the choice to make the card "Wink" compatible (adds an HU CamID and ZKT)
'This allows the card to work with 5th Generation "Winked" receivers
'Stops the "Card Not Compatible" error message (Call Ext. 752)

'I have included an HU CamID/ZKT image file for those of you with an unlooper...
'You will need to add BOTH the HU/CamID and the appropriate Patriot image files!

'*** CHOOSING HU CamID/ZKT WILL CLONE YOUR H CARD... BACK UP YOUR ORIGIONAL BIN FIRST ***

'======================================================

'This script was a private script origionally written by myself with help from Doc33 (nag screens), During a drunken weekend...
'The script was origionally given to ops and voices in #dss
'As with anything else, you can't trust everyone, and eventually someone leaked the script to the public...
'So, I decided to make it public so that credit is givin where credit is due.
'
'=======================================================
'
'Leaving a card at 28 updates disables dynamic writes (thanks RAM9999 for the tip)
'Patriot-67W is intended for non-bs cards, but here are the facts...
'All scripts are currently working (datastream is ignoring H cards the current time)
'Emulation is still BY FAR the safest way to get free TV ***YOU HAVE BEEN WARNED***
'This script will work on any Non-BS H card...
'IF DTV DECIDES TO ECM... YOU CARD COULD GET HIT!!!
'As always, use this and all scripts at your own risk!!!

'=======================================================
'
'I would like to thank the "Acme" group for certain subroutines used here...
'For example, random Activation date, guide byte, fuse byte, and E3 hole open routine
'
'=======================================================

Sub Main()
    Dim promptstring
    Dim timezone
    Dim Zipcode
    Dim Guide
    Dim Hextime
    Dim HexGuide
    Dim ThisChar
    Dim HexZipCode
    Dim Abort
    Dim Rand4
    Dim Rand5
    Dim Rand6
    Dim Inputvalid
    Dim WinkTxt
    Dim WinkEnable
    Dim WinkChoice


    Sc.PictureBox "Patriot.jpg" ,3


    Randomize
    Rand4 = " " & Hex(15 * Rnd) & Hex(15 * Rnd)
    Rand5 = " " & Hex(15 * Rnd) & Hex(15 * Rnd)
    Rand6 = " " & Hex(15 * Rnd) & Hex(15 * Rnd)

    TimeZone = GetTimeZone()

    Select Case TimeZone
        Case "0"
            Exit Sub
        Case "1"
            HexTimeZone = "A0"
            TimeZone = "Pacific Time"
        Case "2"
            HexTimeZone = "20"
            TimeZone = "Pacific Time - Non Daylight Savings"
        Case "3"
            HexTimeZone = "A2"
            TimeZone = "Central Time"
        Case "4"
            HexTimeZone = "22"
            TimeZone = "Mountain Time - Non Daylight Savings"
        Case "5"
            HexTimeZone = "A4"
            TimeZone = "Central Time"
        Case "6"
            HexTimeZone = "24"
            TimeZone = "Central Time - Non Daylight Savings"
        Case "7"
            HexTimeZone = "A6"
            TimeZone = "Eastern Time"
        Case "8"
            HexTimeZone = "26"
            TimeZone = "Eastern Time - Non Daylight Savings"
        Case "9"
            HexTimeZone = "A8"
            TimeZone = "Atlantic Time"

        End Select

    ZipCode = GetZipCode()
        Select Case ZipCode
            Case "0"
               Exit Sub
            Case Else
            For ThisChar = 1 To 5
            HexZipCode = HexZipCode & "3" & Mid(ZipCode, ThisChar, 1) & " "
            Next
        End Select

    Guide = GetGuideByte()

    Select Case Guide
        Case "0"
            Exit Sub
    Case "1"
            Guide = "Engineering"
        HexGuide = "FF"
    Case "2"
            Guide = "Normal"
        HexGuide = "49"
    Case "3"
            Guide = "Normal"
        HexGuide = "85"
    End Select

    WinkChoice = Sc.MsgBox("Would You Like To Enable '752' Or 'Card Not Compatible' Fix?" & vbCrLf & "This Will Clone An HU CamID And ZKT For 5th Generation Receivers"& vbCrLf & vbCrLf & "MAKE SURE YOU HAVE BACKED UP YOUR ORIGIONAL BIN FIRST!!!" & vbCrlF & "" & vbCrlF & "", vbYesNo + vbQuestion + vbDefaultButton2, "Patriot Script -- 752 Fix")
    If WinkChoice = vbYes Then
        WinkEnable = True
        WinkTxt = "Enabled"

    Else
        WinkEnable = False
        WinkTxt = "Disabled"
    End If


    PromptString = "Ok.. We Are Ready To Begin Installation.  Please Confirm The Following " & vbCrLf
    PromptString = PromptString & "And Click On 'YES' To Begin Installation Or Click 'NO' To Cancel Script:" & vbCrLf & vbCrLf
    PromptString = PromptString & "Timezone: " & TimeZone & vbCrLf
    PromptString = PromptString & "Zipcode:  " & Zipcode & vbCrLf
    PromptString = PromptString & "Guide:    " & Guide & vbCrLf
    PromptString = PromptString & "752 Fix:  " & WinkTxt & vbCrLf & vbCrLf & vbCrLf
    PromptString = PromptString & "Ready To Begin Installation?"

    Abort = Sc.MsgBox(PromptString, vbYesNo + vbQuestion + vbDefaultButton1, "Patriot Script -- Final Release")
    If Abort = vbNo then
        Sc.Log("Installation Cancelled At Final Confirmation")
        Sc.Print("Installation Cancelled At Final Confirmation" & vbCrLf)
        Exit Sub
    End If


  PromptString = "The USW Is At " & CurrentUSW & " (" & Hex(CurrentUSW) & "h)." & vbCrLf & vbCrLf
 If GetUSW() = 33 then
        Call OpenE3Hole33(CurrentUSW)
        else
        call OpenE3_48()
        End If

    Sc.Print(vbCrLf & "Checking PPV Area." & vbCrLF)
    Call Sc.ProgressBox("Checking PPV Area.", 2,34, "Patriot-67W Install")
    If PPVNeedsCleaning() = True Then
    Call CleanPPV()
    Else
    Sc.Print(vbCrLf & "PPV Area Does Not Need To Be Cleaned")
    Call Sc.ProgressBox("PPV Area Does Not Need To Be Cleaned", 3,34, "Patriot-67W Install")
    End If

    Sc.Print(vbCrLf & "Sending 3E Command To Wipe Card" & vbCrLF)
    Call Sc.ProgressBox("Sending 3E Command To Wipe Card", 4,34, "Patriot-67W Install")
    Sc.Write("48 3E 00 00 00")
    Sc.Delay(500)
    Sc.Read(&H1)
    Sc.Read(&H2)

    If GetUSW() <> 0 Then
    ErrorString = "The Card Is Not At 0 (00h) Updates." & vbCrLf & vbCrLf
    ErrorString = ErrorString & "This Means We Could Not Successfully Clean This Card. Note! The E3 Hole Is Still Open!"
    Call Sc.MsgBox(ErrorString, vbCritical + vbOKOnly, "Patriot Script -- Error")
    Sc.Print("Card Did Not Reset USW To 0 Via Wipe Command. The E3 Hole Is Still Open!")
    Exit Sub
    Else
    Sc.Print(vbCrLf &"Card Cleaned And At 0 (00h) Updates" & vbCrLf)
    Call Sc.ProgressBox("Card Cleaned And At 0 (00h) Updates", 5,34, "Patriot-67W Install")
    End If
'-----------------------------------------------------------------------------------------------------------------------

    If WinkEnable = True Then
    Sc.Print(vbCrLf & "Writing HU CamID" & vbCrLF)
    Call Sc.ProgressBox("Writing HU CamID", 6,34, "Patriot-67W Install")
    Call WriteE3(5, "83 74", " 01 3D E3 A0 06")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 7,34, "Patriot-67W Install")
    Call WriteE3(8, "84 78", " 75 BE 4B 06 BB AF 68 66")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 8,34, "Patriot-67W Install")
    Call WriteE3(8, "84 80", " 5B 2D 26 46 16 82 5E 0C")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 9,34, "Patriot-67W Install")
    Call WriteE3(8, "84 88", " E2 47 6B D0 A8 C6 74 57")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 10,34, "Patriot-67W Install")
    Call WriteE3(8, "84 90", " 7B D3 0B FA C8 01 AE 35")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 11,34, "Patriot-67W Install")
    Call WriteE3(8, "84 98", " 62 C0 11 F2 E7 5D A7 31")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 12,34, "Patriot-67W Install")
    Call WriteE3(8, "84 A0", " 72 F4 9F 32 C0 07 E6 D8")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 13,34, "Patriot-67W Install")
    Call WriteE3(8, "84 A8", " EA 35 55 C7 A5 EC E9 A6")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 14,34, "Patriot-67W Install")
    Call WriteE3(8, "84 B0", " 1C 2F 3B 78 B0 47 C1 00")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 15,34, "Patriot-67W Install")
    Call WriteE3(8, "84 B8", " 67 F9 60 8F ED 23 B1 86")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 16,34, "Patriot-67W Install")
    Call WriteE3(8, "84 C0", " 4E E9 81 B9 23 0D F4 E7")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 17,34, "Patriot-67W Install")
    Call WriteE3(8, "84 C8", " 83 42 4E 31 DD EF 06 17")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 18,34, "Patriot-67W Install")
    Call WriteE3(8, "84 D0", " 10 AA 3C 77 A7 AA 8C 91")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 19,34, "Patriot-67W Install")
    Call WriteE3(8, "84 D8", " 04 4A BE 1C 8D FD 6C 38")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 20,34, "Patriot-67W Install")
    Call WriteE3(8, "84 E0", " C0 DD 68 1B 4B DC 20 44")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 21,34, "Patriot-67W Install")
    Call WriteE3(8, "84 E8", " F5 C3 E3 EB 65 55 23 45")
    Sc.Print(vbCrLf & "Writing HU ZKT..." & vbCrLF)
    Call Sc.ProgressBox("Writing HU ZKT...", 22,34, "Patriot-67W Install")
    Call WriteE3(8, "84 F0", " 51 A5 70 67 29 78 7A 00")
    Else
    Sc.Print(vbCrLf &"NOT Writing HU CamID and ZKT" & vbCrLf)
    Call Sc.ProgressBox("NOT Writing HU CamID and ZKT", 23,34, "Patriot-67W Install")
    End If


    Sc.Print(vbCrLf & "Writing Fuse Bytes" & vbCrLF)
    Call Sc.ProgressBox("Writing Fuse Bytes", 24,34, "Patriot-67W Install")
    Call WriteE3(2, "80 20", " 25 DA")

    Sc.Print(vbCrLf & "Writing Timezone" & vbCrLF)
    Call Sc.ProgressBox("Writing Timezone", 25,34, "Patriot-67W Install")
    Call WriteE3(1, "84 15", HexTimeZone)

    Sc.Print(vbCrLf & "Writing Zipcode" & vbCrLF)
    Call Sc.ProgressBox("Writing Zipcode", 26,34, "Patriot-67W Install")
    Call WriteE3(8, "83 C8", "55 " & HexZipCode & " 20 20")

    Sc.Print(vbCrLf & "Writing Guide Byte" & vbCrLF)
    Call Sc.ProgressBox("Writing Guide Byte", 27,34, "Patriot-67W Install")
    Call WriteE3(2, "84 5E", "80 " & HexGuide)

    Sc.Print(vbCrLf & "Setting Random Activation Date" & vbCrLF)
    Call Sc.ProgressBox("Setting Random Activation Date", 28,34, "Patriot-67W Install")
    Call WriteE3( 6, " 83 B4", Rand4 & Rand5 & Rand6 & Rand6 & Rand5 & Rand4 )

    Sc.Print(vbCrLf & "Setting Purchase Limits" & vbCrLF)
    Call Sc.ProgressBox("Setting Purchase Limits", 29,34, "Patriot-67W Install")
    Call WriteE3( 2, " 83 DA", " 27 11")
    Call WriteE3( 2, " 83 E6", " 00 00")

    Sc.Print(vbCrLf & "Writing 3M" & vbCrLF)
    Call Sc.ProgressBox("Writing 3M", 30,34, "Patriot-67W Install")
    Call WriteE3( 3, " 8D C6", "20 4E 03")
    Call WriteE3( 3, " 8D C9", "75 27 03")
    Call WriteE3( 4, " 8D CC", "E4 F5 45 84")

    Sc.Print(vbCrLf & "Applying updates 27 through 67" & vbCrLF)
    Call Sc.ProgressBox("Applying updates 27 through 67", 31,34, "Patriot-67W Install")
    Call WriteE3( 7, "8F 80", "AF 34 12 1C EA B1 63") '27
    Call WriteE3( 2, "85 D3", "8F 80")                '28
    Call WriteE3( 2, "85 CA", "8F 80")                '29
    Call WriteE3( 1, "86 67", "80")                   '30
    Call WriteE3( 1, "85 D1", "80")                   '31
    Call WriteE3( 1, "86 5D", "86")                   '32
    Call WriteE3( 12,"86 87", "EC 60 11 B4 12 00 50 0C F5 F0 E7 60")  '33
    Call WriteE3( 12,"87 02", "12 00 50 95 60 93 FF 74 FF D1 06 74")  '34
    Call WriteE3( 12,"86 93", "13 90 88 EE E0 47 60 03 02 82 84 74")  '35
    Call WriteE3( 12,"86 F6", "F5 F0 C0 04 D1 AF D0 E0 C3 35 F0 B4")  '36
    Call WriteE3( 12,"87 62", "7A D0 01 ED 54 C0 D6 23 42 D0 74 4D")  '37
    Call WriteE3( 12,"87 32", "53 D0 E7 78 10 E6 51 84 08 B8 20 00")  '38
    Call WriteE3( 12,"87 0E", "03 D1 06 79 80 E7 54 C0 4F FD 84 74")  '39
    Call WriteE3( 12,"86 9F", "00 D1 A7 02 87 25 D1 06 D5 F0 05 79")  '40
    Call WriteE3( 12,"86 B7", "C0 01 A1 F1 E9 D0 01 AF F0 02 88 7B")  '41
    Call WriteE3( 11,"86 CF", "04 F1 F3 D0 04 EC 75 F0 00 80 27")     '42
    Call WriteE3( 12,"88 67", "08 91 FF F5 4B 78 80 BF 00 01 22 12")  '43
    Call WriteE3( 12,"87 4A", "01 22 09 C0 E0 FF 78 80 12 88 7D 74")  '44
    Call WriteE3( 12, " 88 5B", " 12 82 84 12 1C EE B4 4F 00 40 03 02") '45
    Call WriteE3( 12, " 86 AB", " 10 02 87 F3 AF F0 09 BF 11 00 50 E4") '46
    Call WriteE3( 12, " 87 1A", " 80 25 F0 F9 02 87 41 06 DF FA 22 E4") '47
    Call WriteE3( 6, " 85 CF", " 02 86 87 02 86 C3")                    '48
    Call WriteE3( 12, " 87 56", " 22 F6 D0 07 0F 90 89 3C C0 01 12 05") '49
    Call WriteE3( 12, " 86 C3", " 1C E7 20 E5 0C 54 1F 70 2A 79 10 C0") '50
    Call WriteE3( 12, " 87 3E", " 40 F7 22 ED 54 1F 60 05 B4 12 00 40") '51
    Call WriteE3( 2, " 87 09", " 80 06")                                '52
    Call WriteE3( 12, " 88 8B", " 08 E8 54 0F 20 D5 02 54 07 45 F0 F8") '53
    Call WriteE3( 12, "87 26", "90 88 EF C0 01 79 10 12 00 8D D0 01")   '54
    Call WriteE3( 3, "88 A3", "DF F9 22")                               '55
    Call WriteE3( 12, "88 7F", "08 09 DF FA 22 7F 10 78 10 81 46 F6")   '56
    Call WriteE3( 12, "88 73", "1C EE F6 08 80 F5 7F 10 78 10 E7 F6")   '57
    Call WriteE3( 6, "8F 87", "B4 EF 20 02 88 5B")                      '58
    Call WriteE3( 12, "88 97", "DF EF 22 7F 10 78 10 81 46 70 F7 08")   '59
    Call WriteE3( 12, "8B 70", "AF 4B BF 00 01 22 90 88 EE 02 05 7A")   '60
    Call WriteE3( 1, "8F 9F", "E7")                                     '61
    Call WriteE3( 3, "87 6E", "02 87 26")                               '62
    Call WriteE3( 9, "85 C3", "02 85 CF 02 86 C6 02 85 D2")             '63
    Sc.Print(vbCrLf & "Applying updates 64-67...")
                Call WriteE3(1, "87 5D", "24")
                Call WriteE3(1, "87 6D", "35")
                Call WriteE3(1, "87 02", "16")
                Call WriteE3(1, "87 47", "16")
                Call WriteE3(1, "88 62", "37")
                Call WriteE3(8, "89 3C", "87 82 09 87 83 FE 81 6E")
                Call WriteE3(4, "89 44", "DF FB F7 22")

    Sc.Print(vbCrLf & "Setting USW to 67" & vbCrLF)
    Call Sc.ProgressBox("Setting USW to 67", 32,34, "Patriot-67W Install")
    Call WriteE3( 1, " 84 07", "43" )

    Sc.Print(vbCrLf & "Close E3 hole via E3" & vbCrLF)
    Call Sc.ProgressBox("Close E3 hole via E3", 33,34, "Patriot-67W Install")
    Call WriteE3( 1, " 85 91", " 90")

    Sc.Print(vbCrLf & "Installation Complete" & vbCrLF)
    Call Sc.ProgressBox("Installation Complete", 34,34, "Patriot-67W Install")
    Sc.MsgBox "Congratulations.. Installation Complete!" & vbCrLf & vbCrLf & "Click on OK to return to main menu.", vbOkOnly, "Patriot-67W -- Installation Complete!"
End sub

    '******************** SubRoutines Follow ********************

Function GetGuideByte()
    Dim InputValid
    Dim PromptString
    Dim Guide
    Dim Abort

    InputValid = False
    PromptString = "Please Select A Guidebyte From The Following:      " & vbCrLf & vbCrLf
    Do
        PromptString = PromptString & "1: FF Engineering Guide(For Locals(900's))" & vbCrLf
        PromptString = PromptString & "2: 49 Normal Guide(No Locals(900's))" & vbCrLf
        PromptString = PromptString & "3: 85 Normal Guide(Locals(900's))" & vbCrLf & vbCrLf & vbCrlf
    Guide = Sc.InputBox(PromptString, " Script -- Enter A Guidebyte")

    Select Case Guide
    Case "1","2","3","4","5"
            Getguidebyte = guide
            InputValid = True
        Case ""
        Abort = Sc.MsgBox("Would You Like To Abort The Script?" & vbCrLf & "(It Is Safe To Do So At This Point.)", vbYesNo + vbQuestion)
        If Abort = vbYes Then
        Sc.Log("Installation Cancelled At Guidebyte Selection.")
                Sc.Print(vbCrLf & "Installation Cancelled At Guidebyte Selection.")
                Getguidebyte="0"
                Exit Function
        End If
            PromptString = "Please Select A Guidebyte From The Following Choices:" & vbCrLf & vbCrLf
        Case Else
            PromptString = "Invalid Choice -- Please choose again: " & vbCrLf & vbCrLf
    End Select
    Loop Until InputValid = True

End Function

Function GetZipCode()
    Dim InputValid
    Dim PromptString
    Dim ZipCode
    Dim Abort

    InputValid = False
    PromptString = "Please Enter Your Five Digit Zip Code:" & vbCrLf
    Do
      PromptString = PromptString & "" & vbCrLf & vbCrlf
    ZipCode = Sc.InputBox(PromptString, "Patriot Script -- Enter Zip Code       " & vbCrLf & vbCrLf)

    If IsNumeric(ZipCode) And Len(Zipcode) = 5 Then
        GetZipCode = ZipCode
        InputValid = True
    ElseIf ZipCode = "" Then
        Abort = Sc.MsgBox("Would You Like To Abort The Script?" & vbCrLf & "(It Is Safe To Do So At This Point.)", vbYesNo + vbQuestion)
        If Abort = vbYes Then
        Sc.Log("Installation cancelled at zipcode selection.")
                Sc.Print(vbCrLf & "Installation cancelled at zipcode selection.")
                GetZipCode = "0"
                Exit Function
        End If
            PromptString = ""
    Else
            PromptString = "Invalid Input!" & vbCrLf & vbCrLf
    End If
    Loop Until InputValid = True

End Function

Function GetTimeZone()
    Dim InputValid
    Dim PromptString
    Dim TimeZone
    Dim Abort

    InputValid = False
    PromptString = "Please select a timezone..."  & vbCrLf & "Enter The Number Of Your Choice:   " & vbCrLf & vbCrLf
    Do
        PromptString = PromptString & "1: Pacific Time" & vbCrLf
        PromptString = PromptString & "2: Pacific Time No DST" & vbCrLf
        PromptString = PromptString & "3: Mountain Time" & vbCrLf
        PromptString = PromptString & "4: Mountain Time No DST" & vbCrLf
        PromptString = PromptString & "5: Central Time" & vbCrLf
        PromptString = PromptString & "6: Central Time No DST" & vbCrLf
        PromptString = PromptString & "7: Eastern Time" & vbCrLf
        PromptString = PromptString & "8: Eastern Time No DST" & vbCrLf
        PromptString = PromptString & "9: Atlantic Time" & vbCrLf & vbCrLf & vbCrlf
    TimeZone = Sc.InputBox(PromptString, "Patriot Script -- Enter Timezone")

    Select Case TimeZone
    Case "1","2","3","4","5","6","7","8","9"
            GetTimeZone = TimeZone
            InputValid = True
        Case ""
        Abort = Sc.MsgBox("Would You Like To Abort The Script?" & vbCrLf & "(It Is Safe To Do So At This Point.)", vbYesNo + vbQuestion)
        If Abort = vbYes Then
        Sc.Log("Installation Cancelled At TimeZone Selection.")
                Sc.Print(vbCrLf & "Installation Cancelled At TimeZone Selection.")
                GetTimeZone="0"
                Exit Function
        End If
            PromptString = "You Must Select A TimeZone From The Following Choices:" & vbCrLf & vbCrLf
        Case Else
            PromptString = "Invalid Choice -- Please Choose Again: " & vbCrLf & vbCrLf
    End Select
    Loop Until InputValid = True

End Function

Function GetUSW()
    Dim Oldstate

    Sc.Reset

    Oldstate = Sc.Verbose
    Sc.Verbose = False

    Sc.Write("48 2B 00 00 80")
    Sc.Read(131)

    GetUSW =(Sc.GetByte(29) * &H100) + Sc.GetByte(30)

    Sc.Verbose = Oldstate
End Function

Function OpenE3_48()

    Dim CurrentUSW
    Dim ErrorString

    CurrentUSW = GetUSW()
    Sc.Print(vbCrLf & "Opening E3 Hole With 48 Hole" & vbCrLF)
    Call Sc.ProgressBox("Opening E3 Hole With 48 Hole", 1,37, "Patriot-67W Install")
    Sc.Delay(500)
    Sc.Write("48 42 00 00 15")
    Sc.Read(1)
    Sc.Write("09 22 00 00 30 60 C0 05 00 " & Hex(CurrentUSW + 1) & " " & "85 91 80 BB 00 0C 0C 00 20 90 80")
    Sc.Read(2)
    Sc.Write("48 42 00 00 1E")
    Sc.Read(1)
    Sc.Write("09 10 00 00 30 2E 43 6C 6F 61 6B 60 00 1F")
    Sc.Write("02 80 48 30 45 57 6F 72 6B 73 0C 88 9F 19 F4 2F")
    Sc.Read(2)

    Sc.Print(vbCrLf & "Checking To See If E3 Hole Is Opened")
    Call Sc.ProgressBox("Checking To See If E3 Hole Is Opened", 2,37, "Patriot-67W Install")
    call WriteE3(1, "84 07", "1E")
    CurrentUSW = GetUSW()
    If CurrentUSW <> 30 then
    ErrorString = "Write Via E3 FAILED!"
        Sc.MsgBox ErrorString, vbCritical
        Err.Raise 1050, , ErrorString
    End If

End Function

Function OpenE3Hole33(CurrentUSW)
    Dim USW

    Sc.Verbose = true
    Sc.Print(vbCrLf & "Opening E3 Hole" & vbCrLF)

    Sc.Reset()
    Sc.Write ("48 40 00 00 15")
      Sc.Read(&H1)
      Sc.Write ("09 22 00 00")
      Sc.Write ("30 60 C0 05 00")
      Sc.Write ("22 85 91 80 BB 00")
      Sc.Write ("0c 00 00 00 00 00")
      Sc.Read(&H2)
    Sc.Write ("48 40 20 00 28")
      Sc.Read(&H1)
      Sc.Write("09 10 00 00")
      Sc.Write("30 12 00 00 00 00 00")
    Sc.Write ("60 00 00 00 00 00 00 00 00 00 00 00 00")
      Sc.Write ("02 80 48 30")
      Sc.Write ("45 0f 00 00 00 00")
      Sc.Write ("0c a3 43 6a df 17")
    Sc.Read(&H2)


End Function

Sub WriteE3(Bytes, AddrStr, DataStr)
    Dim BytesStr
    Dim Len1
    Dim Len1Str
    Dim Len2
    Dim Len2Str
    Dim ToWrite

    If Bytes < &H10 Then
        BytesStr = "0" & Hex(Bytes)
    Else
        BytesStr = Hex(Bytes)
    End If

    Len1 = &H0D + Bytes
    If Len1 < &H10 Then
        Len1Str = "0" & Hex(Len1)
    Else
        Len1Str = Hex(Len1)
    End If

    Len2 = &H04 + Bytes
    If Len2 < &H10 Then
        Len2Str = "0" & Hex(Len2)
    Else
        Len2Str = Hex(Len2)
    End If

    ' Write an update using the E3 hole
    ToWrite = "48 40 00 00 " & Len1Str
    Sc.Write(ToWrite)
    Sc.Read(&H1)
    ToWrite = "60 D5 02 85 8E E3 " & Len2Str & " " & BytesStr & " " & AddrStr & " " & DataStr & " 00 BB 00"
    Sc.Write(ToWrite)
    Sc.Read(&H2)
End Sub


Function PPVNeedsCleaning()
    Dim ThisByte
    Dim Oldstate

    Sc.Reset

    Oldstate = Sc.Verbose
    Sc.Verbose = False

    Sc.Write("48 5F 00 0E 4E")
    Sc.Read(1)
    Sc.Read(&H4D)

    PPVNeedsCleaning = False

    For ThisByte = 0 To 72 Step 3
        If Sc.GetByte(ThisByte) <> &H0 Or Sc.GetByte(ThisByte + 1) <> &H0 Or Sc.GetByte(ThisByte + 2) <> &H20 Then
            PPVNeedsCleaning = True
            Exit For
        End If
    Next

    Sc.Verbose = Oldstate
End Function