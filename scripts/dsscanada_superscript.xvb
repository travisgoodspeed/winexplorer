'============================================================================
' DSSCanada Superscript 1.0
'============================================================================
' This script is to be used at your own risk, as with all public files.
' This script has all the functionality of Extreme HU, and much more.
' Based on RS_Unloop, SuperClean, and other fine scripts.
' This script will program, write, clean and unloop faster than Extreme HU.
'***************************************************************
' DSSCanada SuperScript 1.0
'***************************************************************
' Begin **********
Option Explicit
    Const dss_DefaultButton1 = 0
    Const dss_DefaultButton2 = 256
    Const dss_DefaultButton3 = 512
    Const fsoError = -1
    Const fsoOpenRead = 0
    Const fsoOpenWrite = 1
    Const fsoOpenReadWrite = 2
    Const fsoSEEK_SET = 0
    Const fsoSEEK_CUR = 1
    Const fsoSEEK_End = 2
    Const FileFilter = "All Eprom Files (*.bin, *.crd)|*.bin;*.crd;|Bin Files (*.bin)|*.bin|Crd Files (*.crd)|*.crd|All (*.*)|*.*"
    Const HexFilter = "Hex Files (*.hex)|*.hex"
    Const Ins = &h08
    Const InsParam1 = &h00
    Const InsParam2 = &h00
    Const InsLen = &h34
    Const Software="DSSCanada SuperScript 1.0"
    Dim OutFile
    Dim InFile
    Dim FileName
    Dim HUBinFile
    Dim XORedByte(31)
    Dim Key12byte(11)
    Dim Choice
    Dim PChoice
    Dim SpendingLimitHex, Spend_Limit, SpendingLimitDec,Default_SpendLimit
    Dim D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,A1,A2
    Dim ScriptStart
    Dim ScriptEnd
    Dim DAC
    Dim DAC4C
    Dim Delaye
    Dim Delay5C
    Dim glttl,Attempts
    Dim chglch
    Dim glchs
    Dim CAMIDDec1
    Dim USWHex1
    Dim MenuPrompt
    Dim Read
    Dim Glrngchoice
    Dim ATR
    Dim Redo
    Dim randac
    Dim dacmsg
    Dim atrlock
    Dim gldly
    Dim loopdelay
    Dim autorot
    Dim addusw
    Dim RetVal
    Dim BRetVal
    Dim CRetVal
    Dim RetVal2
    Dim ZipCode
    Dim ZPtemp
    Dim ZPtempx
    Dim ZPtemp1
    Dim ZPtemp2
    Dim ZPtemp3
    Dim ZPtemp4
    Dim ZPtemp5
    Dim ZPCode
    Dim PPV1
    Dim PPV2
    Dim PPVrepeat1
    Dim PPVrepeat2
    Dim local
    Dim GUIDEbyte
    Dim GUIDEbyte2
    Dim TZone
    Dim rating
    Dim FuseBytes
    Dim PPVDollar
    Dim OptionByte
    Dim Default_ZipCode
    Dim Default_Local
    Dim Default_GuideByte
    Dim Default_TimeZone
    Dim Default_Rating
    Dim Default_FuseByte
    Dim Default_PPVDollar
    Dim Default_OptionByte
    Dim Ins4C_Advanced
    Dim TempScriptStart
    Dim TimeInMinutes
    Dim TimeInHours
    Dim TimeElapsed
    Dim RunTime
    Dim ATRtry
    Dim chk2000
    Dim Good
    Dim UnloopChoice
    Dim UnloopChoice2
    Dim bin
    Dim NoFile
    Dim gltCounter
    Dim gltVal
    Dim GetLocalVal
    Dim GlitchFile
    Dim GlitchFileWork
    Dim Percentage
    Dim PercentageClean
    Dim PercentageRead
    Const TxtFilter = "Text Files (*.txt)|*.txt"

' *************  Customize your Default Area Settings Here  ****************
Default_ZipCode =    "12345"
Default_Local =      "00" ' Must match the Guide table.
Default_GuideByte =  "FF"
Default_TimeZone =   "A6"
Default_Rating =     "09"
Default_FuseByte =   "25DA"
Default_SpendLimit =  "0000"
chk2000          =    1 ' Set 1 or 0 : 1 to check 2000 Data after unlooping
'****************************************************************************
'***************      Default PPV Settings Here         *********************
Default_PPVDollar =  "150"
Default_OptionByte = "6B"
' ***************************************************************************
' **************       Default Glitch Settings Here     *********************
loopdelay      =      20   ' Play with this value for 4C and ROM glitch timing, 25, 30, up to 90
Ins4C_Advanced =     "Yes" ' Larger dac range (Don't use "no")
bin = "Default.bin"
Nofile = 0
GlitchFileWork = 0
' ***********************************************************************
Sub Main()
    Dim SWChoice
    Dim RChoice
    Dim FIXChoice
    Dim RWChoice
    Dim ErrorString
    Dim MenuPrompt
    Dim DChoice
    Dim EChoice
    Dim Choice
    Dim PromptString
    Dim RetValue
    Dim GotInput
    Dim ThisChar
    Dim Version
    Dim Password
    Dim Cchoice
    Dim D0
    Dim D1
    Dim D2
    Dim D3
    Dim D4
    Dim D5
    Dim D6
    Dim D7
    Dim D8
    Dim D9

 Sc.Verbose = 0 ' Set to 1 for display of card responses
    gldly = 80     ' Start point for Main unlooper delay in Do-Loop
    glttl = 0
    d0 = 0

    If Sc.Version < 4.6 Then
        ErrorString = "You need version 4.5 or greater of WinExplorer to run this script"
        Sc.MsgBox ErrorString, vbCritical
        Err.Raise 1050, , ErrorString
        End If

    if ChipVer <> 1 then
        sc.MsgBox("You need UL4S to run this script." & VbCr & "Flash your chip with the UL4S code")
        Exit Sub
     End If

Call Card_Reset()
Call IsCardPresent()
   if ReceiveATR() > 0 Then
    MenuPrompt = "ATR : " & ATR
    Call Sc.Msgbox (MenuPrompt, VbInformation, "Your Card Has a Good ATR !")
     sc.print "ATR : " & ATR & VbCr
   End if
Do
    MenuPrompt = dacmsg & "Welcome to the DSSCanada Superscript.  This script has all of the functionality of Extreme HU"  & vbCrLf
    MenuPrompt = MenuPrompt & "and much more.  Make a selection to begin, and then follow the popup instructions carefully." & vbCrLf& vbCrLf
    MenuPrompt = MenuPrompt & "READ:                  Check Card Info  |  Read Card  |  Fix 4th Byte  |  Change Area Info" & vbCrLf
    MenuPrompt = MenuPrompt & "WRITE:                Clone Bin  |  Write Hex" & vbCrLf 'read 4c
    MenuPrompt = MenuPrompt & "SUPERCLEAN:    Critical Card Cleaning Utility" & vbCrLf
    MenuPrompt = MenuPrompt & "UNLOOP:             Quick Unlooping Utility" & vbCrLf
    MenuPrompt = MenuPrompt & "EXIT:                    Exit Script" & vbCrLf
    RWChoice = Sc.ButtonBox(MenuPrompt, VbInformation, "DSSCanada SuperScript 1.0", "Read", "Write", "Superclean", "Unloop", "Exit")

Select Case RWChoice
Case "0"
Case "5"
  Exit Sub
''''''''''''''''''''''''''''''''''''''''''''

Case "1" 'Read4c
         CRetVal = Sc.ButtonBox("BUTTON                 |             EXTREME HU FUNCTIONALITY" & VbCr & "----------------------------------------------------------------------------------------------------------------------"& VbCr & "1. Card Info              |            CARD ---> Check Card Info" & VbCr &"2. Read Card           |            CARD ---> Read Card"& VbCr & "3. Fix 4th Byte          |            EEPROM ---> Fix ATR 4th Byte"& VbCr & "4. Area Info              |            CARD ---> UTLITIES ---> Change Area Info "& VbCr &"5. Exit                       |            Return to Main Menu"& VbCr,  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0", "1. Card Info", "2. Read Card", "3. Fix 4th Byte", "4. Area Info", "5. Exit")

          If CRetVal = 1 Then
             If Chk4Card Then
             If(GetATR = False) then
             Call OopsLooped()
        Else
             Call ReadInfo()
             Call ShutDownCard()
         End If
  End If
  End If

          If CRetVal = 2 Then
              If(GetATR = False) then
                   Call OopsLooped()
                   Else
                   Sc.Write("A1")
                   Call unlock()
                   Call GetSaveFile()
                   Call ReadCard()
                   Call ShutDownCard()
              End If
          End if

 If CRetVal = 3 Then
           If (GetATR = False) Then
                         Call OopsLooped()
                      Else
                         TempScriptStart = Now
                         TimeElapsed = 0
                         TimeInMinutes = 0
                         TimeInHours = 0
                         Sc.Print VbCr & "Fixing The 4th Byte of The ATR ....." & VbCr & VbCr
                         Call LoadBootStrap()
                         Call ExtractCardInfo()
                         Call WriteViaLoader("2465","0000","E")    ' FIX 4TH BYTE OF ATR
                         Sc.Print VbCr & "The 4th Byte Of The Atr Was Fixed." & VbCr
 Call ShutDownCard()
                      end if


          End if

 If CRetVal = 4 Then
       If(GetATR = False) then
             Call OopsLooped()
 Else
 Call AreaInfo()
End If
          End if

        If CRetVal = 5 Then
'Exit
        end if

        Case "2" ' Write4c

       DChoice =Sc.ButtonBox("BUTTON         |      EXTREME HU FUNCTIONALITY" & VbCr&"--------------------------------------------------------------------------------------" & VbCr&"1. Clone Bin     |      CARD ---> CLONE ---> Bin to Card" & VbCr & "2. Write Hex    |      CARD ---> WRITE ---> Hex File"& VbCr & "3. Exit              |      Return to Main Menu"& VbCr & VbCr & "NOTE: This program cannot write encrypted / password protected hex files"&VbCr,  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0","1. Clone Bin", "2. Write Hex", "3. Exit")
        Select Case DChoice

        Case "1" 'Write bin
        If(GetATR = False) then
            Call OopsLooped()
        Else
        Call GetWriteFile() ' File to write
            If FileName <> "" Then
              Sc.Write("A1")
              Call LoadBootStrap()
              CAll WriteCard(32)

  End If
     End If
            Call ShutDownCard()

        Case "2" 'Write Hex
        If(GetATR = False) then
            Call OopsLooped()
        Else
        Call Load3M()
        End If
        Call ShutDownCard()

Case "3"            'Exit

Case Else
                MenuPrompt = "Invalid Input!" & vbCrLf

       End Select

Case "3" 'Clean Cards
  if(GetATR = False) then
        Call OopsLooped()

        Else
       EChoice =Sc.ButtonBox("Superclean - Repairs, Updates, and Cleans Your HU Card" & VbCr,  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0","SuperClean", "Exit")

 End if
        Select Case EChoice
        Case " 0"
        Exit Sub
        Case "1"
     if(GetATR = False) then
        Call OopsLooped()
        Else

       Call LoadBootStrap()
       Call CleanCard()
       Call AreaInfo()
       Call ShutDownCard()
     End If

Case "2"            'Exit

Case Else
                MenuPrompt = "Invalid Input!" & vbCrLf

End Select

Case "4", ""  ' Unloop Card
                   RetVal = 3

                 If (GetATR = True) Then
                     RetVal=Sc.ButtonBox("This card appears to have a good ATR."& VbCr & "                 Continue anyway?" ,  vbDefaultButton2 + vbQuestion, " Good ATR Detected!", "Yes", "No")
                     If RetVal = 1 then RetVal = 3
                 End if

                 If RetVal = 3 Then
                     HUBinfile = False
                     Call Unloop_Range
                     If Unloopchoice = 9 Then Exit Sub
                      If (BootCard())= 1 Then
                        Sc.Print VbCr & "Select a good eeprom bin to write to the card" & VbCr
                        Call GetWriteFile()
                        If HUBinFile = True Then
                            Call WriteCard(32)
                           Call ShowAtr(1)
                        Else
                            Fs.FileClose(InFile)
                        End If
                    End If
                 End If

End Select

Loop While True = True

End Sub ' End Sub Main()

Sub Unloop_Range

    Do
        MenuPrompt = "WELCOME TO RS UNLOOP - The Fastest Unlooping Program Available" & vbCrLf & vbCrLf
        MenuPrompt = MenuPrompt &"TIPS AND TRICKS" & vbCrLf
        MenuPrompt = MenuPrompt &"a) Put your dip switches on your loader to 1 and 5 down" & vbCrLf
        MenuPrompt = MenuPrompt &"b) Use external power supply set at 7.5V center pin positive - Radio Shack Part 273-1662" & vbCrLf
        MenuPrompt = MenuPrompt &"c) Start with RS1 for 5 minutes.  If your card does not unloop, move on to RS2...etc..." & vbCrLf
        MenuPrompt = MenuPrompt &"d) Make sure you have a good bin to apply to the card after unlooping" & vbCrLf
        MenuPrompt = MenuPrompt &"e) After unlooping, return to the main menu and SuperClean your card" & vbCrLf
        Unloopchoice = Sc.ButtonBox(MenuPrompt, 0, "DSSCanada SuperScript 1.0", "RS1", "RS2", "RS3", "RS4", "More")

        Select Case Unloopchoice
            Case "1"            'Group Mod1
            Case "2"            'Group Mod2
            Case "3"            'Group Mod3
            Case "4"            'Group Mod4
            Case "5"            'More

            Case Else
                MenuPrompt = "Invalid Input!" & vbCrLf
        End Select

    Loop until Unloopchoice > 0 And Unloopchoice < 6
    If Unloopchoice = 1 then Unloopchoice = 1
    If Unloopchoice = 2 then Unloopchoice = 2
    If Unloopchoice = 3 then Unloopchoice = 3
    If Unloopchoice = 4 then Unloopchoice = 4
    If Unloopchoice = 5 then Call Unloop_Range2
    End Sub

Sub Unloop_Range2

    Do
MenuPrompt = "WELCOME TO RS UNLOOP (cont.) - The Fastest Unlooping Program Available" & vbCrLf & vbCrLf
        MenuPrompt = MenuPrompt &"TIPS AND TRICKS" & vbCrLf
        MenuPrompt = MenuPrompt &"a) Put your dip switches on your loader to 1 and 5 down" & vbCrLf
        MenuPrompt = MenuPrompt &"b) Use external power supply set at 7.5V center pin positive - Radio Shack Part 273-1662" & vbCrLf
        MenuPrompt = MenuPrompt &"c) Start with RS1 for 5 minutes.  If your card does not unloop, move on to RS2...etc..." & vbCrLf
        MenuPrompt = MenuPrompt &"d) Make sure you have a good bin to apply to the card after unlooping" & vbCrLf
        MenuPrompt = MenuPrompt &"e) After unlooping, return to the main menu and SuperClean your card" & vbCrLf
        Unloopchoice = Sc.ButtonBox(MenuPrompt, 0, "DSSCanada SuperScript 1.0", "RS5", "RS6", "RS7", "RS8", "Exit")

Select Case Unloopchoice
            Case "5"            '
            Case "6"            '
            Case "7"            '
            Case "8"            '
            Case "9"            '

Case Else
                MenuPrompt = "Invalid Input!" & vbCrLf

       End Select

    Loop until Unloopchoice > 0 And Unloopchoice < 6

    If Unloopchoice = 1 then Unloopchoice =11
    If Unloopchoice = 2 then Unloopchoice = 6
    If Unloopchoice = 3 then Unloopchoice = 7
    If Unloopchoice = 4 then Unloopchoice = 8
    If Unloopchoice = 5 then Unloopchoice = 9
    End Sub


Sub Read_Write_Clean_Aborted()
    Sc.MsgBox("Function aborted !!!")
End Sub
'********************************************************
Sub Glitch1()
glttl = 1
 chglch =1

 RetVal = 3
 randac = 1

     if(GetATR = True) then

         RetVal=Sc.ButtonBox("This card appears to have a good ATR"& VbCr& "Unloop anyway",  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0", "Yes", "No")
         if RetVal = 1 then RetVal = 3
         End if

     if RetVal = 3 then

           Call BootCard("Write")
            sc.print VbCr & "Select a good EEProm bin to write to the card" & VbCr & VbCr
           Call GetWriteFile()

           If HUBinFile = True then
           CAll WriteCard(32)
           Call ShowAtr(1)

           else
                     Fs.FileClose(InFile)
     end if
end if

If chk2000 Then
  Call Check2000()
  exit sub
  Call ShutDownCard()
 Else
    MenuPrompt = "Invalid Input!" & vbCrLf

   Exit Sub
End If
End Sub
'********************************************************
Sub LoadGlitch()

GlitchFileWork = 0
glttl = 1
 chglch =1

 RetVal = 3
 randac = 1

     if(GetATR = True) then

         RetVal=Sc.ButtonBox("This card appears to have a good ATR"& VbCr& "Unloop anyway",  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0", "Yes", "No")
         if RetVal = 1 then RetVal = 3
         End if

     if RetVal = 3 then

     GlitchFile = Fs.FileOpEndialog(TxtFilter, "    Please select a .txt(*.txt) file to use to glitch the card", "LoadGlitchFile.txt")
     If GlitchFile <> "" Then
        If Fs.FileExists(GlitchFile) = 0 Then
           Sc.MsgBox("Glitch File Not Found.")
           Exit Sub
        End If
     Else
        Sc.MsgBox("Load Glitch File Aborted.")

        Exit sub
     End If

  Do
       Call LoadGlitchBoot
       Loop until GlitchFileWork = 1

            sc.print VbCr & "Select a good EEProm bin to write to the card" & VbCr & VbCr
           Call GetWriteFile()

           If HUBinFile = True then
           CAll WriteCard(32)
           Call ShowAtr(1)

           else
                     Fs.FileClose(InFile)
     end if
end if

If chk2000 Then
  Call Check2000()
  exit sub
  Call ShutDownCard()

 Else
    MenuPrompt = "Invalid Input!" & vbCrLf

   Exit Sub
End If
End Sub

'*****************************************************************
Sub FourB()
glttl = 1
 chglch =1

 RetVal = 3
     if(GetATR = True) then

         RetVal=Sc.ButtonBox("This card appears to have a good ATR"& VbCr& "Unloop anyway",  vbDefaultButton2 + vbQuestion, "DSSCanada SuperScript 1.0", "Yes", "No")
         if RetVal = 1 then RetVal = 3
      End if

       if RetVal = 3 then

           Call BootFourB("Write")
           sc.print VbCr & "Select a good EEProm bin to write to the card" & VbCr & VbCr
           Call GetWriteFile()

           If HUBinFile = True then
           CAll WriteCard(32)
           Call ShowAtr(1)

           else
                     Fs.FileClose(InFile)
     end if
end if

If chk2000 Then
  Call Check2000()
exit sub
  Call ShutDownCard()
End If

    MenuPrompt = "Invalid Input!" & vbCrLf

End Sub
' ****************************** End Main Sub **************************************

Function setuploader()
sc.print "Setting up for unlooper." & VbCr
    Wx.BaudRate = 115200
    Wx.ResetBaudRate = 115200
    Wx.Parity = 0                    ' 0 = None, 1 = Odd, 2 = Even, 3 = Mark, 4 = Space
    Wx.StopBits = 0                  ' 0 = 1 stop bit, 1 = 1.5 stop bits, 2 = 2 stop bits
    Wx.DTRControl = 0                ' Initial state of DTR  0 = off, 1 = on
    Wx.RTSControl = 1                ' Initial state of RTS  0 = off, 1 = on
    Wx.ResetDelay = 0                ' In microseconds
    Wx.ByteDelay = 0                 ' In microseconds
    Wx.RxByteTimeout = 200           ' In milliseconds
    Wx.ResetMode = 2                 ' 0 = No Resets, 1 = ISO Reset (Expect a ATR), 2 = Device Reset (No ATR)
    Wx.ResetLine = 1                 ' 0 = Toggle RTS for Reset, 1 = Toggle DTR for Reset
    Wx.ByteConvention = 1            ' 0 = Inverse, 1 = Direct
    Wx.FlushEchoByte = 0             ' 0 = no flush, 1 = flush - A Phoenix interface will echo each byte transmitted.
    Wx.FlushBeforeWrite = 0          ' 0 = no flush, 1 = flush - Flush the receive buffer before each write to strip off Null bytes.
    Wx.IgnoreTimeouts = 1            ' 0 = Abort script on a receive timeout, 1 = Ignore all receive timeouts
    Wx.ResetAfterTimeout = 0         ' 0 = Don't reset after a timeout, 1 = do a reset after a timeout  - Not used if "IgnoreTimeouts=0"
    Wx.LogTransactions = 0           ' 0 = Don't log transactions, 1 = log transactions
    Wx.DisplayUSW = 0                ' Display USW after script complete 0 = no, 1 = yes
    Wx.DisplayFuse = 0               ' Display Fuse after script complete 0 = no, 1 = yes

End function

'*********************************************************
Sub LoadBootStrap()

    Dim RetValue
    Dim GotInput
    Dim DAC4C
    Dim Counter
    Dim Attempts
    Dim OldDelay
    dim d9

    Counter = 0
    Attempts = 1
    OldDelay = loopdelay
    DAC4C = &h95

    Call IsCardPresent()

    Do

    For DAC4C = &h95 to &h70  step -1

        Sc.Write("A1")
        GotInput = False
        If loopdelay > 100 Then
          loopdelay = 20
        End If
        Call Sc.ProgressBox ("Please be patient while Glitching...     Attempts:        " & Attempts & vbcr & "                                                           DAC4C:        " & HexString(DAC4C,2), 1, 999, "UnLooper | Loader")

        Sc.Write("06100E10019300") 'was Sc.Write("06100E10019300")
        Sc.Delay(loopdelay) ' was 80 now 20
        Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

        Sc.Write("B0")
        Sc.Write(HexString(DAC4C,2))
        Sc.Write("0C 11 15 C4 48 48 FF 56 B9 70 C9 08 00") 'was Sc.Write("0B 15 C4 48 48 FF 56 B9 70 C9 08 00")

        Sc.Delay(loopdelay) ' was 80
        If sc.BytesInBuffer > 0 then
            Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)
        else
            Call Sc.ProgressBox ("", 0, 0, "")
            Call OopsLooped()
            Exit Sub
        end if

    Sc.Write("B0 82")
    D9 = &h43
        Sc.Write(" 31EE0000000069FFFFFFFF523FFD2284E172400772FF14C5E2AB0100C3DA07F88C0100000000000000000000000000000000")

        if Sc.Read(&h02) < 2 then Sc.Read(&H02)
        Sc.Write("0EC06920035004200150030D" & Hexstring(D9,2)&"0000")

        Sc.Read(&h02)
        Sc.Write("028000")
        if Sc.Read(&h02) = 2 then
                RetValue = sc.getbyte(1)
            else
                RetValue = 0
        end if
        if RetValue > 0 then
           RetValue = sc.read(RetValue)

        If Sc.GetByte(&h0) = &h84 Then
           GotInput = True
           Exit For
        end if
        Else
           GotInput = False
        End If

Counter = Counter + 1
Attempts = Attempts + 1
    Next

    loopdelay = loopdelay + 5
    sc.print "Trying Loop Delay: " & loopdelay & VbCr

    Loop Until GotInput = True

    Sc.Write("42FF225272FF14E1E2D007E2D029E2D02A77800718753F07D307D807C5E2AB0060C3DA07F8726015D404E700D57640070DD3078ECEFB70012ADA07F700C49E2A00FA00")
    Sc.Read(&h02)
    Sc.Print "----------------------------------------------------------------" & vbCr
    Sc.Print "Bootstrap Loaded using 4C Glitch Dac value : " & DAC4C & VbCr
    Sc.Print "----------------------------------------------------------------" & vbCr
    Call Sc.ProgressBox ("", 0, 0, "")
    loopdelay = OldDelay

End Sub
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub OopsLooped1()
    Dim ErrorString
    Sc.Write("A0")              ' Turn the LED off
    Sc.Write("020200")          ' Shutdown card
    ErrorString = "Card is not returning an ATR." &VbCr & "The card may not be fully Inserted" & VbCr &"or the card contacts may be dirty." & VbCr & "If everything is ok then the card is looped"&VbCr& "and you must Unloop the card first !"
    Sc.MsgBox ErrorString, vbCritical
End Sub
'*********************************************************
Sub GetSaveFile()

        If Good <> 1  Then
            FileName = Fs.FileSaveDialog(FileFilter, "Please select a name for the new bin file", "Default.bin")
        Else
            FileName = Fs.FileSaveDialog(FileFilter, "Please select a name for the new bin file", USWHex1 & "-" & CAMIDDec1 & ".bin")
        End If
    If FileName <> "" Then
        OutFile = Fs.FileCreate(FileName)
    end if
End Sub
'*********************************************************
Sub GetWriteFile()
Fs.FileClose(InFile)
Fs.FileClose(OutFile)
    Dim FileSize
    FileName = Fs.FileOpEndialog(FileFilter, "    Please select a valid HU EEProm (*.bin) file to write to the card", "Default.bin")

    If FileName <> "" Then
        If Fs.FileExists(FileName) = 0 Then
            Sc.MsgBox("The file does not exist")
        Else
            InFile = Fs.FileOpen(FileName, fsoOpenRead)
        End If
    End If

    FileSize = Fs.FileSeek(InFile, 0, fsoSEEK_End)

    If FileSize <> "8192" Then
        Sc.MsgBox("This file is NOT a valid HU bin file" & vbcr & "or the bin file you are trying to open" & vbcr & "is being used by another program")
        HUBinFile = False
        FileName = ""
        Call ShutDownCard()
        Exit Sub
    Else
        HUBinFile = True
    End If
End Sub ' End Getfile

'*********************************************************
Sub WDTMR()
    Dim RetValue

Sc.Write("05150E108000")'SET WDTMR
sc.delay(70)
Sc.Read(&h02)
        RetValue = Sc.GetByte(&h01)
        Sc.Read(RetValue)
end sub

'*********************************************************
Sub IsCardPresent()

    Dim RetValue
    Dim GotInput

    Do
        Sc.Write("A0")                ' Turn the LED off
        Sc.Write("80")                ' Is card present?
        Sc.Delay(100)
        If Sc.BytesInBuffer > 0 Then
            Sc.Read(&h01)
            RetValue = Sc.GetByte(0)
        End If

        If RetValue = &h0 Then
            Call Sc.ProgressBox ("*** Please insert your card... ***", 1, 999, "                            Card is not being detected!")
            GotInput = False
        Else
            If RetValue = &hFF Then
                GotInput = True
            Else
                If RetValue <> &h0 or RetValue <> &hFF Then
                    Sc.Write("A0")                ' turn the LED off
                    Sc.Write("020200")
                    Sc.Delay(100)
                    If Sc.BytesInBuffer > 1 Then
                        Sc.Read(&h02)
                        GotInput = False
                    Else
                        GotInput = False
                    End If
                End If
            End If
        End If
    Loop Until GotInput = True

End Sub
'*********************************************************
Function HexString(Number,Length)
   Dim RetValue
    Dim CurLen
    RetValue=Hex(Number)
    CurLen=Len(RetValue)
    If CurLen<Length Then
        RetValue=String(Length-CurLen,"0") & RetValue
    End If
    HexString=RetValue
End Function
'*********************************************************
Function Hex2Dec(HexNumber)
    Dim DecimalValue
    Dim DigitCount
    Dim Digit
    Dim HexDigit

    HexNumber = Replace(UCase(HexNumber), " ", "")
    DigitCount = Len(HexNumber)

    For Digit = 1 To DigitCount

        HexDigit = Mid(HexNumber, Digit, 1)
        If Asc(HexDigit) < 58 Then
            DecimalValue = HexDigit * 16 ^ (DigitCount - Digit)
        Else
            DecimalValue = (Asc(HexDigit) - 55) * 16 ^ (DigitCount - Digit)
        End If
        Hex2Dec = Hex2Dec + DecimalValue
    Next

End Function
'*********************************************************
Function GetATR ()
verbose = 0
    Dim temp
    Call Sc.ProgressBox(0,0,0,0)
    Sc.Write("06100E10019300")
    Sc.Delay(300)
    Sc.Read(&h02)
    temp = Sc.GetByte(&h01)
    Sc.Read (temp)

    if(temp <> 20) then
        GetATR = False
    else
        GetATR = True
    End if

End Function
'*********************************************************
Sub RndGr

    Dim g1,g2,g3,g4,g5,g6
    Dim dly,v

RANDOMIZE TIMER

  sc.verbose = false

  for v = 1 to 800
    g1 = INT(RND * &hFF)
    g2 = INT(RND * &hFF)
    g3 = INT(RND * &hFF)
    g4 = INT(RND * &hFF)
    g5 = INT(RND * &hFF)
    g6 = INT(RND * &h4F) + &h80
    dly= INT(RND * &h200)

    sc.write("B0" & HexString(g6,2))

    sc.write("111f0120" & HexString(dly,4) & "0c" & HexString(g1,2) & "0c" & HexString(g2,2) & "0a" & "0c" & HexString(g3,2) & "0c" & HexString(g4,2) & "0c" & HexString(g5,2) & "00")
    sc.read(2)
  next
End Sub
'***************************************************************************************8

Sub OopsLooped()

Sc.MsgBox("Card is not returning an ATR." &VbCr & "The card may not be fully Inserted" & VbCr &" or the card contacts may be dirty." & VbCr & "If everything is ok then the card is looped"&VbCr& "You must Unloop the card before using this option ")

End Sub
'*********************************************************
Function ShowAtr(displaytype)

    Dim cnt,tmp,b,Msg

    Msg="DSSCanada SuperScript 1.0"
    tmp=""

    sc.write("0610010E109300")

    if Sc.Read(&h02) > 1 then
        cnt = sc.getbyte(1)
    else
        cnt = 0
    end if

    if displaytype = 1 then
        tmp="Card Unlooped Successfully"+VbCr+"ATR Returned:"+VbCr
    end if

    if cnt > 0 then
        cnt = sc.read(cnt)

    for b = 0 to cnt -1
      tmp=tmp & HexString(sc.getbyte(b),2) & " "
    next

    if displaytype = 1 then
      sc.print VbCr & tmp & VbCr
      cnt  = Sc.ButtonBox(tmp, 0, Msg, "Ok")
    else
    ShowAtr = tmp
    end if

    else
    tmp=""
    tmp=tmp+"Card did not return an ATR"+VbCr+"Try to unloop the card again"+VbCr
    tmp=tmp+"This happens sometimes when the card"+VbCr
    tmp=tmp+"doesn't take the EEProm write"
    cnt = Sc.ButtonBox(tmp, 0,Msg , "Ok")

    end if

End Function
'*********************************************************
Sub ProgUpdate(pg,atrlock)
    Dim mtries
    Dim i
    Dim Msg

   Call FormatTime

   Msg="Glitches applied to card thus far " & glttl & "  Elapsed Time: " + FormatNumber((CDbl(Now) - CDbl(ScriptStart)) * 24 * 60, 2, True, True, True) + " minutes"
    if atrlock = 1 then
       Msg=Msg+VbCr+"Values of D1-D9: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 &vbcr
       Msg=Msg+"ATR locked!"  + "                         Bootloader Attempts: " & (d0) & VbCr
    else
       Msg=Msg+VbCr+"Values of D1-D9: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 &vbcr
       Msg=Msg+"Attempting to lock onto ATR." + "      Bootloader Attempts: " & (d0)  & vbcr
    end if
Call Sc.ProgressBox(Msg,pg,33,"DSSCanada SuperScript 1.0:  " & "Glitch # " & glttl & "   Clock Time " & RunTime)
      ATRtry = ""

End Sub
'*********************************************************
Function FormatTime

    TimeElapsed = FormatNumber((CDbl(Now) - CDbl(TempScriptStart)) * 24 * 60 * 60, 0, True, True, True)
    If TimeElapsed > 59 then
       TempScriptStart = Now
       TimeInMinutes = TimeInMinutes + 1
       TimeElapsed = 0
    End If

    If TimeInMinutes > 59 then
       TempScriptStart = Now
       TimeInHours = TimeInHours + 1
       TimeElapsed   = 0
       TimeInMinutes = 0
    End If

    If TimeInHours > 0 then

       If TimeElapsed < 10 then
          If TimeInMinutes < 10 then
             RunTime="" & TimeInHours & ":0" & TimeInMinutes & ":0" & TimeElapsed
          Else
             RunTime="" & TimeInHours &  ":" & TimeInMinutes & ":0" & TimeElapsed
          End If
       else
          If TimeInMinutes < 10 then
             RunTime="" & TimeInHours & ":0" & TimeInMinutes & ":" & TimeElapsed
          Else
             RunTime="" & TimeInHours &  ":" & TimeInMinutes & ":" & TimeElapsed
          End If
       End If

    else

       If TimeElapsed < 10 then
          If TimeInMinutes > 0 then
             RunTime="" & TimeInMinutes & ":" & "0" & TimeElapsed
          Else
             RunTime="" & ":" & "0" & TimeElapsed
          End If
       Else
          If TimeInMinutes > 0 then
             RunTime="" & TimeInMinutes & ":" & TimeElapsed
          Else
             RunTime="" & ":" & TimeElapsed
          End If
       End If
     End If

End Function
'*****************************************************************
Function Chk4Card()

    Dim tmp
    sc.write("80")
    sc.delay(10)
  if sc.read(1) = 1 then
    tmp=sc.getbyte(0)
    If tmp = &h0 then
        Chk4Card=0
        sc.write("A0")
        Call Sc.ProgressBox(0,0,0,0)
        sc.MsgBox("Card Removed. Please Insert Card!")

    else
        Chk4Card=1
    End if
  End if

End Function
'******************************************************************
Function ChipVer()

    ChipVer = 1

    sc.write("90")
    delay(80)

    if sc.read(4) <> 4 then
        ChipVer = 0
        Exit Function
     End if

    if getbyte(0) <> &h55 then ChipVer = 0
    if getbyte(1) <> &h4c then ChipVer = 0
    if getbyte(2) <> &h34 then ChipVer = 0
    if getbyte(3) <> &h53 then ChipVer = 0

End Function
'*****************************************************
Function HexToDec(HexNumber)

    HexNumber=Replace(UCase(HexNumber)," ","")
    HexToDec=CLng("&H"+HexNumber)

End Function
'******************************************************
Sub Card_Reset()
    Dim RetValue
    Sc.Write("A0")     ' Turn the LED off if it is on
    Sc.Write("020200") ' Power down the card
    Sc.Delay(1000)     ' Wait about 1 second
    Call Sc.Reset()    ' Power up the card
    RetValue=Sc.Flush()  ' Flush the receive buffer
End Sub
'*********************************************************************
Function ReadInfo()

    Dim CAMIDHex
    Dim CAMIDDec
    Dim USWHex
    Dim USWDec
    Dim DSWHex
    Dim DSWDec
    Dim GuideHex
    Dim GuideDec
    Dim TimeHex
    Dim TimeDec
    Dim RatingHex
    Dim RatingDec
    Dim SpendingLimitHex
    Dim SpendingLimitDec
    Dim infobox
    Dim actyear
    Dim actmonth
    Dim ActDateHex
    Dim ActDateDec
    Dim PPVLimitHex
    Dim PPVLimitDec
    Dim SpentHex
    Dim SpentDec
    Dim Fuse
    Dim IRDHex
    Dim IRDDec
    Dim RetValue

   if ReceiveATR() = 0 Then
   Call Sc.Msgbox ("Error, Card has returned a partial ATR or NO ATR!")
   Exit Function
    End if

    Sc.Write("0B 1A 0E10 C4 48 2A 00 00 80 BF 00")
    Sc.Delay(80)
    Sc.Read(&h02)
       RetValue = Sc.GetByte(&h01)
       Sc.Read (RetValue)

    USWHex = HexString(GetByte(29), 2) & HexString(GetByte(30), 2)

    USWDec = Hex2Dec(USWHex)
        if len(USWDec) < 4 then
           USWDec = "000" & USWDec
        end if

    DSWHex = HexString(GetByte(33), 2) & HexString(GetByte(34), 2)

    DSWDec = Hex2Dec(DSWHex)
        if len(DSWDec) < 4 then
           DSWDec = "000" & DSWDec
        end if

    RatingHex = HexString(GetByte(11), 2)
    RatingDec = Hex2Dec(RatingHex)
        if len(RatingDec) = 1 then
            RatingDec = "0" & RatingDec
        end if

    SpendingLimitHex = HexString(GetByte(12), 2) & HexString(GetByte(13), 2)
    SpendingLimitDec = "$" & int(Hex2Dec(SpendingLimitHex)/100)

    ActDateHex = HexString(GetByte(14), 2) & HexString(GetByte(15), 2)
    if ActDateHex = "0000" then
        ActDateDec = "Not Active"
    else
    ActDateHex = HexString(GetByte(14), 2) & HexString(GetByte(15), 2)
    ActYear = 2000 + left(((GetByte(14)-95) / 12 * 100),1)
    ActMonth = round((right(int((((GetByte(14) - 95)/12))*100),2)/100)*12)
    ActDateDec = ActMonth & "." & GetByte(15) & "." & ActYear

    end if

    Fuse = HexString(GetByte(1), 2) & hexstring(GetByte(1) xor &hFF,2)

    IRDHex = Hexstring(GetByte(21) xor GetByte(25),2) & Hexstring(GetByte(22) xor GetByte(26),2) & Hexstring(GetByte(23) xor GetByte(27),2) & Hexstring(GetByte(24) xor GetByte(28),2)
        if len(IRDHex) <= 4 then
            IRDHex = "0000" & IRDHex
        end if

    IRDDec = Hex2Dec(IRDHex)
        if IRDDec <= 1 then
            IRDDec = "0000000" & IRDDec
        end if

    Sc.Write("02BF00")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    PPVLimitHex = HexString(Sc.GetByte(23), 2) & HexString(Sc.GetByte(24), 2)
    PPVLimitDec = "$" & int(Hex2Dec(PPVLimitHex)/100)
    SpentHex = HexString(Sc.GetByte(21), 2) & HexString(Sc.GetByte(22), 2)
    SpentDec = "$" & int(Hex2Dec(SpentHex)/100)

    Sc.Write("028200")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    Sc.Write("08C448580000179B00")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    CAMIDHex = HexString(GetByte(2), 2) & HexString(GetByte(3), 2) & HexString(GetByte(4), 2) & HexString(GetByte(5), 2)
    CAMIDDec = Hex2Dec(CAMIDHex) & "x"

    GuideHex = HexString(Sc.GetByte(13), 2)
    GuideDec = Hex2Dec(GuideHex)
        if GuideDec = 0 then
            GuideDec = "00"
        end if
    TimeHex = HexString(Sc.GetByte(11), 2)
    TimeDec = Hex2Dec(TimeHex)

    infobox = "ATR  : " & ATR & vbCrLf & vbcrlf
    infobox = infobox & "Card Information"  & vbtab & vbtab & "Hex" & vbtab & vbtab &"Decimal" & vbCr
    infobox = infobox & "------------------------------------------------------------------------------------" & vbCr
    infobox = infobox & "Card ID(CAM)" & vbtab & vbtab & CAMIDHex & vbtab & CAMIDDec & vbCr
    infobox = infobox & "IRD ID"  & vbtab & vbtab & vbtab & IRDHex & vbtab & IRDDec & vbCr
    infobox = infobox & "Fuse Byte" & vbtab & vbtab & vbtab & Fuse & vbtab & vbtab & Hex2Dec(Fuse) & vbCr
    infobox = infobox & "Guide Byte"  & vbtab & vbtab & GuideHex & vbtab & vbtab & GuideDec & vbCr
    infobox = infobox & "Time Zone"  & vbtab & vbtab & TimeHex & vbtab & vbtab & Hex2Dec(TimeHex) & vbCr
    infobox = infobox & "Rating"  & vbtab & vbtab & vbtab & RatingHex & vbtab & vbtab & RatingDec & vbCr
    infobox = infobox & "USW"  & vbtab & vbtab & vbtab & USWHex & vbtab & vbtab & USWDec & vbCr
    infobox = infobox & "DSW"  & vbtab & vbtab & vbtab & DSWHex & vbtab & vbtab & DSWDec & vbCr
    infobox = infobox & "Activation Date"  & vbtab & vbtab & ActDateHex & vbtab & vbtab & ActDateDec & vbCr
    infobox = infobox & "PPV Spending Limit"  & vbtab & vbtab & PPVLimitHex & vbtab & vbtab & PPVLimitDec & vbCr
    infobox = infobox & "Amount Purchased"  & vbtab & vbtab & SpentHex & vbtab & vbtab & SpentDec & vbCr
    infobox = infobox & "User Spending Limit"  & vbtab & vbtab & SpendingLimitHex & vbtab & vbtab & SpendingLimitDec & vbCr
    infobox = infobox & "-------------------------------------------------------------------------------" & vbCrLf
    Call Sc.msgbox (infobox)
    ReadInfo = 1
   Call ShutDownCard()
End Function
'*********************************************************
Function ReceiveATR()
Dim i
Dim RetValue

    Sc.Write("06100E10019300")                        ' this command receives the ATR of an HU card
    Sc.Delay(80)
    If sc.BytesInBuffer > 0 then
        Sc.Read(&h02)
    else
        Call Sc.ProgressBox ("", 0, 0, "")
        Call OopsLooped()
        Exit Function
    end if

    RetValue = Sc.GetByte(&h01)
    Sc.Read (RetValue)                                ' read the 20 bytes
ATR = ""
    For i = 0 to RetValue -1
        ATR = ATR &  HexString(Sc.GetByte(i), 2) & " "        ' 20 bytes of ATR

    Next

    If(RetValue < 20) Then
        ReceiveATR = 0
    Else
        ReceiveATR = 1
    End If

End Function
'*********************************************************************
Sub ReadCard()
    Dim EEPROM
    Dim TByte
    Dim Address

    EEPROM = 0
    Address = 8192 ' For EEPROM Read

    Sc.Write("A2")

    Call ExtractCardInfo()
Call WriteViaLoader("24A4","00000000","E")    ' Clear IRD
    Call WriteViaLoader("2460","00000000","E")    ' Clear IRD
Call WriteViaLoader("240C","00000000","E")    ' Clear IRD

    For EEPROM = 1 to 128    ' 128 for EEPROM, 256 for ROM
        Sc.Write("06C23F" & HexString(Address,4) & "BF00")
        Sc.Delay(50)
        Sc.Read(&h02)
        Sc.Read (&h40)

        PercentageRead = EEPROM * 100 / 128
        Call Sc.ProgressBox ("                               Reading EEPROM Memory..." & INT(PercentageRead) & "%.", EEPROM, 128, "                                 Reading Card...") ' For EEPROM Read

        For TByte = 0 to 63
            Call Fs.FilePutc(OutFile, Sc.GetByte(TByte))
        Next

        Address = Address + 64

        Call WDTMR()
    Next

    Fs.FileClose(OutFile)

    Call Sc.ProgressBox ("", 0, 0, "")
sc.msgbox ("File saved as " & FileName)
sc.print "Read Sucessful!" & VbCr & "File saved as " & FileName & VbCr
End Sub
'******************************************************************
Sub WriteCard(Chunk)

    Dim EEPROM
    Dim TByte
    Dim Address
    Dim EEPROMBytes
    Dim Multiplier

    Address = 8192

    If Chunk = 64 Then
        Multiplier = 128
    Else
        Multiplier = 256
    End If

    Sc.Write("A2")

    Call Fs.FileSeek(InFile, 0, fsoSEEK_SET)

    Call WDTMR()

    For EEPROM = 1 to Multiplier
        EEPROMBytes = ""
        For TByte = 1 to Chunk
            EEPROMBytes = EEPROMBytes & HexString(Fs.FileGetc(InFile), 2)
        Next

        If Chunk = 64 Then
            Sc.Write("49C2BF" & HexString(Address,4) & "FF" & EEPROMBytes & "0EFF8000")
            Sc.Read(&h03)
        Else
            Sc.Write("28E29F" & HexString(Address,4) & EEPROMBytes & "0EFF8000")
            Sc.Read(&h03)
        End If
        Percentage = EEPROM * 100 / Multiplier
        Call Sc.ProgressBox ("                               Writing EEPROM Memory..." & INT(Percentage) & "%.", EEPROM, Multiplier, "                         Writing EEProm To Card...")

        Address = Address + Chunk
    Next

    Fs.FileClose(InFile)

    Call Sc.ProgressBox ("", 0, 0, "")

End Sub
'***********************************************************

Sub WriteViaLoader(address,data,options)

    Dim dLen
    Dim tlen
    Dim parm1
    Dim parm2
    Dim i,t
    Dim datalen
    Dim addresslow
    Dim tmp
    Dim Xored
    Dim datarray(31)
    Dim datalength

    dLen = Len(data)
    dLen = dLen / 2
    tLen = Len(data)
    tLen = tlen + 16
    tLen = tlen / 2
    tLen = HexString(tlen,2)
    parm1 = Hex(dLen + &hC2)
    parm2 = Hex(dLen + &h7F)

    If Ucase(options) = "E" Then

        t = 0
        For i = 1 To Len(data) Step 2
            tmp = Mid(data, i, 2)
            datarray(t) = (HexToDec(tmp))
            t = (t + 1)
        Next

        addresslow = HexToDec(Mid(address, 3, 2))     'Get lower byte for offset
        addresslow = (addresslow And &h7)             'Strip bits for offset 0-7

        If UBound(datarray) > 32 Then
            Exit Sub
        End If

        datalength = (Len(data) / 2)

        'Encrypt
        t = 0
        For i = addresslow To datalength + addresslow - 1
                Xored = Xored & HexString(datarray(t) Xor HexToDec(XoredByte(i)), 2)
            t = (t + 1)
        Next

        data = Xored
    End if

    Sc.Write(tLen & " " & parm1 & " " & parm2 & " " & address & " " & data & " " & "0EFF8000")
    Sc.Read(&h03)

End Sub
'*********************************************
Sub ExtractCardInfo()

    Dim RetValue
    Dim XByte(15)

    Call WDTMR()
    Sc.Write("06C20724C08800")
    Sc.Read(&h02)
        RetValue = Sc.GetByte(&h01)
        Sc.Read(RetValue)

    XByte(0) = Sc.GetByte(0)
    XByte(1) = Sc.GetByte(1)
    XByte(2) = Sc.GetByte(2)
    XByte(3) = Sc.GetByte(3)
    XByte(4) = Sc.GetByte(4)
    XByte(5) = Sc.GetByte(5)
    XByte(6) = Sc.GetByte(6)
    XByte(7) = Sc.GetByte(7)

    Sc.Write("06C20726588800")
    Sc.Read(&h02)
        RetValue = Sc.GetByte(&h01)
        Sc.Read(RetValue)

    XByte(8) = Sc.GetByte(0)
    XByte(9) = Sc.GetByte(1)
    XByte(10) = Sc.GetByte(2)
    XByte(11) = Sc.GetByte(3)
    XByte(12) = Sc.GetByte(4)
    XByte(13) = Sc.GetByte(5)
    XByte(14) = Sc.GetByte(6)
    XByte(15) = Sc.GetByte(7)

    Sc.Write("06C20B2AE48C00")
    Sc.Read(&h02)
        RetValue = Sc.GetByte(&h01)
        Sc.Read(RetValue)

    Key12Byte(0)  = Sc.GetByte(&h0)
    Key12Byte(1)  = Sc.GetByte(&h01)
    Key12Byte(2)  = Sc.GetByte(&h02)
    Key12Byte(3)  = Sc.GetByte(&h03)
    Key12Byte(4)  = Sc.GetByte(&h04)
    Key12Byte(5)  = Sc.GetByte(&h05)
    Key12Byte(6)  = Sc.GetByte(&h06)
    Key12Byte(7)  = Sc.GetByte(&h07)
    Key12Byte(8)  = Sc.GetByte(&h08)
    Key12Byte(9)  = Sc.GetByte(&h09)
    Key12Byte(10) = Sc.GetByte(&h0A)
    Key12Byte(11) = Sc.GetByte(&h0B)

    XORedByte(0)  = HexString(XByte(0) XOR XByte(8), 2)
    XORedByte(1)  = HexString(XByte(1) XOR XByte(9), 2)
    XORedByte(2)  = HexString(XByte(2) XOR XByte(10), 2)
    XORedByte(3)  = HexString(XByte(3) XOR XByte(11), 2)
    XORedByte(4)  = HexString(XByte(4) XOR XByte(12), 2)
    XORedByte(5)  = HexString(XByte(5) XOR XByte(13), 2)
    XORedByte(6)  = HexString(XByte(6) XOR XByte(14), 2)
    XORedByte(7)  = HexString(XByte(7) XOR XByte(15), 2)
    XoredByte(8)  = XoredByte(0)
    XoredByte(9)  = XoredByte(1)
    XoredByte(10) = XoredByte(2)
    XoredByte(11) = XoredByte(3)
    XoredByte(12) = XoredByte(4)
    XoredByte(13) = XoredByte(5)
    XoredByte(14) = XoredByte(6)
    XoredByte(15) = XoredByte(7)
    XoredByte(16) = XoredByte(0)
    XoredByte(17) = XoredByte(1)
    XoredByte(18) = XoredByte(2)
    XoredByte(19) = XoredByte(3)
    XoredByte(20) = XoredByte(4)
    XoredByte(21) = XoredByte(5)
    XoredByte(22) = XoredByte(6)
    XoredByte(23) = XoredByte(7)
    XoredByte(24) = XoredByte(0)
    XoredByte(25) = XoredByte(1)
    XoredByte(26) = XoredByte(2)
    XoredByte(27) = XoredByte(3)
    XoredByte(28) = XoredByte(4)
    XoredByte(29) = XoredByte(5)
    XoredByte(30) = XoredByte(6)
    XoredByte(31) = XoredByte(7)

End Sub
' *********************************************************
Sub AreaInfo()
Dim MsgPromp
Dim RetVal03
Dim RetVal04
Dim RetVal06
RetVal03 = 0
RetVal04 = 2


ZipCode = Default_ZipCode
local = Default_Local
GUIDEbyte = Default_GuideByte
TZone = Default_TimeZone
rating = Default_Rating
FuseBytes = Default_FuseByte

MsgPromp = "Would you Like to Use the Default Area Settings Below?" & VbCr & VbCr
MsgPromp = MsgPromp & vbtab & "Zip Code: " & vbtab & ZipCode & VbCr
MsgPromp = MsgPromp & vbtab & "Local Byte: " & vbtab & local & VbCr
MsgPromp = MsgPromp & vbtab & "Guide Byte: " & vbtab & GUIDEbyte & VbCr
MsgPromp = MsgPromp & vbtab & "Time Zone: " & vbtab & TZone & VbCr
MsgPromp = MsgPromp & vbtab & "Rating: " & vbtab & vbtab & rating & VbCr
MsgPromp = MsgPromp & vbtab & "Fuse Bytes: " & vbtab & FuseBytes & "   -Optional-"
RetVal04=Sc.ButtonBox( MsgPromp & VbCr &"",  vbDefaultButton2 + vbQuestion, " Use Default Area Settings? Click X to Exit ----->", "Yes", "No")

If RetVal04 = 2 then

  Call GetZipCode()
    IF ZipCode = "none" Then
      Exit Sub
    End If
  Call ConvertZip()
  Call getlocal()
    If local = "none" Then
     Exit Sub
    End If
  Call GetTimeZone()
    If TZone = "none" Then
      Exit Sub
    End If
  Call SetRating()
    If rating = "none" Then
      Exit Sub
    End If
    Call ShutDownCard()
  RetVal03=Sc.ButtonBox("Would you like to change your Fuse Bytes?"& VbCr &"",  vbDefaultButton2 + vbQuestion, " Change Fuse Bytes?", "Yes", "No")
  If RetVal03 = 1 then
    Call ConvertZip()
    Call GetFuseBytes()
      If FuseBytes = "none" Then
        Exit Sub
      End If

    Call LoadBootStrap()
    Call ExtractCardInfo()
    Call ChangeAreaSettings2() 'added FuseBytes

  Else
    Call ConvertZip()
    Call LoadBootStrap()
    Call ExtractCardInfo()
    Call ChangeAreaSettings()

  End If
  ''''''''''''''''''''''''''''''''''''''''''''''''''
Else
  If RetVal04 = 1 then
  ''''''''''''''''''''''''''''''''''''''''''''''''''
     RetVal03=Sc.ButtonBox("Would you like to write your Fuse Bytes?"& VbCr &"",  vbDefaultButton2 + vbQuestion, " Write Fuse Bytes?", "Yes", "No")
     If RetVal03 = 1 Then
          Call ConvertZip() ' Added
          Call GetFuseBytes()
          Call LoadBootStrap()
          Call ExtractCardInfo()
          Call ChangeAreaSettings2() 'added FuseBytes

     Else If RetVal03 = 2 Then
          Call ConvertZip() ' Added
          Call LoadBootStrap()
          Call ExtractCardInfo()
          Call ChangeAreaSettings()

     Else
      Exit Sub
     End If
    End If
     ''''''''''''''''''''''''''''''''''''''''''''''''''
  End If
End If
End Sub
''''''''''''''''''''''''''''''''''''''''''
Function GetZipCode()
    Dim InputValid1
    Dim PromptString
    Dim Abort

    InputValid1 = False
    PromptString = ""
    Do
        PromptString = PromptString & "Please enter your five digit zip code:"
    ZipCode = Sc.InputBox(PromptString, "Enter Zip Code", Default_ZipCode)

    If IsNumeric(ZipCode) And Len(Zipcode) = 5 Then 'If Zipcode is Numeric and length is equal to 5 Then
        GetZipCode = ZipCode
        InputValid1 = True
    ElseIf ZipCode = "" Then
                ZipCode = "none" 'ZipCode = Default_ZipCode
                Exit Function
            PromptString = ""
    Else
            PromptString = "Invalid input!" & vbCrLf & vbCrLf
    End If
    Loop Until InputValid1 = True

End Function
'**********************************************************
Function ConvertZip()
Dim ZipLoop
Dim ZPcounter

ZPtemp1 = 0
ZPtemp2 = 0
ZPtemp3 = 0
ZPtemp4 = 0
ZPtemp5 = 0
ZipLoop = True
ZPcounter = 0 'reset ZPcounter to Zero every time this function called
    'Convert ZipCode to 3x3x3x3x3x
    ZPtemp = ZipCode / 10000
Do
    IF ZPcounter = 1 Then
    ZPtemp1 = ZPtempx
    ZPtemp = ZPtemp * 10
    End If
    IF ZPcounter = 2 Then
    ZPtemp2 = ZPtempx
    ZPtemp = ZPtemp * 10
    End If
    IF ZPcounter = 3 Then
    ZPtemp3 = ZPtempx
    ZPtemp = ZPtemp * 10
    End If
    IF ZPcounter = 4 Then
    ZPtemp4 = ZPtempx
    ZPtemp = ZPtemp * 10
    End If
    IF ZPcounter = 5 Then
    ZPtemp5 = ZPtempx
    ZPCode = ZPtemp1 & ZPtemp2 & ZPtemp3 & ZPtemp4 & ZPtemp5
    ZipLoop = False 'We now have our Zipcode Bytes End the Loop
    Exit Function
    End If

    If ZPtemp > 8.9999 and ZPtemp < 10 Then
    ZPtempx = 39
    ZPtemp = ZPtemp - 9

    Else If ZPtemp > 7.9999 and ZPtemp < 9 Then
    ZPtempx = 38
    ZPtemp = ZPtemp - 8

    Else If ZPtemp > 6.9999 and ZPtemp < 8 Then
    ZPtempx = 37
    ZPtemp = ZPtemp - 7

    Else If ZPtemp > 5.9999 and ZPtemp < 7 Then
    ZPtempx = 36
    ZPtemp = ZPtemp - 6

    Else If ZPtemp > 4.9999 and ZPtemp < 6 Then
    ZPtempx = 35
    ZPtemp = ZPtemp - 5

    Else If ZPtemp > 3.9999 and ZPtemp < 5 Then
    ZPtempx = 34
    ZPtemp = ZPtemp - 4

    Else If ZPtemp > 2.9999 and ZPtemp < 4 Then
    ZPtempx = 33
    ZPtemp = ZPtemp - 3

    Else If ZPtemp > 1.9999 and ZPtemp < 3 Then
    ZPtempx = 32
    ZPtemp = ZPtemp - 2

    Else If ZPtemp > 0.9999 and ZPtemp < 2 Then
    ZPtempx = 31
    ZPtemp = ZPtemp - 1

    Else If ZPtemp =< 0.9999 Then
    ZPtempx = 30
    ZPtemp = ZPtemp
    End IF
    End IF
    End IF
    End IF
    End IF
    End IF
    End IF
    End IF
    End IF
    End IF
    ZPcounter = ZPcounter + 1
    Loop Until ZipLoop = False

End Function
''''''''''''''''''''''''''''''''''''''
Function getlocal()
    Dim RetVala2
    Dim PromptString
    Dim GotInput

    GotInput = False

    Do
        PromptString = "Please make a selection from the following list:" & vbCrlf & vbCrlf
        PromptString = PromptString & "00: No Locals" & vbtab & vbtab & vbtab & "01: Atlanta, GA" & vbtab & vbtab & vbtab & "02: Boston, MA" & vbCrlf
        PromptString = PromptString & "03: Chicago, IL" & vbtab & vbtab & vbtab & "04: Clevland, OH" & vbtab & vbtab & "05: Dallas, TX" & vbCrlf
        PromptString = PromptString & "06: Denver, CO" & vbtab & vbtab & vbtab & "07: Detroit, MI" & vbtab & vbtab & vbtab & "08: Houston, TX" & vbCrlf
        PromptString = PromptString & "09: Los Angeles, CA" & vbtab & vbtab & "0A: Maimi, FL" & vbtab & vbtab & vbtab & "0B: Minneapolis, MN" & vbCrlf
        PromptString = PromptString & "0C: New York, NY" & vbtab & vbtab & "0D: Orlando, FL" & vbtab & vbtab & vbtab & "0E: Philadelphia, PA" & vbCrlf
        PromptString = PromptString & "0F: Phoenix, AZ" & vbtab & vbtab & vbtab & "10: Sacramento, CA" & vbtab & vbtab & "11: San Francisco, CA" & vbcrlf
        PromptString = PromptString & "12: Seattle, WA" & vbtab & vbtab & vbtab & "13: St. Louis, MO" & vbtab & vbtab & "14: Tampa, FL" & vbCrlf
        PromptString = PromptString & "15: Washington DC" & vbtab & vbtab & "16: Greenville, SC" & vbtab & vbtab & "17: Raleigh, NC" & vbCRlf
        PromptString = PromptString & "18: Salt Lake City, UT" & vbtab & vbtab & "19: Austin, TX" & vbtab & vbtab & vbtab & "1A: Baltimore, MD" & vbCrlf
        PromptString = PromptString & "1B: Birmingham, AL" & vbtab & vbtab & "1C: Charlotte, NC" & vbtab & vbtab & "1D: Cincinnati, OH" & vbCrlf
        PromptString = PromptString & "1E: Columbus, OH" & vbtab & vbtab & "1F: Greensboro, NC" & vbtab & vbtab & "20: Indianapolis, IN" & vbCrlf
        PromptString = PromptString & "21: Kansas City, MO" & vbtab & vbtab & "22: Memphis, TN" & vbtab & vbtab & "23: Milwaukee, WI" & vbCrlf
        PromptString = PromptString & "24: Nashville, TN" & vbtab & vbtab & "25: Pittsburgh, PA" & vbtab & vbtab & "26: Portland, OR" & vbCrlf
        PromptString = PromptString & "27: San Antonio, TX" & vbtab & vbtab & "28: San Diego, CA" & vbtab & vbtab & "29: West Palm Beach, FL" & vbCrlf
        PromptString = PromptString & "2A: Hartford, CT" & vbtab & vbtab & vbtab & "2B: Las Vegas, NV" & vbtab & vbtab & "2C: Providence, RI" & vbCrlf
        PromptString = PromptString & "2D: Buffalo, NY" & vbtab & vbtab & vbtab & "2E: Grand Rapids, MI" & vbtab & vbtab & "2F: Oklahoma City, OK" & vbCrlf
        PromptString = PromptString & "30: New Orleans, LA" & vbtab & vbtab & "31: Norfolk, VA" & vbtab & vbtab & vbtab & "32: Knoxville, TN" & vbCrlf
        PromptString = PromptString & "33: Jacksonville, FL" & vbtab & vbtab

        RetVala2 = Sc.InputBox(PromptString, "Select Locals Market", "0F")

        If RetVala2 = "" then
            GotInput = True
            local = "none"

            Exit Function
        End If

        if len(RetVala2) <> 2 then 'If lenth is lessthan or greater than 2 Then...
            GotInput = false
            local = "none"
        else
          RetVala2 = UCase(RetVala2)

        Select Case left(RetVala2, 1)
           case "0", "1"
                Select Case Right(RetVala2, 1)
                  Case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"
                    GotInput = true
                    getlocal = RetVala2
                    local = getlocal
                End Select
            Case "2"
                Select Case Right(RetVala2, 1)
                  Case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
                    GotInput = true
                    getlocal = RetVala2
                    local = getlocal
                End Select
        End Select
        End If
    Loop until GotInput = True
If GETLOCAL = "00" Then GUIDEbyte="00"
If GETLOCAL = "01" Then GUIDEbyte="02"
If GETLOCAL = "02" Then GUIDEbyte="41"
If GETLOCAL = "03" Then GUIDEbyte="10"
If GETLOCAL = "04" Then GUIDEbyte="40"
If GETLOCAL = "05" Then GUIDEbyte="28"
If GETLOCAL = "06" Then GUIDEbyte="60"
If GETLOCAL = "07" Then GUIDEbyte="08"
If GETLOCAL = "08" Then GUIDEbyte="01"
If GETLOCAL = "09" Then GUIDEbyte="11"
If GETLOCAL = "0A" Then GUIDEbyte="02"
If GETLOCAL = "0B" Then GUIDEbyte="28"
If GETLOCAL = "0C" Then GUIDEbyte="28"
If GETLOCAL = "0D" Then GUIDEbyte="01"
If GETLOCAL = "0E" Then GUIDEbyte="60"
If GETLOCAL = "0F" Then GUIDEbyte="08"
If GETLOCAL = "10" Then GUIDEbyte="40"
If GETLOCAL = "11" Then GUIDEbyte="28"
If GETLOCAL = "12" Then GUIDEbyte="10"
If GETLOCAL = "13" Then GUIDEbyte="08"
If GETLOCAL = "14" Then GUIDEbyte="08"
If GETLOCAL = "15" Then GUIDEbyte="12"
If GETLOCAL = "16" Then GUIDEbyte="28"
If GETLOCAL = "17" Then GUIDEbyte="01"
If GETLOCAL = "18" Then GUIDEbyte="02"
If GETLOCAL = "19" Then GUIDEbyte="20"
If GETLOCAL = "1A" Then GUIDEbyte="02"
If GETLOCAL = "1B" Then GUIDEbyte="01"
If GETLOCAL = "1C" Then GUIDEbyte="48"
If GETLOCAL = "1D" Then GUIDEbyte="20"
If GETLOCAL = "1E" Then GUIDEbyte="28"
If GETLOCAL = "1F" Then GUIDEbyte="08"
If GETLOCAL = "20" Then GUIDEbyte="02"
If GETLOCAL = "21" Then GUIDEbyte="01"
If GETLOCAL = "22" Then GUIDEbyte="40"
If GETLOCAL = "23" Then GUIDEbyte="01"
If GETLOCAL = "24" Then GUIDEbyte="10"
If GETLOCAL = "25" Then GUIDEbyte="01"
If GETLOCAL = "26" Then GUIDEbyte="01"
If GETLOCAL = "27" Then GUIDEbyte="02"
If GETLOCAL = "28" Then GUIDEbyte="10"
If GETLOCAL = "29" Then GUIDEbyte="20"
If GETLOCAL = "2A" Then GUIDEbyte="FF"
If GETLOCAL = "2B" Then GUIDEbyte="FF"
If GETLOCAL = "2C" Then GUIDEbyte="FF"
If GETLOCAL = "2D" Then GUIDEbyte="FF"
If GETLOCAL = "2E" Then GUIDEbyte="FF"
If GETLOCAL = "2F" Then GUIDEbyte="FF"
If GETLOCAL = "30" Then GUIDEbyte="FF"
If GETLOCAL = "31" Then GUIDEbyte="FF"
If GETLOCAL = "32" Then GUIDEbyte="FF"


End Function
''''''''''''''''''''''''''''''''''''''
Function SetRating()
    Dim RetVal02
    Dim PromptString
    Dim GotInput1


    GotInput1 = False

    Do
        PromptString = "Please make a Rating Limit selection from the following list:" & vbCrlf & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "00: All Locked" & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "01: NR"         & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "02: G"          & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "04: PG"         & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "06: PG13"       & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "07: NR Content" & vbcrlf
        PromptString = PromptString & vbtab & vbtab & "09: R"          & vbCrlf
        PromptString = PromptString & vbtab & vbtab & "0B: NR Mature"  & vbCRlf
        PromptString = PromptString & vbtab & vbtab & "0D: NC17"       & vbCrlf

        RetVal02 = Sc.InputBox(PromptString, "Select Rating Limit", Default_Rating)

        If RetVal02 = "" then
            GotInput1 = True
            rating = "none"
            Exit Function
        End If

        if len(RetVal02) <> 2 then 'If lenth is less than or greater than 2 Then...
            GotInput1 = false
            rating = "none"
        else
          RetVal02 = UCase(RetVal02)

        Select Case left(RetVal02, 1)
           case "0"
                Select Case Right(RetVal02, 1)
                  Case "0", "1", "2", "4", "6", "7", "9", "B", "D"
                    GotInput1 = true
                    SetRating = RetVal02
                    rating = SetRating
                End Select
            Case "2"
                Select Case Right(RetVal02, 1)
                  Case "0", "1", "2", "4", "6", "7", "9", "B", "D"
                    GotInput1 = true
                    SetRating = RetVal02
                    rating = SetRating
                End Select
        End Select
        End If
    Loop until GotInput1 = True

End Function
'**********************************************************
Sub GetFuseBytes()
    Dim InputValid
    Dim PromptString
    Dim Fuse1
    Dim Fuse2

    PromptString = ""
    InputValid = False
    Do
        PromptString = "Please enter the fuse bytes you wish to use:" & vbCrlf & vbCrlf
        PromptString = PromptString & vbtab & "20DF: Virgin, unactivated" & vbCrlf
        PromptString = PromptString & vbtab & "25DA: Activated, married"  & vbCrlf
        FuseBytes = Sc.InputBox(PromptString, " Change Fuse Bytes", Default_FuseByte)

        If FuseBytes = "" Then
            FuseBytes = "none"
            InputValid = True
            Exit Sub
        End If
        PromptString = ""
        Fuse1 = Mid(FuseBytes,1,2)
        Fuse2 = Mid(FuseBytes,3,4)
        If HexString(Hex2Dec(Fuse1) Xor Hex2Dec(Fuse2),2) = "FF" Then
            InputValid = True
        Else
            PromptString = "Invalid Fuse Bytes!" & vbCrLf & vbCrLf
        End If
    Loop Until InputValid = True
End Sub
'**************************************************************
Function GetTimeZone()
  Dim RetVal
  Dim GotInput
  Dim PromptString
  Dim TZT
  Dim TZ
  Dim TimeZone

    GotInput = False
    Do
        PromptString = "Please select your time zone." & vbCrLf & vbCrLf & "This will determine the correct time on your receiver." & vbCrLf & "If you don't see your option click More..." & vbCrLf
        RetVal = Sc.ButtonBox(PromptString,, "Select your Time Zone", "Pacific", "Mountain", "Central", "Eastern", "More...")

        Select Case    UCase(RetVal)
        Case "1"
            TZ = &h0
            TimeZone = "Pacific"
            GotInput = True
        Case "2"
            TZ = &h2
            TimeZone = "Mountain"
            GotInput = True
         Case "3"
            TZ = &h4
            TimeZone = "Central"
            GotInput = True
         Case "4"
            TZ = &h6
            TimeZone = "Eastern"
            GotInput = True
         Case "5"
            Do
               PromptString = "Please select your time zone." & vbCrLf & vbCrLf & "If you don't see your option click Back..." & vbCrLf
               RetVal = Sc.ButtonBox(PromptString,, "Select your Time Zone", "Atlantic", "NewFoundland", "Back...")
               Select Case    UCase(RetVal)
               Case "1"
                  TZ = &h8
                  TimeZone = "Atlantic"
                  GotInput = True
               Case "2"
                  TZ = &h9
                  TimeZone = "NewFoundland"
                  GotInput = True
               Case "3"
                  Exit Do
               End Select
            Loop Until GotInput = True
         Case "0"
                GetTimeZone = vbCancel
                Exit Function

        End Select
    Loop Until GotInput = True

    GotInput = False
    Do
        PromptString = "Please select Standard Time or Day Light Savings," & vbCrLf & vbCrLf
        PromptString = PromptString & "for the " & TimeZone & " Time Zone."
        RetVal = Sc.ButtonBox(PromptString,, "Select DayLight Savings or Standard Time", "DayLight", "Standard", "Cancel")

        Select Case UCase(RetVal)
        Case "1"
            TZT = &hA0
            TimeZone = TimeZone & "/DayLight Savings"
            GotInput = True
        Case "2"
            TZT = &h20
            TimeZone = TimeZone & "/Standard"
            GotInput = True
        Case "3", ""
                GetTimeZone = vbCancel
                TZone = "none"
                Exit Function

        End Select
    Loop Until GotInput = True

    GetTimeZone = Hex(TZT + TZ)
    TZone = Hex(TZT + TZ)

End Function
''''''''''''''''''''''''''''''''''''''
Sub ChangeAreaSettings()
Dim TZone2
Dim ZipCode2
Dim local2
Dim GUIDEbyte2
Dim rating2
    TZone2 = TZone
    ZipCode2 = ZipCode
    local2 = local
    GUIDEbyte2 = GUIDEbyte
    rating2 = rating

    Sc.Write("A2")

    Call Sc.ProgressBox ("Changing Area Settings...", 1, 1,"                 Changing Area Settings...")
    Call WriteViaLoader("240C","00000000","E")             ' Clear Password
    Call WriteViaLoader("2410","55" & ZPCode & "2020","E") ' Set Zipcode
    sc.print VbCr & "ZPCode is " & ZPCode &VbCr
    Call WriteViaLoader("2460","00000000" & rating,"E")    ' Clear IRD # From Location 1 and set rating
    Call WriteViaLoader("24A4","00000000","E")             ' Clear IRD # From Location 1
    Call WriteViaLoader("24E0",TZone,"E")                  ' Set Time Zone
    Call WriteViaLoader("2511",local,"E")                  ' Set Local Bytes
    Call WriteViaLoader("251F",GUIDEbyte,"E")              ' Set Guide Bytes
    Call WriteViaLoader("2690","0000000000000000","D")     ' Clear card swap key


    Call Sc.ProgressBox ("", 0, 0, "")

    sc.Print(vbCr & "Time Zone    Set to: "& TZone2)
    sc.Print(vbCr & "Zip Code     Set to: "& ZipCode2)
    sc.Print(vbCr & "Local Byte   Set to: "& local2)
    sc.Print(vbCr & "Guide Byte   Set to: "& GUIDEbyte2)
    sc.Print(vbCr & "Rating Limit Set to: "& rating2)
    sc.Print(vbCr & "Area Settings Change Successfull!")
    sc.Print(vbCr & "Rating Limit Password has been Cleared!")
    sc.Print(vbCr & "Card was Unmarried from IRD and password was cleared!" & vbCr)

End Sub
''''''''''''''''''''''''''''''''''''''''''
Sub ChangeAreaSettings2()
Dim TZone2
Dim ZipCode2
Dim local2
Dim GUIDEbyte2
Dim rating2
Dim FuseBytes2
    TZone2 = TZone
    ZipCode2 = ZipCode
    local2 = local
    GUIDEbyte2 = GUIDEbyte

    rating2 = rating
    FuseBytes2 = FuseBytes

    Sc.Write("A2")

    Call Sc.ProgressBox ("Changing Area Settings...", 1, 1,"                 Changing Area Settings...")
    Call WriteViaLoader("2014",FuseBytes,"D")              ' set Fuse Bytes
    Call WriteViaLoader("240C","00000000","E")             ' Clear Password
    Call WriteViaLoader("2410","55" & ZPCode & "2020","E") ' Set Zipcode
    Call WriteViaLoader("2460","00000000" & rating,"E")    ' Clear IRD # From Location 1 and set rating
    Call WriteViaLoader("24A4","00000000","E")             ' Clear IRD # From Location 1
    Call WriteViaLoader("24E0",TZone,"E")                  ' Set Time Zone
    Call WriteViaLoader("2511",local,"E")                  ' Set Local Bytes
    Call WriteViaLoader("251F",GUIDEbyte,"E")              ' Set Guide Bytes
    Call WriteViaLoader("2690","0000000000000000","D")     ' Clear card swap key

    Call Sc.ProgressBox ("", 0, 0, "")

    sc.Print(vbCr & "Time Zone    Set to: "& TZone2)
    sc.Print(vbCr & "Zip Code     Set to: "& ZipCode2)
    sc.Print(vbCr & "Local Byte   Set to: "& local2)
    sc.Print(vbCr & "Guide Byte   Set to: "& GUIDEbyte2)
    sc.Print(vbCr & "Fuse  Byte   Set to: "& FuseBytes2)
    sc.Print(vbCr & "Rating Limit Set to: "& rating2)
    sc.Print(vbCr & "Area Settings Change Successfull!")
    sc.Print(vbCr & "Rating Limit Password has been Cleared!")
    sc.Print(vbCr & "Card was Unmarried from IRD and password was cleared!" & vbCr)

End Sub
'*************************************************
Sub InstallUpdates()
    Dim USWH
    Dim USWL
    Dim USW
    Dim Updates(8)
    Sc.Write("06C20124C88200")
    Sc.Read(&h02)
    Sc.Read(&h03)
    USWH = Sc.GetByte(0)
    USWL = Sc.GetByte(1)
    USWH = HexString(USWH Xor HexToDec(XORedByte(0)),2)
    USWL = HexString(USWL Xor HexToDec(XORedByte(1)),2)
    USW = USWH & USWL
    USW = HexToDec(USW)

'    Set Activation Date (02/02/2002)
    Call WriteViaLoader("2408","7902532F","E")

    ' Add Updates
    Call Sc.ProgressBox ("Installing Updates...", 1, 8,"")

    If USW = &h0000 OR USW = &h0001 OR addusw > 6 Then
        Call WriteViaLoader("2B00","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2B20","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2B40","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2B60","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2B80","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2BA0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2BC0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2BE0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2C00","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2C20","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2C40","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2C60","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2C80","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2CA0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2CC0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2CE0","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2D00","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2D20","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2D40","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2D60","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2D80","0000000000000000000000000000000000000000000000000000000000000000","E")
        Call WriteViaLoader("2DA0","0000000000000000000000000000000000000000000000000000000000000000","E")
    End If
    Call Sc.ProgressBox ("Installing Updates...", 2, 8,"")

    If USW => &h0100 OR addusw > 6 Then
        sc.print "Adding USW 100" & VbCr
        Call WriteViaLoader("2CE8","7D40BE0652F7803DFFFFC5F7083DAA2CE0A6013DFC2130C35D070FF28839072C","D")
        Call WriteViaLoader("2D08","8E38EEAA2CE0A6013DFC2130","D")
    End If

    If USW => &h0200 OR addusw > 6 Then
       sc.print "Adding USW 200" & VbCr
        Call WriteViaLoader("2D14","D524C5AA24D8D002AA24C0430002AA2658430002A6013DFC80351302440024C3","D")
        Call WriteViaLoader("2D34","5D030FDF122406037404288CC1C9","D")
    End If
    Call Sc.ProgressBox ("Installing Updates...", 3, 8,"")

    If USW => &h0300 OR addusw > 6 Then
        sc.print "Adding USW 300" & VbCr
        Call WriteViaLoader("2D42","760428038CD5138C2024","D")
        Call WriteViaLoader("2CE0","21513C515063DE1E","D")
    End If

    If USW => &h0400 OR addusw > 6 Then
        sc.print "Adding USW 400" & VbCr
        Call WriteViaLoader("370E","2CE8","D")
        Call WriteViaLoader("270F","2D42","D")
        Call WriteViaLoader("2D4C","22F2008B23D50031","D")
    End If

    If USW => &h0500 OR addusw > 6 Then
        sc.print "Adding USW 500" & VbCr
        Call WriteViaLoader("2D54","2698007A271103BD2CD000102CE800642D4C00402D8C002B","D")
        Call WriteViaLoader("2D6C","2F0801323039011E315907E1393D060B3F5800103F8800773FFF00013FFF0001","D")
    End if
    Call Sc.ProgressBox ("Installing Updates...", 4, 8,"")

    If USW => &h0600 OR addusw > 6 Then
        sc.print "Adding USW 600" & VbCr
        Call WriteViaLoader("2D8C","7D08E3060342DEDD7D10E3021DD3E370042EDEDD07EAC59A2EAB002970012EC3","D")
        Call WriteViaLoader("2DAC","5704F470FF2C70FC2EC3F9","D")
        Call WriteViaLoader("2CD0","5503AA013AD0DBD524882D482ED5E3F9","D")
    End If

    If USW => &h0700 OR addusw > 6 Then
        sc.print "Adding USW 700" & VbCr
        Call WriteViaLoader("2902","2932","D")
        Call WriteViaLoader("2932","22C2B8227AB888305C43F9","D")
        Call WriteViaLoader("2CEB","00","D")
        Call WriteViaLoader("2D4A","C27A","D")
        Call WriteViaLoader("24C8","0700","E")
    End If
    Call Sc.ProgressBox ("Installing Updates...", 5, 8,"")

    If (USW => &h0800) or (addusw > 7) Then
    sc.print "Adding USW 800 DSW 6" & VbCr
    Call WriteViaLoader("2CD0","5503AA013AD0DBD524882D482ED5E3F9","D")
    Call WriteViaLoader("2CE0","21513C515063DE1E7D40BE0652F7803D","D")
    Call WriteViaLoader("2CF0","FFFFC5F7083DAA2CE0A6013DFC2130C3","D")
    Call WriteViaLoader("2D00","5D070FF28839072C8E38EEAA2CE0A601","D")
    Call WriteViaLoader("2D10","3DFC2130D524C5AA24D8D002AA24C043","D")
    Call WriteViaLoader("2D20","0002AA2658430002A6013DFC80351302","D")
    Call WriteViaLoader("2D30","440024C35D030FDF122406037404288C","D")
    Call WriteViaLoader("2D40","C1C9760428038CD5138C202422F2008B","D")
    Call WriteViaLoader("2D50","23D500312698007A271103BD2CD00010","D")
    Call WriteViaLoader("2D60","2CE800642D4C00402D8C002B2F080132","D")
    Call WriteViaLoader("2D70","3039011E315907E1393D060B3F580010","D")
    Call WriteViaLoader("2D80","3F8800773FFF00013FFF00017D08E306","D")
    Call WriteViaLoader("2D90","0342DEDD7D10E3021DD3E370042EDEDD","D")
    Call WriteViaLoader("2DA0","07EAC59A2EAB002970012EC35704F470","D")
    Call Sc.ProgressBox ("Installing Updates...", 6, 8,"")
    Call WriteViaLoader("2DB0","FF2C70FC2EC3F9","D")
    Call WriteViaLoader("370E","2CE8","D")
    Call WriteViaLoader("270F","2D42","D")
    Call WriteViaLoader("2DE0","A014EB90793ED0DDAF5F16258DB1F1D1","E")
    Call WriteViaLoader("2DF0","86D257FB40D54C9CC085B574C7A221E9","E")
    Call WriteViaLoader("2E00","3B6AA7A5A3E69FBA06663619D99A373B","E")
    Call WriteViaLoader("2E10","25A0672E34D0D75098DDFAA08320059C","E")
    Call WriteViaLoader("2E20","135033A93A589A37997B42E1C9F3E39F","E")
    Call WriteViaLoader("2E30","EA3DBF1928F7CEDC18181C85FCFB9FC0","E")
    Call WriteViaLoader("2E40","618A30F70354CED3A32E4E156C63D8F9","E")
    Call WriteViaLoader("2E50","AFB1108A151046F13A4089133B22D57F","E")
    Call WriteViaLoader("2E60","938A30D3F506A994BD0FF5AB05DE0FE9","E")
    Call WriteViaLoader("2E70","378C6DF0E35BE0A10E9678C2A161D000","E")
    Call WriteViaLoader("2E80","4314436DAE6C61EA588B35715B645AD5","E")
    Call WriteViaLoader("2E90","B93B95CB48432B9FE839CD6F6F31193B","E")
    Call WriteViaLoader("2EA0","56A8131E4D10225C796B1F1FE68448D0","E")
    Call WriteViaLoader("2EB0","06B91F85B4A48ABCFE55F427C6DEDB8A","E")
    Call WriteViaLoader("2EC0","228C0E9BA3D1CAEA5B536D191A1FDE6D","E")
    Call WriteViaLoader("2ED0","AA9FDCE3C7233C6607463628D69C2500","E")
    Call WriteViaLoader("2EE0","3AC78A87EB6EA8420DC8F077","D")
    Call Sc.ProgressBox ("Installing Updates...", 7, 8,"")
    Call WriteViaLoader("2EF8","3AC78A87EB6EA8420DC8F077","D")
    Call WriteViaLoader("24E6","0006","E")
    Call WriteViaLoader("2AD3","01","E")
    Call WriteViaLoader("2AD4","67B0E3F472674726F97061E5","E")
    Call WriteViaLoader("2AE0","BBC137A9","E")
    Call WriteViaLoader("24C8","0800","E")
    Call WriteViaLoader("2902","2932","D")
    Call WriteViaLoader("2932","22C2B8227AB888305C43F9","D")
    Call WriteViaLoader("2D4A","C27A","D")
    Call WriteViaLoader("2CEB","00","D")
    Call WriteViaLoader("2D16","77201E037420D28E3866","D")
    Call WriteViaLoader("2D20","F97720D2067420B775DFD28CC38F8801","D")
    Call WriteViaLoader("2D30","772C7720B7069A2C25BF9B2CD72CF9","D")
    Call WriteViaLoader("33C7","8C2D21","D")
    Call WriteViaLoader("384C","8C2D16","D")
    Call WriteViaLoader("3C37","FF8E2D2E","D")
    Call Sc.ProgressBox ("Installing Updates...", 8, 8,"    Updates Installed")
    End If
    Call Sc.ProgressBox ("", 0, 0, "")
End Sub

Sub ShutdownCard()
    Sc.Write("A0")              ' Turn the LED off
    Sc.Write("020200")             ' Shutdown card
    Sc.Delay(100)
    Sc.Read(&h02)
End Sub
'********************************************************************************
Sub Check2000() ' Modified From Canard's to check 4 bytes at 2000 for corruption
    Dim Bytes
    Dim Address
    Dim i
    Dim NumOfBytes
    Dim Size

    Sc.Print VbCr & "*** Checking 2000 Data for Corruption ***" & VbCr
    Address = 2000
    Size = 4
    NumOfBytes = HexToDec(Size)
    Sc.Write("A2")
    Call LoadBootStrap()
    Call ExtractCardInfo()
    Sc.Write("06 C2 " & HexString(NumOfBytes - 1,2) & Address & HexString(&h80 + NumOfBytes - 1,2) & "00")
    Sc.Delay(50)
    Sc.Read(&h02)
    NumOfBytes=Sc.Getbyte(&h01)
    Sc.Read(NumOfBytes)
    For i=0 to NumOfBytes-1
        Bytes = Bytes & HexString(Sc.Getbyte(i),2)
    Next
    if Bytes = "00000000" or Bytes = "" Then
      sc.print VbCr & Bytes & VbCr
       Sc.Print VbCr & "*** NOTE: 2000 Data on the card is '00000000' indicating some card specific bytes are corrupted. ***" & VbCr
    Else
      Sc.Print VbCr & "*** NOTE: 2000 Data Check Passed! ***" & VbCr
    End If
    Sc.Write("A0")
End Sub
'***********************************************************************************
Sub FFTheCard ()
Dim FFsel
Dim FFmsg
      FFmsg = "Would you like to FF the Card?" & vbCrLf
      FFmsg = FFmsg & "FFing the Card will Unloop the Card faster! " & vbCrLf
      FFsel=Sc.ButtonBox(FFmsg,  vbDefaultButton2 + vbQuestion, "                  FFing Option", "Yes", "No")
     ' If FFsel = 1 then FFsel = 3

      If FFsel = 1 then
    Dim RetValue
    Dim I
    sc.Write("A1")
    Sc.Write("B0 80")
    For I = &hA0 To &hD0
        Call Sc.ProgressBox("FFing The Card", I-&h9F, &h30, "                                  FF The Card")
        Sc.Write("0a 01 20 04 94 09 20 00 " + Hex(I) + " 09 00")'
        Sc.Read(2)
        RetValue = Sc.GetByte(1)
        Sc.Delay (100)
    Next
    Call Sc.ProgressBox("",0,80,"")
    Else
    End If
    Sc.Write("A0")
End Sub

'************************************************************

Sub Load3M() ' STARS HEX CODE
FileName = Fs.FileOpEndialog(HexFilter, "    Please select a .hex(*.hex) file to write to the card", "3m.hex")

    If FileName <> "" Then
        If Fs.FileExists(FileName) = 0 Then
            Sc.MsgBox("The file does not exist")
        Else
            Call LoadBootStrap()
            Call Sc.ProgressBox ("Installing Hex.....", 12, 44, "DSSCanada SuperScript 1.0")
            Include FileName
            Call Sc.ProgressBox ("Installing Hex.....", 44, 44, "DSSCanada SuperScript 1.0")
            sc.delay(300)
            Call Sc.ProgressBox ("", 0, 0, "")
            sc.print "----------------------------------------" & VbCr
            sc.print VbCr & VbCr & "Loaded Hex Installed :" & VbCr & FileName & VbCr
        End If
    End If

Call ShutDownCard()
End Sub

'************************************************************

Function Include(vbsFile)
Dim fso, ts, x, regEx, buf
Dim ThisStr, Tail, ByteCnt, BitCnt, Addr, sData

Set fso = CreateObject("Scripting.FileSystemObject")
Set ts = fso.OpenTextFile(vbsFile)
Set regEx = New RegExp
RegEx.Global = True
RegEx.Pattern = ":"

sc.print "Addr" & VbTab & "Data" & VbCr  & "----" & VbTab & "----" & VbCr
Call ExtractCardInfo()
Sc.Write("A1")
Do While Not ts.AtEndOfStream

ThisStr = ts.ReadLine
If not Left(ThisStr, 1) = "#" Then
  If not ThisStr = ":00000001FF" Then
    If Left(ThisStr, 2) = "::" Then
      Tail = "E"
    Else
      Tail = "D"
    End If
    ThisStr = ThisStr + Tail
    ThisStr = regEx.Replace (ThisStr,"")
    ByteCnt = Mid(ThisStr,1,2)
    BitCnt = Hex2Dec(ByteCnt) * 2
    Addr = Mid(ThisStr,3,4)
    sc.print Addr & VbTab ' Debug Ok
    sData = Mid(ThisStr,9,BitCnt)
    sc.print sData & VbCr ' Debug Ok
    Call WriteViaLoader(Addr,sData,Tail)

  End If
End If

loop
ts.Close
Sc.Write("A0")
End Function
'********************************************************************
Sub Unlock()

Sc.Verbose = False
    Dim RetValue
    Dim GotInput
    Dim Counter
    Dim RdWriGl
    Dim Attempts
    Dim DAC4C
    Dim DAC
    Dim Delaye
    Dim Read
    Dim Glrngchoice,d9


    Attempts = 0
    Counter  = 1
    RdWriGl = 0
    DAC4C  = &h95
    DAC    = &h80
    Delaye  = &h0A

    Call IsCardPresent()
    good = 1
    call readinfo1


Do
    RdWriGl = RdWriGl + 1
    Sc.Write("A1")
    GotInput = False
    If Counter = 1 or Counter = 4 Then
        Read = "4C"
    End If
    If Counter = 5 or Counter = 8 Then
        Read = "48"
    End If

    If Counter = 9 or Counter = 12 Then
        Read = "2E"
    End If

    If Counter > 12 Then
        Counter = 1
        Read = "4C"
    End If
    Counter = Counter + 1

   Delaye = &h09
   DAC = &h80

If Read <> "4C" Then
    Do
        DAC4C   = INT(RND * &h74) + &h70
    Loop Until DAC4C = &h97 or DAC4C = &h94 or DAC4C = &h82 or DAC4C = &h83 or DAC4C = &h53 or DAC4C = &h56 or DAC4C = &h5E

End If

    Call Sc.ProgressBox ("Glitching..." & vbtab & "DAC:" & vbtab & HexString(DAC,2) & vbtab & vbtab & "DAC4C:"& vbtab & HexString(DAC4C,2) & vbcr & Read & vbtab & vbtab & "Delay:" &vbtab & HexString(Delaye,2) & vbtab & vbtab &  "Glitch # " & RdWriGl, 1, 5, "Card Unlocker")
    Sc.Write("06100E10019300")
    Sc.Delay(80)
    Sc.Read(&h02)
    RetValue = Sc.GetByte(&h01)
    Sc.Read (RetValue)
    Sc.Write("B0")
    Call Sc.ProgressBox ("Glitching..." & vbtab &"DAC:"& vbtab & HexString(DAC,2) & vbtab & vbtab & "DAC4C:"& vbtab & HexString(DAC4C,2) & vbcr & Read & vbtab & vbtab & "Delay:" &vbtab & HexString(Delaye,2) & vbtab & vbtab &  "Glitch # " & RdWriGl, 2,5 , "Card Unlocker")
    'Sc.Write("B0")
    Sc.Write(HexString(DAC4C,2))
    If read = "48" then
        'INS 48
        Sc.Write("0B 15 C4 48 48 FF 56 B9 70 C9 08 00")
    end if
    If read = "4C" then
        'INS 4C
        Sc.Write("0B 15 C4 48 4C FF 56 B9 70 CA 08 00")
    end if
    If read = "2E" then
        'INS 2E
        Sc.Write("0B 15 C4 48 2E FF 56 B9 70 CA 08 00")
    end if

    Sc.Delay(80)
    If Sc.BytesInBuffer > 0 Then
        Sc.Read(&h02)
        RetValue = Sc.GetByte(&h01)
        Sc.Read (RetValue)
    End If
    Sc.Write("B0 82")
    D9 = &h43
    Call Sc.ProgressBox ("Glitching..." & vbtab &"DAC:"& vbtab & HexString(DAC,2) & vbtab & vbtab & "DAC4C:"& vbtab & HexString(DAC4C,2) & vbcr & Read & vbtab & vbtab & "Delay:" &vbtab & HexString(Delaye,2) & vbtab & vbtab &  "Glitch # " & RdWriGl, 3,5 , "Card Unlocker")
    Sc.Write(" 31EE0000000069FFFFFFFF523FFD2284E172400772FF14C5E2AB0100C3DA07F88C0100000000000000000000000000000000")

    if Sc.Read(&h02) < 2 then Sc.Read(&H02)
        Sc.Write("0EC06920035004200150030D" & Hexstring(D9,2)&"0000")

        Sc.Read(&h02)
        Sc.Write("028000")
        if Sc.Read(&h02) = 2 then
                RetValue = sc.getbyte(1)
            else
                RetValue = 0
        end if
        if RetValue > 0 then
           RetValue = sc.read(RetValue)

        If Sc.GetByte(&h0) = &h84 Then
           GotInput = True
           'Exit For
        end if
        Else
           GotInput = False
        End If
        'next

Counter = Counter + 1
Attempts = Attempts + 1
    'Next
Loop Until GotInput = True
    Call Sc.ProgressBox ("Glitching..." & vbtab &"DAC:"& vbtab & HexString(DAC,2) & vbtab & vbtab & "DAC4C:"& vbtab & HexString(DAC4C,2) & vbcr & Read & vbtab & vbtab & "Delay:" &vbtab & HexString(Delaye,2) & vbtab & vbtab &  "Glitch # " & RdWriGl, 5,5 , "Card Unlocker")
    Sc.Write("42FF225272FF14E1E2D007E2D029E2D02A77800718753F07D307D807C5E2AB0060C3DA07F8726015D404E700D57640070DD3078ECEFB70012ADA07F700C49E2A00FA00")
    Sc.Delay(80)
    Sc.Read(&h02)

    Sc.Print "Got it!!!" & VbCr
    Sc.Print "After " & attempts & " glitches to the card, successful DAC values were received to glitch into the card !!!" & VbCr & "=========================================================================================="
    Sc.Print VbCr & "using ins: " & read & VbCr & "DAC:       " & (HexString(DAC,2)) & VbCr & "Delay:     " & (HexString(Delaye,2)) & VbCr & "DAC4C:     " & (HexString(DAC4C,2)) & VbCr

    Call Sc.ProgressBox ("", 0, 0, "")

End Sub
'*************************************************************************************
Sub CleanCard()
Dim CleanCounter

    CleanCounter = 1

    Sc.Write("A2")

       Call ExtractCardInfo()

' Change from here down to incorporate SuperClean

        PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2000","0000","D")
Call WriteViaLoader("2007","0096A5B34C5200A500","D")
Call WriteViaLoader("2010","033F04","D")
Call WriteViaLoader("2014","20DF","D")
Call WriteViaLoader("2016","44318AD3DB6473","D")
Call WriteViaLoader("201E","003A","D")
Call WriteViaLoader("2020","14012420","D")
Call WriteViaLoader("2660","71BA01409EC32CA038001A5C4AABF706","D")
Call WriteViaLoader("22F2","2210E37702270C8EE2B676102805","D")
Call WriteViaLoader("2300","75FC67D56A8CDCE712608EDB7E7D0029","D")'''''''''''''''''''''''I left off here!!!!!!!!!!!
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2320","BE060375FED28CD15C40010017C5AA00","D")
Call WriteViaLoader("2330","60AB0101C33D170FF5748028F9880060","D")
Call WriteViaLoader("2340","3088003B327202068EE5ADF972601588","D")
Call WriteViaLoader("2350","2ACE2A720204E700098A2ACFB34D0061","D")
Call WriteViaLoader("2360","02EAF912088E3C96F9C5AA2AF8D024AA","D")
Call WriteViaLoader("2370","3F5013248E3C96C35D080FEEF9","D")
Call WriteViaLoader("23B3","982A30EF70012A8E3C96C704ED","D")
Call WriteViaLoader("23C0","D70904E0D5088827052A8ED1B0F98ED2","D")
Call WriteViaLoader("23D0","1D8E3C96F9C58E23F5F4CC2E2A0F0C8E","D")
Call WriteViaLoader("23E0","23F5F4CC2A2E0F07223FE6D32CD32CC3","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("23F0","5D0C0FE2F99A2CD02DD32C9A2CD02ED3","D")
Call WriteViaLoader("2400","2CF9FFFFFFFF","D")
Call WriteViaLoader("2690","0000000000000000B3B8BDC2C7C7C7C7","D")
Call WriteViaLoader("26A0","C7C7C7C7C7B3B3B3B3B3CCD1D1D1D1D1","D")
Call WriteViaLoader("26B0","D1D6DB06C9DC3E1306C9DC3E2B08C9DC","D")
Call WriteViaLoader("26C0","3E4306C9DC3E6301C9DC3E7B04C9DC3E","D")
Call WriteViaLoader("26D0","7F01C9DC3E8F01C9DC3E9303C9DC3E97","D")
Call WriteViaLoader("26E0","FFC8A0CE0D16F082AC8602C081580703","D")
Call WriteViaLoader("26F0","0000FF40000000000000000000000000","D")
Call WriteViaLoader("2700","DFE1F01A00DFE1003800DF83043800D5","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2710","13011800D912031800D597001820D59B","D")
Call WriteViaLoader("2720","001820DAE50B1800D8B1812820D7AF82","D")
Call WriteViaLoader("2730","3800385003D000289E051C00DFE10238","D")
Call WriteViaLoader("2740","00DABE122860D7B30328E0D6A1012860","D")
Call WriteViaLoader("2750","DFE2002860D7F3822860D4110828E0D8","D")
Call WriteViaLoader("2760","83003800DF7F00380028C50D28E0DEBA","D")
Call WriteViaLoader("2770","0228E0D834042860D8B8082860D8DE00","D")
Call WriteViaLoader("2780","3800D8D7043800D90B033800D93B2338","D")
Call WriteViaLoader("2790","00D9CEF03800DAB7003860DAD0003820","D")
Call WriteViaLoader("27A0","DAD4023860DB16043800D42A052860DB","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("27B0","2800181022F2F01800DFF0042860DD80","D")
Call WriteViaLoader("27C0","8D28E0D9CEF03800DB4C853860DFE101","D")
Call WriteViaLoader("27D0","180028A1883C002308E12860D5E78218","D")
Call WriteViaLoader("27E0","00D667842860DB9FD52860E002822860","D")
Call WriteViaLoader("27F0","DBD0813800D809D29000DFE1F0900038","D")
Call WriteViaLoader("2800","3003F000D9608628E02FC79028A02F10","D")
Call WriteViaLoader("2810","8028A02ABF89D000DB4C8528E02F0884","D")
Call WriteViaLoader("2820","28E0DE458C28E0DE548628E05507AA24","D")
Call WriteViaLoader("2830","B843000EAA2650130EF9D1FEFEAAFFFD","D")
Call WriteViaLoader("2840","8E3F3D2DF78C2F5C8E3F5812399B3012","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2850","3AF4EB0130F9B8C8D829D82AC5AA2AF0","D")
Call WriteViaLoader("2860","D007AA3F481307AB00DDC35D080FEE22","D")
Call WriteViaLoader("2870","A064AB00DDC35D100FF5C59A30AB00ED","D")
Call WriteViaLoader("2880","700130C33D060FF38C3039008CC2988C","D")
Call WriteViaLoader("2890","C0EC8C3EEB8C3B068C3B348C38198C39","D")
Call WriteViaLoader("28A0","788CC27A8C3C968C393A8CE0748C2F43","D")
Call WriteViaLoader("28B0","8C37008CE30E8C3D128C37808C37708C","D")
Call WriteViaLoader("28C0","E0438C3C968C3D568CD6B28C29C48C2F","D")
Call WriteViaLoader("28D0","568C31818C3F378C2AC58C3B558C3B79","D")
Call WriteViaLoader("28E0","8C36EA8CC4308C33B78C2F9D8CD6F68C","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("28F0","31038CD3438C36F58C231E8C37738C3E","D")
Call WriteViaLoader("2900","D08C305C8CEC9C8C37728C377220203F","D")
Call WriteViaLoader("2910","EF000000000000000000000000000000","D")
Call WriteViaLoader("2920","00000000000000000000000000000000","D")
Call WriteViaLoader("2930","000000000000000000000000005CDA5E","D")
Call WriteViaLoader("2940","FA8F6152EA1CFED0C6043DA97745BB98","D")
Call WriteViaLoader("2950","231803ECF766BD3570C1DF224A8EA459","D")
Call WriteViaLoader("2960","9B94A5B8FF490C27663B80DE52CD7AE1","D")
Call WriteViaLoader("2970","134DAAF79438C92552BC617F8016EE03","D")
Call WriteViaLoader("2980","DB01298401005C0A3C7D919AC5AA24B8","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2990","AB00EDAA2650AB00F5C35D080FEFC522","D")
Call WriteViaLoader("29A0","A064AB00DDC35D100FF58800ED2A8800","D")
Call WriteViaLoader("29B0","DD2C7210FD8E3EB272DD158824B02A72","D")
Call WriteViaLoader("29C0","1004E7F9C877202703757F2775EF2742","D")
Call WriteViaLoader("29D0","2A0275F727751F02731F02D3024D0402","D")
Call WriteViaLoader("29E0","0F034204024C0204F750113215D80298","D")
Call WriteViaLoader("29F0","2A347780270DD105D50E322A8E283A32","D")
Call WriteViaLoader("2A00","05000A77202703B50003AA0000764027","D")
Call WriteViaLoader("2A10","0ED0039A2AB81303D40315030206B99B","D")
Call WriteViaLoader("2A20","2A740827C370012ADA02C7D402770827","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2A30","07882AA72A8E2A9575F7273215F75011","D")
Call WriteViaLoader("2A40","762027277780270DD105D50E32348E28","D")
Call WriteViaLoader("2A50","3A32050003AA00007640270AD0039A34","D")
Call WriteViaLoader("2A60","1303150302059B34740827C3700134DA","D")
Call WriteViaLoader("2A70","02CED11577082707882AB32A8E2A9598","D")
Call WriteViaLoader("2A80","342A7D0004020389FF45757F2775DF27","D")
Call WriteViaLoader("2A90","75BF27C4F9C59A2AAB00ED70012AC35D","D")
Call WriteViaLoader("2AA0","0C0FF38E00EDF9F76011F761118EE7AE","D")
Call WriteViaLoader("2AB0","8CE799F76211F763118EE7AE8CE7998E","D")
Call WriteViaLoader("2AC0","DCBB8CD5537702120225FE8CC89E0000","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2EF8","A5A5A5A5A5A5A5A5","D")
Call WriteViaLoader("2F00","A5A5A5A500FFFFFF7601D001F98CDE3A","D")
Call WriteViaLoader("2F10","720504882ACE2A8EE6A0720C048824F4","D")
Call WriteViaLoader("2F20","2A8EE6A02202E377022701F9D5D08EE0","D")
Call WriteViaLoader("2F30","2F8824662E8824062C8EC5078822F22E","D")
Call WriteViaLoader("2F40","8CD8992D00F406E0938EE0F377102603","D")
Call WriteViaLoader("2F50","4224938CE0D47223038CC0C1062FAAFF","D")
Call WriteViaLoader("2F60","FC2DD80628B4B4C4D50BF4D9002A0EC8","D")
Call WriteViaLoader("2F70","322A8E2F8FC4D00EAA006043000E440E","D")
Call WriteViaLoader("2F80","0BC3D32A3D070FE2B4B4120BF932FE55","D")
Call WriteViaLoader("2F90","07AA24C043000EAA2658130EF97DFF60","D")
Call WriteViaLoader("2FA0","02038CD9E51217021D7202078EDA9932","D")
Call WriteViaLoader("2FB0","60CD5D030B10AA2AD01D6102060FE677","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2FC0","0160E27480D3F98EDC9977022745C5AA","D")
Call WriteViaLoader("2FD0","0064AB00EDC35D0C0FF5AA297CAB00ED","D")
Call WriteViaLoader("2FE0","C35D100FF58829412A8800ED2C7210FD","D")
Call WriteViaLoader("2FF0","8E3EB2C5AA00EDD00BAA0064130BAB00","D")
Call WriteViaLoader("3000","64C35D0C0FEE8824F42A720C04726415","D")
Call WriteViaLoader("3010","8CDC54F9E288010030E9D50BC5AA24F4","D")
Call WriteViaLoader("3020","D009AA2AE4130944000BC35D0C0FEE12","D")
Call WriteViaLoader("3030","0B02032205E68CD00D225064AB00EDC3","D")
Call WriteViaLoader("3040","5D100FF58800DD2A8800ED2C7206FD8E","D")
Call WriteViaLoader("3050","3EB298EE3AD42AD429C4B4F975BFCF32","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3060","BEAA3073D029AA3074D02A8EC37A9E2A","D")
Call WriteViaLoader("3070","8C3404C358CE77C7ECCFF8C358C358C3","D")
Call WriteViaLoader("3080","58C358C358C7FBC358C358C358C358C3","D")
Call WriteViaLoader("3090","58C358C358C358C358C358C7F5CF56C8","D")
Call WriteViaLoader("30A0","06C6A4CCC43EDCC358CF08C983C358C3","D")
Call WriteViaLoader("30B0","58C358D0EED0EE30143F20CE3F3710C6","D")
Call WriteViaLoader("30C0","E4C358C358CEAD3BA1C9A0CEB83722C8","D")
Call WriteViaLoader("30D0","A0C5498E311C9A2AD02B70012A9A2AD0","D")
Call WriteViaLoader("30E0","2C9E2C8ED27812088ED310D517120802","D")
Call WriteViaLoader("30F0","088E23CED0178ED3108CD25A7D87080F","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3100","D200057D80080BF48A2ACE2D02020AF4","D")
Call WriteViaLoader("3110","CA2A270506032240E68CD24232085507","D")
Call WriteViaLoader("3120","5A0788312F2A4B012A4900298CD1B031","D")
Call WriteViaLoader("3130","90F0382023693280CF382023632329D2","D")
Call WriteViaLoader("3140","3810237C233D823800237CDFE1F03820","D")
Call WriteViaLoader("3150","2369DFE1823800","D")
Call WriteViaLoader("3159","23598238602369","D")
Call WriteViaLoader("3160","8E311C7D82080B258ED3AE770227058E","D")
Call WriteViaLoader("3170","D4079E194B17388CD3807D87080FE100","D")
Call WriteViaLoader("3180","0C7610B6032241E67D80080BED8CD36C","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3190","220F8E32718824C83088009E32720206","D")
Call WriteViaLoader("31A0","EB4D609E060A4261244C9F2402020314","D")
Call WriteViaLoader("31B0","D39E4D609E060C4D629F0607426124D3","D")
Call WriteViaLoader("31C0","240001F9C5AA0063AB0090C35D0C0FF5","D")
Call WriteViaLoader("31D0","C5AA0090AB0070C35D0C0FF5AA2931AB","D")
Call WriteViaLoader("31E0","0090C35D100FF58829712A8800902C72","D")
Call WriteViaLoader("31F0","10FD8E3EB2C5AA0070D00EAA0090130E","D")
Call WriteViaLoader("3200","AB0090C35D100FEED72404C4D50BC5AA","D")
Call WriteViaLoader("3210","2EECD00EAA009043000E440E0BC35D0C","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3220","0FED120B0202009B726315882EEC2A72","D")
Call WriteViaLoader("3230","0C04E7880060308824C832720206ED12","D")
Call WriteViaLoader("3240","17028022038E32714261FD98622A753F","D")
Call WriteViaLoader("3250","291260B7B7D0048E32717780FD0D8800","D")
Call WriteViaLoader("3260","6030982A32420406ED00D4726015E700","D")
Call WriteViaLoader("3270","CE42170BD0178ED3D54C170B420B17F9","D")
Call WriteViaLoader("3280","7440CF22038E3271126202042D040F01","D")
Call WriteViaLoader("3290","F98824E63088009E32720206EBF4CC9F","D")
Call WriteViaLoader("32A0","610A057D0162021206E68824CA30EFB0","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("32B0","02DE2507B34D006206D698619F326222","D")
Call WriteViaLoader("32C0","4CC702072231C7020222401D1706C172","D")
Call WriteViaLoader("32D0","0C04882EF82A8EE6A03262D1FFC70658","D")
Call WriteViaLoader("32E0","220C8E3271C5AA0060AB00DDC35D0C0F","D")
Call WriteViaLoader("32F0","F5AA297CAB00DDC35D100FF58829412A","D")
Call WriteViaLoader("3300","8800DD2C7208FD8E3EB2C5AA0060D00E","D")
Call WriteViaLoader("3310","AA00DD130EAB00DDC35D0C0FEE72DD15","D")
Call WriteViaLoader("3320","882EE02A720C04E7882DE02A8E337C88","D")
Call WriteViaLoader("3330","2E002A8E337C002BC7061A22118E3271","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3340","88006030882AD332721106ED882E202A","D")
Call WriteViaLoader("3350","8E337C000E882E402A8E337C882E602A","D")
Call WriteViaLoader("3360","8E337C88009E308824E632720206ED12","D")
Call WriteViaLoader("3370","FF8824CA30EA75BFCF89FF1422208E32","D")
Call WriteViaLoader("3380","7188006030982A32722006EDF98824CA","D")
Call WriteViaLoader("3390","30EF2507F9B87260BE8E3537D4BE0025","D")
Call WriteViaLoader("33A0","12BE2D5C0BEF7640CFEB0019D7D78E33","D")
Call WriteViaLoader("33B0","8D2D030BEB000EC5B5AB00DAC35D260F","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("33C0","F812D706E722908CC38F52FF8E351F12","D")
Call WriteViaLoader("33D0","0B0239002C30010060C5AA0101AB0061","D")
Call WriteViaLoader("33E0","C33D600FF58824E63088009E32720206","D")
Call WriteViaLoader("33F0","EBF4CC9F6202D300088824CA30EFB002","D")
Call WriteViaLoader("3400","D48900AE768028F1F98CC27A5D0C06F9","D")
Call WriteViaLoader("3410","C5AA2951AB0100C35D100FF5882AD330","D")
Call WriteViaLoader("3420","EFD00BC5AA0063AB0100C33D0B0FF5C5","D")
Call WriteViaLoader("3430","AA0100AB0140C35D100FF58829612A88","D")
Call WriteViaLoader("3440","01002C7204FD8E3EB2223C8E3ECBD5DB","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3450","32DBC2A801002C8EECA58EECA5C59A2C","D")
Call WriteViaLoader("3460","D009AA014013099B2CF4EB102CAB0140","D")
Call WriteViaLoader("3470","D32CC35D100FE7D3DB7D04DB0FD28801","D")
Call WriteViaLoader("3480","402C8EECA58EECA5226A8E3ECBD509C5","D")
Call WriteViaLoader("3490","AA0140D00BAA0148130BAB0140D00BA8","D")
Call WriteViaLoader("34A0","2ADC30EF130B440009C35D080FE21209","D")
Call WriteViaLoader("34B0","020D8EDED97701B8037217C689FF49C5","D")
Call WriteViaLoader("34C0","AA0100D00BA82DE030EF130BAB0100C3","D")
Call WriteViaLoader("34D0","5D400FECC5A82AD430EFAB00DDC35D08","D")
Call WriteViaLoader("34E0","0FF3882AD330EFC01260B7B76CD02488","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("34F0","00632A4B012AC53D240B059A2AAB00DD","D")
Call WriteViaLoader("3500","D32AC35D080FF08E0100C5AA00DDD00B","D")
Call WriteViaLoader("3510","AA00A0130BAB00A0C35D080FEE009DD5","D")
Call WriteViaLoader("3520","0BC5AA2EE0D00EAA2EF8130E44000BC3","D")
Call WriteViaLoader("3530","5D0C0FEE120BF98E3ED68A288B020788","D")
Call WriteViaLoader("3540","2F042A8EE68E8824CA30EFD01625072D","D")
Call WriteViaLoader("3550","03061C8E36A172600C7202128EE4098E","D")
Call WriteViaLoader("3560","E41A882E802A8E36C18E36A18901212D","D")
Call WriteViaLoader("3570","04061E8E36A1882E8030880100327260","D")
Call WriteViaLoader("3580","06EB72600C7202128EE41A8E36BD8900","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3590","FF2D070259D5E9260102D9E98E36A188","D")
Call WriteViaLoader("35A0","29812A8EC4AEC542E9EA5D060B02D9EA","D")
Call WriteViaLoader("35B0","AA2EE015EAAB00DDC35D0C0FEA222D8E","D")
Call WriteViaLoader("35C0","3ECB8800DD2A22608EEBEF226A8E3ECB","D")
Call WriteViaLoader("35D0","C5AA0100AB0060C35D200FF572600C72","D")
Call WriteViaLoader("35E0","02128EE4098EE41A8E36BD8C36907248","D")
Call WriteViaLoader("35F0","948EED82D5DB32DB5D400B06A82DE02A","D")
Call WriteViaLoader("3600","00225D480B06A82A942A00185D500B06","D")
Call WriteViaLoader("3610","A82A942A000E5D510B06A82A832A0004","D")
Call WriteViaLoader("3620","A82DCF2A982A30EF8EEDA4C312950209","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3630","5DB10FC4C88EEE89C4129606B9D1DB5D","D")
Call WriteViaLoader("3640","B10FB3C5AA0088AB00DDC35D0C0FF5AA","D")
Call WriteViaLoader("3650","297CAB00DDC35D100FF58829412A8800","D")
Call WriteViaLoader("3660","DD2C7208FD8E3EB2C5AA0088D00EAA00","D")
Call WriteViaLoader("3670","DD130EAB00DDC35D0C0FEE72DD15882E","D")
Call WriteViaLoader("3680","F82A720C04E78E351F020852028E3EA3","D")
Call WriteViaLoader("3690","1216B38824CA30EAB5882F042A8EE68E","D")
Call WriteViaLoader("36A0","F9882E202A726004C5982A349A34AB01","D")
Call WriteViaLoader("36B0","00700134C33D040FF38E36C4F9882E20","D")
Call WriteViaLoader("36C0","2A7260048801002C420422C59A2CAB00","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("36D0","6070012CC35D200FF388006030982A32","D")
Call WriteViaLoader("36E0","722006ED7C202204E2F92D080604C58E","D")
Call WriteViaLoader("36F0","3EA38CC3A3D002A6013DFC80351302F9","D")
Call WriteViaLoader("3700","7D54BE06087D400902032200E68CC1C9","D")
Call WriteViaLoader("3710","E2D0C18ED06A7260157240048826102A","D")
Call WriteViaLoader("3720","E7F9760112178ED06A770125058ECEFF","D")
Call WriteViaLoader("3730","00288ED04D8826102A7701101172400C","D")
Call WriteViaLoader("3740","8EE4098EE41A8801002A7601120DC59A","D")
Call WriteViaLoader("3750","2AE170012AC35D400FF5F998C3AB8837","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3760","D22A8E379BC5AA0088E1C35D080FF7F9","D")
Call WriteViaLoader("3770","D50BF93203AB0164B81202AB016CB4F9","D")
Call WriteViaLoader("3780","2240522DAB0100C35D3F0FF81210AB01","D")
Call WriteViaLoader("3790","008826902A8E379F8C376576011014C5","D")
Call WriteViaLoader("37A0","9A2A7D5ABE0601B2AB00A4C370012A5D","D")
Call WriteViaLoader("37B0","080FED7248948EED827D44BE020D7D56","D")
Call WriteViaLoader("37C0","BE02088E37DA8E37DA00068E37F38E37","D")
Call WriteViaLoader("37D0","F3F9E4442502455414D4C5AA01008EED","D")
Call WriteViaLoader("37E0","A4C35D400FF5C5AA00A48EEDA4C35D08","D")
Call WriteViaLoader("37F0","0FF5F9C5A8010030EE8EEDA4C35D2D0F","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3800","F3AA01008EEDA4C35D400FF5C5AA00A4","D")
Call WriteViaLoader("3810","8EEDA4C35D080FF5F9D513D50B7D36BE","D")
Call WriteViaLoader("3820","0201F972041E8E386622368E3CA000F2","D")
Call WriteViaLoader("3830","8EDC0A88006230EE272004302987D78A","D")
Call WriteViaLoader("3840","2ACE27010776401E03223EE68E3866F9","D")
Call WriteViaLoader("3850","302987D78A2ACE270203223DE6D51E74","D")
Call WriteViaLoader("3860","801E8E3866F97201D977801E037200D9","D")
Call WriteViaLoader("3870","8E39168E38B18838912A77801E048838","D")
Call WriteViaLoader("3880","A12AC59A2AAB00A0C370012A5D100FF3","D")
Call WriteViaLoader("3890","F950E75FA407240EC5A87738C1CBE7B6","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("38A0","63B3029E192FC4CF365AB16C722D1DB1","D")
Call WriteViaLoader("38B0","BEF70038F7003AF7803DFF5207F7083D","D")
Call WriteViaLoader("38C0","8E38D9C704FA8839012C77801E048839","D")
Call WriteViaLoader("38D0","0A2C8E38EE8E38D9F99A2AD0059A2E13","D")
Call WriteViaLoader("38E0","05A6013DFC213070012A70012EF99A2C","D")
Call WriteViaLoader("38F0","213270012C9A2C213470012C9A2C213D","D")
Call WriteViaLoader("3900","F902622C02403402442601642D016034","D")
Call WriteViaLoader("3910","01422F03403C121E25072704022504B2","D")
Call WriteViaLoader("3920","BC8826602A4B002A790029883F582E4B","D")
Call WriteViaLoader("3930","002E79002DF97410B6F9","D")
Call WriteViaLoader("393D","2240AB","D")
Call WriteViaLoader("3940","0100C35D400FF88E3ED6C5AA2688D024","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3950","AA3F801324AB00A4C35D080FEE8E37B3","D")
Call WriteViaLoader("3960","C5D509E2D002AA00881302440009C35D","D")
Call WriteViaLoader("3970","080FF0120902BFF98E3ED67D40BE061A","D")
Call WriteViaLoader("3980","8824503088009032720406EB12901491","D")
Call WriteViaLoader("3990","020872020688009030E58E3A8375EFB6","D")
Call WriteViaLoader("39A0","8E3AE48E3F8872970A920A8EE7D1726A","D")
Call WriteViaLoader("39B0","0A920A520C8E3AFC7D67080601E25208","D")
Call WriteViaLoader("39C0","A6013DFC80358E3CA0C704F4C5AA00A0","D")
Call WriteViaLoader("39D0","2DFB0F022CFBAB007CC35D080FEF12D9","D")
Call WriteViaLoader("39E0","88E91F30B0020488EA3F3098302A72A3","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("39F0","0A920A12D98EE89F726A0A920AC5E2D0","D")
Call WriteViaLoader("3A00","07A8015C30EE1307AB0060C35D08020D","D")
Call WriteViaLoader("3A10","7D670802E95D050FE5D50700E4F7803D","D")
Call WriteViaLoader("3A20","FFC5F7083DAA0060A6013DFC2130C35D","D")
Call WriteViaLoader("3A30","070FF28839072C77801E048839102C8E","D")
Call WriteViaLoader("3A40","38EE1267A6013DFC2130C5A6013DFC80","D")
Call WriteViaLoader("3A50","35AB007CC35D080FF2982A3072A30A92","D")
Call WriteViaLoader("3A60","0A12D9D5038EE8D5726A0A920A7D0803","D")
Call WriteViaLoader("3A70","F406C27AB0021B77021E0552018E3EA3","D")
Call WriteViaLoader("3A80","8CDCDF5208A6013DFC80358E3C96C704","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3A90","F4F97410B68800B02A88003B2E720207","D")
Call WriteViaLoader("3AA0","8EDBD87D40BE06D8F7803D88390A2CF7","D")
Call WriteViaLoader("3AB0","083D8E38EEF7283DC5AA00A0A6013DFC","D")
Call WriteViaLoader("3AC0","2130C35D070605F7243D00EDF7283D5D","D")
Call WriteViaLoader("3AD0","0F0FE68839132C8E38EE12AFA6013DFC","D")
Call WriteViaLoader("3AE0","2130009C8839042C77801E0488390D2C","D")
Call WriteViaLoader("3AF0","8E38EE12D8A6013DFC2130F9B58E3CA0","D")
Call WriteViaLoader("3B00","12D8C704F8F932117D60BE06068EFFBC","D")
Call WriteViaLoader("3B10","2317F912BE250F2D0A061112D402038C","D")
Call WriteViaLoader("3B20","FFB67620C1038CFF9E8CFFAE7D56BE02","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3B30","F58CFFA67D60BE0605882E202AF912D4","D")
Call WriteViaLoader("3B40","02058825D02AF97620C1058825502AF9","D")
Call WriteViaLoader("3B50","8825902AF97D60BE061A8E338D2D0306","D")
Call WriteViaLoader("3B60","05882E7F2CF92D040605882E4F2CF988","D")
Call WriteViaLoader("3B70","007F2CF988264F2CF97D60BE061D8E33","D")
Call WriteViaLoader("3B80","8D2D030606F4CA2C2E4FF92D040606F4","D")
Call WriteViaLoader("3B90","CA2C2E1FF9F4CA2C005FF9F4CA2C260F","D")
Call WriteViaLoader("3BA0","F98E3ED67710B82FD508D5B87708D008","D")
Call WriteViaLoader("3BB0","7216087404B800517640B54D88017630","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3BC0","8800A0327208068EE5B7D5A8D5A97401","D")
Call WriteViaLoader("3BD0","B88E3C74890096C5AA24F4D00BAA00A0","D")
Call WriteViaLoader("3BE0","43000BAA2AE4130BAB00A0C35D0C0FE8","D")
Call WriteViaLoader("3BF0","8EDED98EDF617D17C606037204B87708","D")
Call WriteViaLoader("3C00","B8037402D17601B80FC5B5AB00A0AB00","D")
Call WriteViaLoader("3C10","88C35D0A0FF50037C58801762CA6013D","D")
Call WriteViaLoader("3C20","FC80358E3CA0A8017630EE13D89B2C70","D")
Call WriteViaLoader("3C30","012CC35D0A0FE68801762CC59A2CAB00","D")
Call WriteViaLoader("3C40","A0AB0088B59B2CC370012C5D0A0FED77","D")
Call WriteViaLoader("3C50","40B7038E3D907601B604D5A8D5A98E3C","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3C60","74C5AA0088AB00A0C35D080FF598D6C3","D")
Call WriteViaLoader("3C70","98A7D6F942B5AA12B82507D0AB32C734","D")
Call WriteViaLoader("3C80","C802057401D2D5084208ACC5AA00A0E1","D")
Call WriteViaLoader("3C90","C35D0D0FF7F9A6013DFC21308E3CA0F9","D")
Call WriteViaLoader("3CA0","B8C8D5DBD5DCD0D87B05DC32DBAA00A8","D")
Call WriteViaLoader("3CB0","1BD8AB00A8D0DAAA00A013DAAB00A013","D")
Call WriteViaLoader("3CC0","DC251FC0AA3CF2D0DA32DB5306AA00A8","D")
Call WriteViaLoader("3CD0","13DAAB00A8B0BDD0DA32DB5305AA00A0","D")
Call WriteViaLoader("3CE0","1CDAAB00A04300D8D3DB7D08DB0FB9C4","D")
Call WriteViaLoader("3CF0","B4F9BF12939242AFE7E3B2C6B89180B4","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3D00","E8739EF75DFDA082F96F25177D0B5597","D")
Call WriteViaLoader("3D10","0C8022678EE06F74042522088EE06F8E","D")
Call WriteViaLoader("3D20","3A838E3AE48E3F8872970A920A8EE7D1","D")
Call WriteViaLoader("3D30","726A0A920A520A8E3AFC8839012C8E38","D")
Call WriteViaLoader("3D40","EEC5A6013DFC80358E3C9612D88EE06F","D")
Call WriteViaLoader("3D50","C35D080FEDF98EFA27B006F988006830","D")
Call WriteViaLoader("3D60","88245832720406EDC5AA2688D007AA3F","D")
Call WriteViaLoader("3D70","80430007AA00601307AB0060C35D080F","D")
Call WriteViaLoader("3D80","E87260158826902A720804E77420D1F9","D")
Call WriteViaLoader("3D90","882460308800ED32720406EB720407D5","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3DA0","063206AA00A0D0045503AA00EDD00532","D")
Call WriteViaLoader("3DB0","06C35507AA00A04B0005C85503AA00ED","D")
Call WriteViaLoader("3DC0","D00932043C00553F8E3E084300051204","D")
Call WriteViaLoader("3DD0","1309BDB0BDC08E3E08BE1B05C4AB00A0","D")
Call WriteViaLoader("3DE0","C5D8F0AA00EDD002B0BFD003B4D80225","D")
Call WriteViaLoader("3DF0","80BE1403AB00EDC3770401E7B4D30677","D")
Call WriteViaLoader("3E00","08069ED7070498F98EFFB67D00D406F7","D")
Call WriteViaLoader("3E10","8CFF9E0012010125002008001E010124","D")
Call WriteViaLoader("3E20","100808001A0101240602080013010125","D")
Call WriteViaLoader("3E30","202008002D01012408040800D0010124","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3E40","650108002E010124682008004E010124","D")
Call WriteViaLoader("3E50","5C04080058010124E0010800F3010124","D")
Call WriteViaLoader("3E60","A40408001901012464010800FE010124","D")
Call WriteViaLoader("3E70","0C04080041010121060408C9F4000000","D")
Call WriteViaLoader("3E80","45010124881C0800F8010120240908CA","D")
Call WriteViaLoader("3E90","360000CA750000CAB100000044010124","D")
Call WriteViaLoader("3EA0","E80C08B8A82AD02A9A2AB302038EE68E","D")
Call WriteViaLoader("3EB0","B4F9223C8E3ECB4204FED50E8EECA5D3","D")
Call WriteViaLoader("3EC0","0E4DFD0E0FF642FE04226AD00A920AF9","D")
Call WriteViaLoader("3ED0","8E3ED68CC1A47202058CC204E2C07604","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3EE0","D10375BFD375F7CF8CC9597601CF1B2D","D")
Call WriteViaLoader("3EF0","7F06178E298C8EC24C8A2F04020A882E","D")
Call WriteViaLoader("3F00","202A72C0048EE6A0227F7D5EBE060E7D","D")
Call WriteViaLoader("3F10","01120609D31D7D081D060222018CC00B","D")
Call WriteViaLoader("3F20","770212108ED0EE8EDED97608B80375BF","D")
Call WriteViaLoader("3F30","B48CCC4E8CCC3675FBB48CD59FF4CA2C","D")
Call WriteViaLoader("3F40","CBB90603728646F9","D")
Call WriteViaLoader("3F58","12937D0406060375","D")
Call WriteViaLoader("3F60","1F938E2856D093F9","D")
Call WriteViaLoader("3F88","727B0252058E3FB8","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (UnEncrypted Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3F90","722902000A520FAA00A0BCF008D0028E","D")
Call WriteViaLoader("3FA0","3FB3AA00A0823FDFC522C72306724B02","D")
Call WriteViaLoader("3FB0","4B02005203A40220AA00AA1B02AB00AA","D")
Call WriteViaLoader("3FC0","AA009FCAF3F91E72CB250299A866F0DA","D")
Call WriteViaLoader("3FD0","234B00F8F5A0ABA70005009FCAB9F952","D")
Call WriteViaLoader("3FE0","03AA00A0D002AA00AC4B0002AA3F9413","D")
Call WriteViaLoader("3FF0","022B5ABE236BAB00ACCAE6A3FD20F900","D")
Call WriteViaLoader("24B0","0000000000000000","D")
Call WriteViaLoader("24B8","0000000000000000","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2465","0000","E")
Call WriteViaLoader("24D0","4855","E")
Call WriteViaLoader("24D3","560329","E")
Call WriteViaLoader("24DE","0000","D")
Call WriteViaLoader("2540","0000000000000000","D")
Call WriteViaLoader("2610","00000000000000000000000000000000","D")
Call WriteViaLoader("2620","00000000000000000000000000000000","D")
Call WriteViaLoader("2630","00000000000000000000000000000000","D")
Call WriteViaLoader("2640","00000000000000000000000000000000","D")
Call WriteViaLoader("24C8","0700","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("3C37","8801762C","D")
Call WriteViaLoader("33C7","8CC38F","D")
Call WriteViaLoader("384C","8E3866","D")
Call WriteViaLoader("2D16","C5AA24D8D002AA24C043","D")
Call WriteViaLoader("2D20","0002AA2658430002A6013DFC80351302","D")
Call WriteViaLoader("2D30","440024C35D030FDF12240603740428","D")
Call WriteViaLoader("24C8","0600","E")
Call WriteViaLoader("2D49","8C2024","D")
Call WriteViaLoader("2CEB","06","D")
Call WriteViaLoader("2901","8C305C","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2932","0000000000000000000000","D")
Call WriteViaLoader("24C8","0000","E")
Call WriteViaLoader("270F","D513","D")
Call WriteViaLoader("370D","8CC1C9","D")
Call WriteViaLoader("2CD0","00000000000000000000000000000000","E")
Call WriteViaLoader("2CE0","00000000000000000000000000000000","E")
Call WriteViaLoader("2CF0","00000000000000000000000000000000","E")
Call WriteViaLoader("2D00","00000000000000000000000000000000","E")
Call WriteViaLoader("2D10","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2D20","00000000000000000000000000000000","E")
Call WriteViaLoader("2D30","00000000000000000000000000000000","E")
Call WriteViaLoader("2D40","00000000000000000000000000000000","E")
Call WriteViaLoader("2D50","00000000000000000000000000000000","E")
Call WriteViaLoader("2D60","00000000000000000000000000000000","E")
Call WriteViaLoader("2D70","00000000000000000000000000000000","E")
Call WriteViaLoader("2D80","00000000000000000000000000000000","E")
Call WriteViaLoader("2D90","00000000000000000000000000000000","E")
Call WriteViaLoader("2DA0","00000000000000000000000000000000","E")
Call WriteViaLoader("2DB0","00000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2DB7","000000000000000000","E")
Call WriteViaLoader("2DC0","01172F15FFFF01FF07FF504C45415345","E")
Call WriteViaLoader("2DD0","205354414E4420425900000000000000","E")
Call WriteViaLoader("24E6","0000","E")
Call WriteViaLoader("2AD3","00000000000000000000000000","E")
Call WriteViaLoader("2AE0","00000000","E")
Call WriteViaLoader("2DE0","00000000000000000000000000000000","E")
Call WriteViaLoader("2DF0","00000000000000000000000000000000","E")
Call WriteViaLoader("2E00","00000000000000000000000000000000","E")
Call WriteViaLoader("2E10","00000000000000000000000000000000","E")
Call WriteViaLoader("2E20","00000000000000000000000000000000","E")
Call WriteViaLoader("2E30","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2E40","00000000000000000000000000000000","E")
Call WriteViaLoader("2E50","00000000000000000000000000000000","E")
Call WriteViaLoader("2E60","00000000000000000000000000000000","E")
Call WriteViaLoader("2E70","00000000000000000000000000000000","E")
Call WriteViaLoader("2E80","00000000000000000000000000000000","E")
Call WriteViaLoader("2E90","00000000000000000000000000000000","E")
Call WriteViaLoader("2EA0","00000000000000000000000000000000","E")
Call WriteViaLoader("2EB0","00000000000000000000000000000000","E")
Call WriteViaLoader("2EC0","00000000000000000000000000000000","E")
Call WriteViaLoader("2ED0","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Main Code (Encrypted Area)..." & INT(PercentageClean) & "%.", CleanCounter, 44,"                                  Cleaning card")
Call WriteViaLoader("2EE0","5A5A5A5A5A5A5A5A5A5A5A5A","D")
Call WriteViaLoader("2EF8","A5A5A5A5A5A5A5A5A5A5A5A5","D")
Call WriteViaLoader("2AD0","000000","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 44
    Call Sc.ProgressBox ("Cleaning Complete..." & INT(PercentageClean) & "%.", CleanCounter, 44, "                                  Cleaning card")

    Call Part3()
    Call Sc.ProgressBox ("", 0, 0, "")

End Sub

Sub Part3()

    Dim CleanCounter
    CleanCounter = 1

        PercentageClean = CleanCounter * 100 / 23
Call WriteViaLoader("2024","000000000000000000000000","E")
Call WriteViaLoader("2030","00000000000000000000000000000000","E")
Call WriteViaLoader("2040","00000000000000000000000000000000","E")
Call WriteViaLoader("2050","00000000000000000000000000000000","E")
Call WriteViaLoader("2060","00000000000000000000000000000000","E")
Call WriteViaLoader("2070","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (PPV Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2080","00000000000000000000000000000000","E")
Call WriteViaLoader("2090","00000000000000000000000000000000","E")
Call WriteViaLoader("20A0","00000000000000000000000000000000","E")
Call WriteViaLoader("20B0","00000000000000000000000000000000","E")
Call WriteViaLoader("20C0","00000000000000000000000000000000","E")
Call WriteViaLoader("20D0","00000000000000000000000000000000","E")
Call WriteViaLoader("20E0","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (PPV Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("20F0","00000000000000000000000000000000","E")
Call WriteViaLoader("2100","000000000000","E")
Call WriteViaLoader("2106","00000000000000000000","E")
Call WriteViaLoader("2110","00000000000000000000000000000000","E")
Call WriteViaLoader("2120","00000000000000000000000000000000","E")
Call WriteViaLoader("2130","00000000000000000000000000000000","E")
Call WriteViaLoader("2140","00000000000000000000000000000000","E")                              ' Rating
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Tier Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2150","00000000000000000000000000000000","E")
Call WriteViaLoader("2160","00000000000000000000000000000000","E")
Call WriteViaLoader("2170","00000000000000000000000000000000","E")
Call WriteViaLoader("2180","00000000000000000000000000000000","E")
Call WriteViaLoader("2190","00000000000000000000000000000000","E")
Call WriteViaLoader("21A0","00000000000000000000000000000000","E")
Call WriteViaLoader("21B0","00000000000000000000000000000000","E")
Call WriteViaLoader("21C0","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Tier Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("21D0","00000000000000000000000000000000","E")
Call WriteViaLoader("21E0","00000000000000000000000000000000","E")
Call WriteViaLoader("21F0","00000000000000000000000000000000","E")
Call WriteViaLoader("2200","00000000000000000000000000000000","E")
Call WriteViaLoader("2210","00000000000000000000000000000000","E")
Call WriteViaLoader("2220","00000000000000000000000000000000","E")
Call WriteViaLoader("2230","00000000000000000000000000000000","E")
Call WriteViaLoader("2240","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Tier Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2250","00000000000000000000000000000000","E")
Call WriteViaLoader("2260","00000000000000000000000000000000","E")
Call WriteViaLoader("2270","00000000000000000000000000000000","E")
Call WriteViaLoader("2280","00000000000000000000000000000000","E")
Call WriteViaLoader("2290","00000000000000000000000000000000","E")
Call WriteViaLoader("22A0","00000000000000000000000000000000","E")
Call WriteViaLoader("22B0","00000000000000000000000000000000","E")
Call WriteViaLoader("22C0","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Tier Area)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("22D0","00000000000000000000000000000000","E")
Call WriteViaLoader("22E0","00000000000000000000000000000000","E")
Call WriteViaLoader("22F0","0000","E")
Call WriteViaLoader("2406","03E8","E")
Call WriteViaLoader("2408","00000000","E")
Call WriteViaLoader("240C","00000000","E")
Call WriteViaLoader("2410","0000000000000000","E")
Call WriteViaLoader("2418","0000000000010000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (PPv Slots)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2420","00000000000000000000000100000000","E")
Call WriteViaLoader("2430","00000000000000000001000000000000","E")
Call WriteViaLoader("2440","00000000000000010000000000000000","E")
Call WriteViaLoader("2450","00000000","E")
Call WriteViaLoader("2454","0000000000000000","E")
Call WriteViaLoader("245C","00000000","E")
Call WriteViaLoader("2460","00000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2464","09","E")
Call WriteViaLoader("2465","0000","E")
Call WriteViaLoader("2467","00","D")
Call WriteViaLoader("2468","18885551212FFF00","E")
Call WriteViaLoader("2470","18885551212FFF00","E")
Call WriteViaLoader("2478","18005551212FFF00","E")
Call WriteViaLoader("2480","18005551212FFF00","E")
Call WriteViaLoader("2488","0102000001020000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2490","01020000030400000102000001020000","E")
Call WriteViaLoader("24A0","01020000","E")
Call WriteViaLoader("24A4","00000000","E")
Call WriteViaLoader("24CA","000000000000","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("24E1","01002B0017","D")
Call WriteViaLoader("24E8","0000000000000000","E")
Call WriteViaLoader("24F0","00000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000000000000000000000000000000FF","E")
Call WriteViaLoader("2520","00000000000000000000000000000000","E")
Call WriteViaLoader("2530","00000000000000000000000000000000","E")
Call WriteViaLoader("2B00","00000000000000000000000000000000","E")
Call WriteViaLoader("2B10","00000000000000000000000000000000","E")
Call WriteViaLoader("2B20","00000000000000000000000000000000","E")
Call WriteViaLoader("2B30","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2B40","00000000000000000000000000000000","E")
Call WriteViaLoader("2B50","00000000000000000000000000000000","E")
Call WriteViaLoader("2B60","00000000000000000000000000000000","E")
Call WriteViaLoader("2B70","00000000000000000000000000000000","E")
Call WriteViaLoader("2B80","00000000000000000000000000000000","E")
Call WriteViaLoader("2B90","00000000000000000000000000000000","E")
Call WriteViaLoader("2BA0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BB0","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2BC0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BD0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BE0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BF0","00000000000000000000000000000000","E")
Call WriteViaLoader("2C00","00000000000000000000000000000000","E")
Call WriteViaLoader("2C10","00000000000000000000000000000000","E")
Call WriteViaLoader("2C20","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2C30","00000000000000000000000000000000","E")
Call WriteViaLoader("2C40","00000000000000000000000000000000","E")
Call WriteViaLoader("2C50","00000000000000000000000000000000","E")
Call WriteViaLoader("2C60","00000000000000000000000000000000","E")
Call WriteViaLoader("2C70","00000000000000000000000000000000","E")
Call WriteViaLoader("2C80","00000000000000000000000000000000","E")
Call WriteViaLoader("2C90","00000000000000000000000000000000","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2CA0","00000000000000000000000000000000","E")
Call WriteViaLoader("2CB0","00000000000000000000000000000000","E")
Call WriteViaLoader("2CC0","00000000000000000000000000000000","E")
Call WriteViaLoader("2CD0","5503AA013AD0DBD524882D482ED5E3F9","D")
Call WriteViaLoader("2CE0","21513C515063DE1E7D40BE0652F7803D","D")
Call WriteViaLoader("2CF0","FFFFC5F7083DAA2CE0A6013DFC2130C3","D")
Call WriteViaLoader("2D00","5D070FF28839072C8E38EEAA2CE0A601","D")
Call WriteViaLoader("2D10","3DFC2130D524C5AA24D8D002AA24C043","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2D20","0002AA2658430002A6013DFC80351302","D")
Call WriteViaLoader("2D30","440024C35D030FDF122406037404288C","D")
Call WriteViaLoader("2D40","C1C9760428038CD5138C202422F2008B","D")
Call WriteViaLoader("2D50","23D500312698007A271103BD2CD00010","D")
Call WriteViaLoader("2D60","2CE800642D4C00402D8C002B2F080132","D")
Call WriteViaLoader("2D70","3039011E315907E1393D060B3F580010","D")
Call WriteViaLoader("2D80","3F8800773FFF00013FFF00017D08E306","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2D90","0342DEDD7D10E3021DD3E370042EDEDD","D")
Call WriteViaLoader("2DA0","07EAC59A2EAB002970012EC35704F470","D")
Call WriteViaLoader("2DB0","FF2C70FC2EC3F9","D")
Call WriteViaLoader("370D","8C2CE8","D")
Call WriteViaLoader("270F","2D42","D")
Call WriteViaLoader("24C8","0600","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2932","22C2B8227AB888305C43F9","D")
Call WriteViaLoader("2901","8C2932","D")
Call WriteViaLoader("2CEB","00","D")
Call WriteViaLoader("2D49","8CC27A","D")
Call WriteViaLoader("24C8","0700","E")
Call WriteViaLoader("2D16","77201E037420D28E3866","D")
Call WriteViaLoader("2D20","F97720D2067420B775DFD28CC38F8801","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2D30","772C7720B7069A2C25BF9B2CD72CF9","D")
Call WriteViaLoader("384C","8C2D16","D")
Call WriteViaLoader("33C7","8C2D21","D")
Call WriteViaLoader("3C37","FF8E2D2E","D")
Call WriteViaLoader("24C8","0800","E")
Call WriteViaLoader("2DE0","A014EB90793ED0DDAF5F16258DB1F1D1","E")
Call WriteViaLoader("2DF0","86D257FB40D54C9CC085B574C7A221E9","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2E00","3B6AA7A5A3E69FBA06663619D99A373B","E")
Call WriteViaLoader("2E10","25A0672E34D0D75098DDFAA08320059C","E")
Call WriteViaLoader("2E20","135033A93A589A37997B42E1C9F3E39F","E")
Call WriteViaLoader("2E30","EA3DBF1928F7CEDC18181C85FCFB9FC0","E")
Call WriteViaLoader("2E40","618A30F70354CED3A32E4E156C63D8F9","E")
Call WriteViaLoader("2E50","AFB1108A151046F13A4089133B22D57F","E")
Call WriteViaLoader("2E60","938A30D3F506A994BD0FF5AB05DE0FE9","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2E70","378C6DF0E35BE0A10E9678C2A161D000","E")
Call WriteViaLoader("2E80","4314436DAE6C61EA588B35715B645AD5","E")
Call WriteViaLoader("2E90","B93B95CB48432B9FE839CD6F6F31193B","E")
Call WriteViaLoader("2EA0","56A8131E4D10225C796B1F1FE68448D0","E")
Call WriteViaLoader("2EB0","06B91F85B4A48ABCFE55F427C6DEDB8A","E")
Call WriteViaLoader("2EC0","228C0E9BA3D1CAEA5B536D191A1FDE6D","E")
Call WriteViaLoader("2ED0","AA9FDCE3C7233C6607463628D69C2500","E")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Main Code (Special Areas)..." & INT(PercentageClean) & "%.", CleanCounter, 23,"                                  Cleaning card")
Call WriteViaLoader("2EE0","3AC78A87EB6EA8420DC8F077","D")
Call WriteViaLoader("2EF8","3AC78A87EB6EA8420DC8F077","D")
Call WriteViaLoader("2AD3","0167B0E3F472674726F97061E5","E")
Call WriteViaLoader("2AE0","BBC137A9","E")
Call WriteViaLoader("24E6","0006","E")
Call WriteViaLoader("2AD0","000000","D")
         CleanCounter = CleanCounter + 1
         PercentageClean = CleanCounter * 100 / 23
    Call Sc.ProgressBox ("Cleaning Complete..." & INT(PercentageClean) & "%.", CleanCounter, 23, "                                  Cleaning card")
    Call InstallUpdates()

    Call WriteAltEE()
    Call Sc.ProgressBox ("", 0, 0, "")

End Sub
'*************************************************************
Sub WriteAltEE()

Call Sc.ProgressBox ("Writing Alt-EE Fix Code...", 1, 5, "")
Sc.Write("25E2 9F 2B10 5220AA2B78AB015FCAF85260AA2B26AB004FCAF88C00508820002A8801602C52 00")
Sc.Read(&h02)
Call WDTMR()
Call Sc.ProgressBox ("Writing Alt-EE Fix Code...", 2, 5, "")

Sc.Write("25E2 9F 2B30 20F75011F760139A2C9B2A70012A70012CCAF4F72211F723118F0014F72011F7 00")
Sc.Read(&h02)
Call WDTMR()
Call Sc.ProgressBox ("Writing Alt-EE Fix Code...", 3, 5, "")

Sc.Write("25E2 9F 2B50 21118F000BF70013B4B47230518C01008800002E70012E7D2F2D09F8F7001172 00")
Sc.Read(&h02)
Call WDTMR()

Call Sc.ProgressBox ("Writing Alt-EE Fix Code...", 4, 5, "")

Sc.Write("25E2 9F 2B70 9004DA04FDF70011F900000000AA0000000000000000F300F3FFFFFFFFFFFFFF 00")
Sc.Read(&h02)
Call WDTMR()
Call Sc.ProgressBox ("Writing Alt-EE Fix Code...", 5, 5, "")

Sc.Write("25E2 9F 2B90 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000F300F3FFFFFFFFFFFFFF 00")
Sc.Read(&h02)
Call WDTMR()

Sc.Write("05 C2 41 2B10 00")
sc.delay(1000)
Sc.Read(&h02)

Sc.Write("05150E108000")'SET WDTMR
Sc.Read(&h03)
    Call Sc.ProgressBox ("", 0, 0, "")

Call ClearScratchPad

Sc.delay(200)
        'msg = "Your card has been cleaned, virginized, updated, and alt-ee repaired."
        Call Sc.MsgBox("Your card has been Supercleaned!")

   Call Card_Reset

End Sub

Sub ClearScratchPad
Call Sc.ProgressBox ("Clearing ScratchPad Area...", 1, 4, "")
Call WriteViaLoader("2B00","00000000000000000000000000000000","E")
Call WriteViaLoader("2B10","00000000000000000000000000000000","E")
Call WriteViaLoader("2B20","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("Clearing ScratchPad Area...", 2, 4, "")
Call WriteViaLoader("2B30","00000000000000000000000000000000","E")
Call WriteViaLoader("2B40","00000000000000000000000000000000","E")
Call WriteViaLoader("2B50","00000000000000000000000000000000","E")
Call WriteViaLoader("2B60","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("Clearing ScratchPad Area...", 3, 4, "")
Call WriteViaLoader("2B70","00000000000000000000000000000000","E")
Call WriteViaLoader("2B80","00000000000000000000000000000000","E")
Call WriteViaLoader("2B90","00000000000000000000000000000000","E")
Call WriteViaLoader("2BA0","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("Clearing ScratchPad Area...", 4, 4, "")
Call WriteViaLoader("2BB0","00000000000000000000000000000000","E")
    Call Sc.ProgressBox ("", 0, 0, "")
End Sub
'***********************************************************************
Function BootCard(Action)

dim ts,fso
 If Action = "Read" Then

    Call GetSaveFile()
    'End If
    If (FileName = "") Then
      sc.print "No Filename" & VbCr
      Exit Function
    End If
end if

    Dim cnt,b, RetVal, boot, kk,katr
    Dim atrlock,cter, glcnt, mtries,kp

    ScriptStart = Now

    RANDOMIZE TIMER

    atrlock=0
    cter=0
    glcnt=0
    mtries = 0
    d0 = 0
    sc.verbose = False
    UnloopChoice = 0
    gltcounter = 0

DO

  katr=0
  mtries = mtries + 1
gltCounter =  gltCounter + 1

    if mtries = 25 then
       call Card_Reset
       'atrlock = 0
       'call RndGr()
       mtries = 0
 end if
 If (randac = 1) Then

      Call SetDac()
End If

   boot = 0

    call ProgUpdate(kp,atrlock)

    sc.verbose = 0
    sc.write("A1")
    delay(10)

    if Chk4Card() = 0 then
        BootCard=0
        Exit Function
    end if

    sc.write("B0" & HexString(D1,02))
    glttl = glttl + 1
    sc.write("0f1f0120" & HexString(D5,4) & "0c" & HexString(D7,2) & "20" & HexString(D6,4) & "0d00" & HexString(D8,2) & "0000")

    Sc.Read(&h02)

    cter=cter+1
    cnt=0
    Sc.Write("028000")
    if Sc.Read(&h02) = 2 then
         cnt = sc.getbyte(1)
    if cnt = 1 then sc.read(1)
    end if

    if cter > 75 then
        glcnt = glcnt + 1
        if glcnt = 24 then
          glcnt = 0
          call RndGr()
        end if
        cter = 0
        atrlock = 0
    end if

    if cnt > 0 then
       kp=kp+1
       if kp >33 then kp = 33
         for b = 0 to 10
         Sc.Write("028000")

         if Sc.Read(&h02) = 2 then
            cnt = sc.getbyte(1)
         else
            cnt = 0
         end if

         if cnt > 0 then
            cnt = sc.read(cnt)
            kk=sc.getbyte(0)
            if kk = &h38 then

               Sc.Write("028000")
               cnt = 0
               if Sc.Read(&h02) = 2 then
                   cnt = sc.getbyte(1)
                   if(cnt = 0) then exit for
                      Sc.Read(cnt)
                      if(sc.getbyte(0)) = &hb0 then
                         chglch = chglch + 1

                         d0=d0+1
                         katr=1
                         cter = 0
                         glcnt = 0
                         atrlock =1

                         exit for
                       end if
                    end if
              end if
         end if
      next

    if katr = 1 then
       sc.write("B0"  & HexString(D4,02))
       sc.write("071f800d" & HexString(D3,02)& HexString(D2,02)&"0000")
       if Sc.Read(&h02) > 1 then
          cnt = sc.getbyte(1)
       else
          cnt = 0
       end if

       if cnt > 0 then
          cnt = sc.read(cnt)
          for b = 0 to cnt - 1
          next

          Sc.Write("31eeFFFFfed18d52E0FD2266E1B9E17201CF725f0772FF14C5E2AB0100C3DA07F88C0100FFFFFFFFFFFFFFFFFFFFFFFF0000")
          if Sc.Read(&h02)<2 then Sc.Read(&h02)
             Sc.Write("11c060200350042001500320" & HexString(D9,04) & "0d010000")
             Sc.Read(&h02)

          for b = 0 to 8
            Sc.Write("028000")
            if Sc.Read(&h02) = 2 then
                cnt = sc.getbyte(1)
            else
                cnt = 0
            end if

          if cnt > 0 then
             cnt = sc.read(cnt)
             kk=sc.getbyte(0)
             if kk = &h66 then
                Sc.Write("028000")
                cnt = 0
                if Sc.Read(&h02) = 2 then
                   cnt = sc.getbyte(1)
                   if(cnt = 0) then exit for
                      Sc.Read(cnt)
                      if(sc.getbyte(0)) = &h99 then
                         boot=1
                  Sc.Print VbCr & "=========================================================================="
                         Sc.Print VbCr & "********************* Random Dialed Dac Settings Boot ********************"

                         Sc.print VbCr & "Bootloader installed After " & d0 & " attempts!" & VbCr
                         Sc.Print "Total # of glitches applied to card " & glttl & VbCr
                         Sc.Print "D1 - D9 values used: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 & VbCr
                         ScriptEnd = Now
                         Sc.Print "Elapsed Time:  " + FormatNumber((CDbl(ScriptEnd) - CDbl(ScriptStart)) * 24 * 60, 2, True, True, True) & " Minutes" & vbCr
                         Sc.Print "Clock Time: " & RunTime & " Seconds  " &  vbCr
                               If D3 < &h0A then
                                  Set fso = CreateObject("Scripting.FileSystemObject")
                                  Set ts = fso.OpenTextFile("UnLoopDacFile.txt", 8, true, 0)
                                  If Len(D3) < 2 then ts.WriteLine d1 & "," & d2 & ",0" & d3 & "," & d4 & "," & d5 & "," & d6 & "," & d7 & "," & d8 & "," & d9
                                  If Len(D3) > 1 then ts.WriteLine d1 & "," & d2 & "," & d3 & "," & d4 & "," & d5 & "," & d6 & "," & d7 & "," & d8 & "," & d9
                                  ts.Close
                               Else
                                  Set fso = CreateObject("Scripting.FileSystemObject")
                                  Set ts = fso.OpenTextFile("UnLoopDacFile.txt", 8, true, 0)
                                  ts.WriteLine d1 & "," & d2 & "," & d3 & "," & d4 & "," & d5 & "," & d6 & "," & d7 & "," & d8 & "," & d9
                                  ts.Close
                               End if
                         exit for
                      end if
                    end if
                 end if
             else
                exit for
          end if

         next

        if boot = 1 then
           Sc.Write("021500")
           Sc.Read(2)
           Sc.Write("42FF225272FF14E1E2D007E2D029E2D02A77800716753F07D307F75011E29B2A70012ADA07F78E013A00D7D307D8078ECEFBD40770012ADA07F300C6F76211F7631100")
           Sc.Read(2)
           Sc.Write("21DE8E0149F76011F76111881c931270FF1203FBF70011728512DA12FDF70011F900")
           Sc.Read(2)
           BootCard=1

            If Action = "Read" Then
              Sc.Write("A1")
              Call ReadCard()
              Sc.Write("A0")
            End If
           Exit Function
         end if
       end if
     end if
   else
    kp=kp-1
    if kp<1 then kp=1
   end if
loop

End Function
'************************************************************
Function BootCard()

    Dim cnt, b, RetVal, boot, kk, katr
    Dim atrlock, cter, glcnt, mtries, kp

    ScriptStart = Now

    RANDOMIZE TIMER

    glttl   = 0 'total glitches to card
    atrlock = 0
    cter    = 0
    glcnt   = 0
    mtries  = 0
    d0      = 0

    sc.verbose = False

DO
  glttl = glttl + 1
  glchs = glchs +1
  If glchs > 49 Then
    atrlock = 0
    Call Card_Reset
  End if
  katr=0
  mtries = mtries + 1
    if mtries = 5000 then
       call Card_Reset
       call RndGr()
       mtries = 0
    end if

    boot = 0

        If Unloopchoice = 1 then 'RS1 range

        '==========================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h06) + &h2e      ' 46 -  50
        D3 = INT(RND * &h02) + &h08      '  8 -  10
        D4 = INT(RND * &h07) + &h8a      '138 - 145
        D9 = INT(RND * &h02) + &h35e     '862 - 864

        '==========================================
        ' Atr glich point search range

       if atrlock = 0 then
        D1 = INT(RND * &h14) + &ha5   '165 - 185
        D5 = INT(RND * &h02) + &h25d  '605 - 607
        D6 = INT(RND * &h04) + &h38   ' 56 -  60
        D7 = INT(RND * &h02) + &h1d   ' 29 -  31
        D8 = INT(RND * &h02) + &h3a   ' 58 -  60


                                                                     glchs = 0
                                                                       chglch = 0
        end if
    End If

        If Unloopchoice = 2 then       'RS2 range
    '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h06) + &h30      ' 48 -  54
        D3 = INT(RND * &h04) + &h07      '  7 -  11
        D4 = INT(RND * &h14) + &h82      '130 - 150
        D9 = INT(RND * &h07) + &h35b     '859 - 866

        '==========================================
        ' Atr glich point search range

       if atrlock = 0 then
        D1 = INT(RND * &h23) + &ha5   '165 - 200
        D5 = INT(RND * &h03) + &h25d  '605 - 608
        D6 = INT(RND * &h07) + &h36   ' 54 -  61
        D7 = INT(RND * &h06) + &h1c   ' 28 -  34
        D8 = INT(RND * &h04) + &h38   ' 56 -  60


                                                                            glchs = 0
                                                                            chglch = 0
        end if
    End If


    If Unloopchoice = 3 then      'RS3 range
        '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h08) + &h30      ' 48 -  56
        D3 = INT(RND * &h03) + &h08      '  8 -  11
        D4 = INT(RND * &h0f) + &h8c      '140 - 155
        D9 = INT(RND * &h03) + &h35e     '862 - 865

        '==============================================
        ' Atr glich point search range

       if atrlock = 0 then
        D1 = INT(RND * &h14) + &hc8   '200 - 220
        D5 = INT(RND * &h04) + &h25a  '602 - 608
        D6 = INT(RND * &h06) + &h3a   ' 58 -  64
        D7 = INT(RND * &h02) + &h1e   ' 30 -  32
        D8 = INT(RND * &h07) + &h3a   ' 58 -  65


                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If

    If Unloopchoice = 4 then    'RS4 range
    '==============================================
    'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h05) + &h39  ' 57 -  61
        D3 = INT(RND * &h04) + &h08  '  8 -  11
        D4 = INT(RND * &h14) + &h91  '145 - 165
        D9 = INT(RND * &h06) + &h35D '861 - 866

    '==========================================
    ' Atr glich point search range

    if atrlock = 0 then
        D1 = INT(RND * &h1e) + &ha0  '160 - 190
        D5 = INT(RND * &h02) + &h25e '606 - 608
        D6 = INT(RND * &h04) + &h36  ' 54 -  68
        D7 = INT(RND * &h04) + &h1a  ' 26 -  30
        D8 = INT(RND * &h04) + &h38  ' 56 -  60



                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If

    If Unloopchoice = 11 then    'Mod4 range
        '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h07) + &h38  ' 56 -  62   These are the glitch value ranges.
        D3 = INT(RND * &h04) + &h08  '  8 -  11<<<<The Hex value of 07 is added at a random number up to 04 not 5 cuz it always rounds down ie 4.87755 = 4
        D4 = INT(RND * &h39) + &h87  '135 - 191
        D9 = INT(RND * &h05) + &h35e '862 - 866
        '==========================================
        ' Atr glich point search range

        if atrlock = 0 then
        D7 = INT(RND * &h02) + &h1d  ' 29 -  30
        D8 = INT(RND * &h03) + &h39  ' 57 -  59
        D1 = INT(RND * &h08) + &ha8  '168 - 175
        D5 = INT(RND * &h00) + &h25e '606
        D6 = INT(RND * &h05) + &h3f  ' 63 -  67
                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If

    If Unloopchoice = 6 then  'Mod5 range
        '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h05) + &h39 ' 57 -  61
        D3 = INT(RND * &h04) + &h08 '  8 -  11
        D4 = INT(RND * &h3A) + &h88 '136 - 196
        D9 = INT(RND * &h06) + &h35D'861 - 866
        '==========================================
        ' Atr glich point search range

        if atrlock = 0 then
        D7 = INT(RND * &h04) + &h1B  ' 27 -  30
        D8 = INT(RND * &h03) + &h39  ' 57 -  59
        D1 = INT(RND * &h1c) + &ha2  '160 - 189
        D5 = &h25d                   '605     INT(RND * &h02) + &h25D '605 - 606
        D6 = INT(RND * &h19) + &h38  ' 56 -  81
                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If


    If Unloopchoice = 7 then 'New FinalMod Fast
        '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h02) + &h39  ' 57 -  58
        D3 = INT(RND * &h03) + &h09  '  9 -  11

        Do
            D4 = INT(RND * &h17) + &h89  '137 - 159
        Loop until D4 = &h89 or D4 = &h9F '137 or 159

        D9 = &h35d                   '861

        '==========================================
        ' Atr glich point search range
        if atrlock = 0 then

        Do
            D7 = INT(RND * &h04) + &h1B
        Loop Until D7 = &h1B or D7 = &h1E ' 27 or 30

        D8 = INT(RND * &h03) + &h39  ' 57 -  59

        Do
            D1 = INT(RND * &h06) + &hB7  '183 - 188
        Loop Until D1 = &hB7 or D1 = &hBB or D1 = &hBC 'do until you get 183,187, or 188

        D5 = &h25d                   '605
        D6 = &h3f                    '63
                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If

    If Unloopchoice = 8 then 'New FinalMod Medium
        '==============================================
        'vcc + last 2 glitch 4 bootloader
        D2 = INT(RND * &h02) + &h39                   ' 57 -  58
        D3 = INT(RND * &h03) + &h09                   '  9 -  11
        Do
            D4 = INT(RND * &h18) + &h89                   '137 - 160
        Loop until D4 < &h92 or  D4 > &h97 and D4 < &hA1 '137 - 145, or 152 - 160

        D9 = &h35d                    '861

        '==========================================
        ' Atr glich point search range
        if atrlock = 0 then
            Do
                D7 = INT(RND * &h04) + &h1B               ' 27 - 30
            Loop Until D7 = &h1B or D7 = &h1E              ' 27 or 30

            D8 = INT(RND * &h03) + &h39               ' 57 -  59

            Do
                D1 = INT(RND * &h06) + &hB7               '183 - 188
            Loop Until D1 = &hB7 or D1 = &hBB or D1 = &hBC '183, or 187, or 188

            D5 = &h25d '605
            D6 = &h3f '63
                                                                                     glchs = 0
                                                                                     chglch = 0
        end if
    End If

    call ProgUpdate(kp,atrlock)

    sc.verbose = 0
    sc.write("A1")
    delay(10)

    if Chk4Card() = 0 then
        BootCard=0
        Exit Function
    end if

    delay(30)

    sc.write("B0" & HexString(D1,02))
    sc.write("0f1f0120" & HexString(D5,4) & "0c" & HexString(D7,2) & "20" & HexString(D6,4) & "0d00" & HexString(D8,2) & "0000")

    Sc.Read(&h02)

    cter=cter+1
    cnt=0
    Sc.Write("028000")
    if Sc.Read(&h02) = 2 then
         cnt = sc.getbyte(1)
    if cnt = 1 then sc.read(1)
    end if

    if cter > 75 then
        glcnt = glcnt + 1
        if glcnt = 24 then
          glcnt = 0
          call RndGr()
        end if
        cter = 0
        atrlock = 0
    end if

    if cnt > 0 then
       kp=kp+1
       if kp >33 then kp = 33
        sc.print "===================================================="&VbCr&"ATR"&VbCr
         for b = 0 to 10
         Sc.Write("028000")

         if Sc.Read(&h02) = 2 then
            cnt = sc.getbyte(1)
         else
            cnt = 0
         end if

         if cnt > 0 then
            cnt = sc.read(cnt)
            kk=sc.getbyte(0)
            if kk = &h38 then
               sc.print "38 "
               Sc.Write("028000")
               cnt = 0
               if Sc.Read(&h02) = 2 then
                   cnt = sc.getbyte(1)
                   if(cnt = 0) then exit for
                      Sc.Read(cnt)
                      if(sc.getbyte(0)) = &hb0 then
                         chglch = chglch + 1
                         sc.print "B0" & VbCr & "Attempting to install bootloader.. " & VbCr
                         Sc.Print "D1-D9 values: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9
                         d0=d0+1
                         katr=1
                         cter = 0
                         glcnt = 0
                         atrlock =1
                         If chglch > 24 Then
                             atrlock = 0
                             Call Card_Reset
                         End if
                         exit for
                       end if
                    end if
              end if
         end if

      sc.print HexString(kk,2) &" "
      next
      sc.print VbCr

    if katr = 1 then
       sc.write("B0"  & HexString(D4,02))
       sc.write("071f800d" & HexString(D3,02)& HexString(D2,02)&"0000")
       if Sc.Read(&h02) > 1 then
          cnt = sc.getbyte(1)
       else
          cnt = 0
       end if

       if cnt > 0 then
          cnt = sc.read(cnt)
          for b = 0 to cnt - 1
          next

          Sc.Write("31eeFFFFfed18d52E0FD2266E1B9E17201CF725f0772FF14C5E2AB0100C3DA07F88C0100FFFFFFFFFFFFFFFFFFFFFFFF0000")
          if Sc.Read(&h02)<2 then Sc.Read(&h02)
             Sc.Write("11c060200350042001500320" & HexString(D9,04) & "0d010000")
             Sc.Read(&h02)

          for b = 0 to 8
            Sc.Write("028000")
            if Sc.Read(&h02) = 2 then
                cnt = sc.getbyte(1)
            else
                cnt = 0
            end if

          if cnt > 0 then
             cnt = sc.read(cnt)
             kk=sc.getbyte(0)
             if kk = &h66 then
                Sc.Write("028000")
                cnt = 0
                if Sc.Read(&h02) = 2 then
                   cnt = sc.getbyte(1)
                   if(cnt = 0) then exit for
                      Sc.Read(cnt)
                      if(sc.getbyte(0)) = &h99 then
                         boot=1
                         sc.print VbCr & "Bootloader installed After " & d0 & " attempts!" & VbCr
                         Sc.Print "Total # of glitches applied to card " & glttl & VbCr
                         Sc.Print "D1 - D9 values used: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 & VbCr
                         ScriptEnd = Now
                         Sc.Print "Elapsed time:  " + FormatNumber((CDbl(ScriptEnd) - CDbl(ScriptStart)) * 24 * 60, 2, True, True, True) & " minutes" & vbCr
                         exit for
                      end if
                    end if
                 end if
             else
                exit for
          end if

         next

        if boot = 1 then
           Sc.Write("021500")
           Sc.Read(2)
           Sc.Write("42FF225272FF14E1E2D007E2D029E2D02A77800716753F07D307F75011E29B2A70012ADA07F78E013A00D7D307D8078ECEFBD40770012ADA07F300C6F76211F7631100")
           Sc.Read(2)
           Sc.Write("21DE8E0149F76011F76111881c931270FF1203FBF70011728512DA12FDF70011F900")
           Sc.Read(2)
           BootCard=1
           Exit Function
         end if
       end if
     end if
   else
    kp=kp-1
    if kp<1 then kp=1
   end if
loop

End Function

Sub ProgUpdate(kp,atrlock)

    Dim i
    Dim Msg

    Msg="Glitches applied to card thus far " & glttl & "  Elapsed Time: " + FormatNumber((CDbl(Now) - CDbl(ScriptStart)) * 24 * 60, 2, True, True, True) + " minutes"
    if atrlock = 1 then
       Msg=Msg+VbCr+"Values of D1-D9: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 &vbcr
       Msg=Msg+"ATR locked!"  + "                         Bootloader Attempts: " & (d0) & VbCr
    else
       Msg=Msg+VbCr+"Values of D1-D9: " & D1 & ", " & D2 & ", " & D3 & ", " & D4 & ", " & D5 & ", " & D6 & ", " & D7 & ", " & D8 & ", " & D9 &vbcr
       Msg=Msg+"Attempting to lock onto ATR." + "      Bootloader Attempts: " & (d0) & VbCr
    end if

    Call Sc.ProgressBox(Msg,kp,33,"  Attempting to unloop...")

End Sub
'******************************Locals section**********************
Sub NoLocals()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","00","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "NO Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub AllLocalsAtlantic()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A8","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals Atlantic Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub AllLocalsCentral()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals Central Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub AllLocalsEastern()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals Eastern Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub


Sub AllLocalsMountain()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A2","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals Mountain Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub AllLocalsNewFoundLand()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A9","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals New Foundland Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub AllLocalsPacific()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530303030302020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","008800000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "All Locals Pacific Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Atlanta()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533303330332020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00010000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Atlanta Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Austin()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5537383730332020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001900000000000000000000000000A0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Austin Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Baltimore()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532313230312020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001A0000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Baltimore Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Birmingham()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533353230332020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001B0000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Birmingham Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Boston()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530323131342020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000200000000000000000000000000C1","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Boston Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Buffalo()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5531343230372020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002D00000000000000000000FBDFA4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Buffalo Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Charlotte()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532383230342020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001C00000000000000000000000000C8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Charlotte Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Chicago()
Sc.Write("A1")
'Call Sc.ProgressBox ("Installing locals.....", 12, 44, "DSSCanada SuperScript 1.0")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5536303635312020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00030000000000000000000000000090","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Chicago Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Cincinatti()
Sc.Write("A1")
'Call Sc.ProgressBox ("Installing locals.....", 12, 44, "DSSCanada SuperScript 1.0")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534353231372020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001D00000000000000000000000000A0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Cincinatti Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Cleveland()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534343131352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000400000000000000000000000000C0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Cleveland Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Columbus()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534333231352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001E00000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Columbus Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Dallas()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5537363230312020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000500000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Dallas Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Denver()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5538303231362020","E")
Call WriteViaLoader("24E0","A2","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000600000000000000000000000000E0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Denver Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Detroit()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534383232382020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00070000000000000000000000000088","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Detroit Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub GrandRapids()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534393530332020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002E00000000000000000000FBBFA4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "GrandRapids Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub GreensboroWinstonSalem()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532373430332020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001F0000000000000000000000000088","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Greensboro, Winston ,Salem Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub GreensvilleSpartanburgAshville()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532393631352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001600000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Greensville, Spartanburg ,Ashville Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub HartFord()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530363130362020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002A00000000000000000000FBFBA4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "HartFord Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Houston()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 1, 5, "DSSCanada SuperScript 1.0")

Call WriteViaLoader("2410","5537373030322020","E")
Call Sc.ProgressBox ("Installing locals.....", 2, 5, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("24E0","A4","E")
Call Sc.ProgressBox ("Installing locals.....", 3, 5, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 5, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2510","00080000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 5, 5, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Houston Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Indianapolis()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5534363230362020","E")
Call WriteViaLoader("24E0","26","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00200000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Indianapolis Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Jacksonville()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533323232352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","003300000000000000000000000000FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Jacksonville Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub KansasCity()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5536343130362020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00210000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Kansas City Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Knoxville()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533373930322020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","003200000000000000000000FFF6A4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Knoxville  Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub LasVegas()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5538393132312020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002B00000000000000000000FBF7A4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Las Vegas  Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub LosAngeles()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539303231302020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00090000000000000000000000000091","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Los Angeles  Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Memphis()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533383130362020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002200000000000000000000000000C0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Memphis  Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub MiamiFtLauderdale()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533333132352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000A0000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Miami ,Ft Lauderdale  Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Milwaukee()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5535333230322020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00230000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Milwaukee Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub MinneapolisStPaul()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5535353330342020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000B00000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Minneapolis, StPaul Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Nashville()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533373231312020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00240000000000000000000000000090","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Nashville Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub NewOrleans()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5537303131362020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","003000000000000000000000FFF3A4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "New Orleans Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub NewYork()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5531303030312020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000C00000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "New York Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Norfolk()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")

Call WriteViaLoader("2410","5532333531302020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","003100000000000000000000FFF5A4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Norfolk Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub OklahomaCity()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5537333131392020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002F00000000000000000000FB7FA4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Oklahoma City Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Orlando()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533323830352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000D0000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Orlando Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Philadelphia()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 12, 44, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5531393130332020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","000E00000000000000000000000000E0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Philadelphia Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Phoenix()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("240C","00000000","E")
Call WriteViaLoader("2410","5538353030312020","E")
'Call WriteViaLoader("2464","0B","E")
Call WriteViaLoader("24E0","22","E")
Call WriteViaLoader("2500","FF000000000000000000000000000000","E")
Call WriteViaLoader("2510","000F0000000000000000000000000088","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Phoenix Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Pittsburgh()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5531353231392020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00250000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Pittsburgh Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Portland()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539373231342020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00260000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Portland Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Providence()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5530323930382020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002C00000000000000000000FBEFA4FF","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Providence Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub RaleighDurham()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532373631322020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00170000000000000000000000000081","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Raleigh ,Durham Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub SacramentoStockton()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539353831352020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001000000000000000000000000000E0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Sacramento ,Stockton Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub


Sub SaltLakeCity()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5538343132332020","E")
Call WriteViaLoader("24E0","A2","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00180000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Salt Lake City Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub SanAntonio()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5537383231322020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00270000000000000000000000000082","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "San Antonio Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub SanDiego()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539313934352020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00280000000000000000000000000090","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "San Diego Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub SanfransiscoOaklandSanJose()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539343131302020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","001100000000000000000000000000A8","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Sanfransisco, Oakland ,SanJose Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub SeattleTacoma()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5539383130342020","E")
Call WriteViaLoader("24E0","A0","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00120000000000000000000000000090","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Seattle ,Tacoma Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub StLouis()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5536333130382020","E")
Call WriteViaLoader("24E0","A4","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00130000000000000000000000000088","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "St Louis Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub Tampa()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533333630322020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00140000000000000000000000000088","E")
Call Sc.ProgressBox ("Installing locals.....", 44, 44, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "Tampa Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub


Sub WashingtonDCHagersTown()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5532323230362020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","00150000000000000000000000000092","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "WashingtonDC ,HagersTown Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub

Sub WestPalmBeach()
Sc.Write("A1")
Call Sc.ProgressBox ("Installing locals.....", 2, 4, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2410","5533333430352020","E")
Call WriteViaLoader("24E0","A6","E")
Call WriteViaLoader("2500","00000000000000000000000000000000","E")
Call WriteViaLoader("2510","002900000000000000000000000000A0","E")
Call Sc.ProgressBox ("Installing locals.....", 4, 4, "DSSCanada SuperScript 1.0")
sc.delay(300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr & VbCr & "West Palm Beach Locals Installed, Enjoy!" & VbCr
Sc.Write("A0")
End Sub
'********************************************************************
Function getlocal2()
    Dim RetVala3
    Dim PromptString
    Dim GotInput2

    GotInput2 = False

    Do
        PromptString = "Get Locals V8 Kit: Please make a selection from this list:" & "NOTE: You must use 2 characters!!" & vbCrlf
        PromptString = PromptString & "00: No Locals" & vbtab & vbtab & vbtab & "01: Atlanta, GA" & vbtab & vbtab & vbtab & "02: Boston, MA" & vbCrlf
        PromptString = PromptString & "03: Chicago, IL" & vbtab & vbtab & vbtab & "04: Clevland, OH" & vbtab & vbtab & "05: Dallas, TX" & vbCrlf
        PromptString = PromptString & "06: Denver, CO" & vbtab & vbtab & vbtab & "07: Detroit, MI" & vbtab & vbtab & vbtab & "08: Houston, TX" & vbCrlf
        PromptString = PromptString & "09: Los Angeles, CA" & vbtab & vbtab & "0A: Miami, FL" & vbtab & vbtab & vbtab & "0B: Minneapolis, MN" & vbCrlf
        PromptString = PromptString & "0C: New York, NY" & vbtab & vbtab & "0D: Orlando, FL" & vbtab & vbtab & vbtab & "0E: Philadelphia, PA" & vbCrlf
        PromptString = PromptString & "0F: Phoenix, AZ" & vbtab & vbtab & vbtab & "10: Sacramento, CA" & vbtab & vbtab & "11: San Francisco, CA" & vbcrlf
        PromptString = PromptString & "12: Seattle, WA" & vbtab & vbtab & vbtab & "13: St. Louis, MO" & vbtab & vbtab & "14: Tampa, FL" & vbCrlf
        PromptString = PromptString & "15: Washington DC" & vbtab & vbtab & "16: Greenville, SC" & vbtab & vbtab & "17: Raleigh, NC" & vbCRlf
        PromptString = PromptString & "18: Salt Lake City, UT" & vbtab & vbtab & "19: Austin, TX" & vbtab & vbtab & vbtab & "1A: Baltimore, MD" & vbCrlf
        PromptString = PromptString & "1B: Birmingham, AL" & vbtab & vbtab & "1C: Charlotte, NC" & vbtab & vbtab & "1D: Cincinnati, OH" & vbCrlf
        PromptString = PromptString & "1E: Columbus, OH" & vbtab & vbtab & "1F: Greensboro, NC" & vbtab & vbtab & "20: Indianapolis, IN" & vbCrlf
        PromptString = PromptString & "21: Kansas City, MO" & vbtab & vbtab & "22: Memphis, TN" & vbtab & vbtab & "23: Milwaukee, WI" & vbCrlf
        PromptString = PromptString & "24: Nashville, TN" & vbtab & vbtab & "25: Pittsburgh, PA" & vbtab & vbtab & "26: Portland, OR" & vbCrlf
        PromptString = PromptString & "27: San Antonio, TX" & vbtab & vbtab & "28: San Diego, CA" & vbtab & vbtab & "29: West Palm Beach, FL" & vbCrlf
        PromptString = PromptString & "2A: Hartford, CT" & vbtab & vbtab & vbtab  & "2B: Las Vegas, NV" & vbtab & vbtab & "2C: Providence, RI" & vbCrlf
        PromptString = PromptString & "2D: Buffalo, NY" & vbtab & vbtab & vbtab & "2E: Grand Rapids, MI" & vbtab & vbtab & "2F: Oklahoma City, OK" & vbCrlf
        PromptString = PromptString & "30: New Orleans, LA" & vbtab & vbtab  & "31: Norfolk, VA" & vbtab & vbtab & vbtab & "32: Knoxville, TN" & vbCrlf
        PromptString = PromptString & "33: Jacksonville, FL" & vbtab & vbtab &"AA: All Locals Atlantic" & vbtab & vbtab & "AE: All Locals Eastern" & vbCrlf
        PromptString = PromptString & "AC: All Locals Central" & vbtab & vbtab &"AM: All Locals Mountain" & vbtab & vbtab & "AP: All Locals Pacific" & vbCrlf
        PromptString = PromptString & "AN: All Locals Newfoundland" & vbtab & "NOTE: All Locals only works for 1st thru 4th gen IRDs!!"

     RetVala3 = Sc.InputBox(PromptString, "DSSCanada SuperScript 1.0 GET LOCALS V8 KIT: Select Your Local", Default_Local)

        If RetVala3 = "" then
            GotInput2 = True
            local = "none"
            Sc.Print(vbCrLf & "Cancelled at Local Area selection.")
            Exit Function
        End If

        if len(RetVala3) <> 2 then 'If lenth is lessthan or greater than 2 Then...
            GotInput2 = false
            local = "none"
        else
          RetVala3 = UCase(RetVala3)

        Select Case left(RetVala3, 1)
           case "0", "1", "2", "3", "A"
                Select Case Right(RetVala3, 1)
                  Case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P"
                    GotInput2 = true
                    getlocal2 = RetVala3
                    local = getlocal2
                End Select
            Case "2"
                Select Case Right(RetVala3, 1)
                Case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P"
                    GotInput2 = true
                    getlocal2 = RetVala3
                    local = getlocal2
                End Select
        End Select
        End If
    Loop until GotInput2 = True

If GETLOCAL2 = "00" Then
Call NoLocals()
End if

If GETLOCAL2 = "01" Then
Call Atlanta()
End if
If GETLOCAL2 = "02" Then
Call Boston
End if
If GETLOCAL2 = "03" Then
Call Chicago
End if
If GETLOCAL2 = "04" Then
Call Cleveland
End if
If GETLOCAL2 = "05" Then
Call Dallas
End if
If GETLOCAL2 = "06" Then
Call Denver
End if
If GETLOCAL2 = "07" Then
Call Detroit
End if
If GETLOCAL2 = "08" Then
Call Houston
End if
If GETLOCAL2 = "09" Then
Call LosAngeles
End if
If GETLOCAL2 = "0A" Then
Call MiamiFtLauderdale
End if
If GETLOCAL2 = "0B" Then
Call MinneapolisStPaul
End if
If GETLOCAL2 = "0C" Then
Call NewYork
End if
If GETLOCAL2 = "0D" Then
Call Orlando
End if
If GETLOCAL2 = "0E" Then
Call Philadelphia
End if
If GETLOCAL2 = "0F" Then
Call Phoenix
End if
If GETLOCAL2 = "10" Then
Call SacramentoStockton
End if
If GETLOCAL2 = "11" Then
Call SanFransiscoOaklandSanJose
End if
If GETLOCAL2 = "12" Then
Call SeattleTacoma
End if
If GETLOCAL2 = "13" Then
Call StLouis
End if
If GETLOCAL2 = "14" Then
Call Tampa
End if
If GETLOCAL2 = "15" Then
Call WashingtonDCHagerstown
End if

If GETLOCAL2 = "16" Then
Call GreensvilleSpartanburgAshville
End if
If GETLOCAL2 = "17" Then
Call RaleighDurham
End if
If GETLOCAL2 = "18" Then
Call SaltLakeCity
End if
If GETLOCAL2 = "19" Then
Call Austin
End if
If GETLOCAL2 = "1A" Then
Call Baltimore
End if
If GETLOCAL2 = "1B" Then
Call Birmingham
End if
If GETLOCAL2 = "1C" Then
Call Charlotte
End if
If GETLOCAL2 = "1D" Then
Call Cincinatti
End if
If GETLOCAL2 = "1A" Then
Call Columbus
End if
If GETLOCAL2 = "1B" Then
Call GreensboroWinstonSalem
End if
If GETLOCAL2 = "1C" Then
Call Indianapolis
End if
If GETLOCAL2 = "1D" Then
Call KansasCity
End if
If GETLOCAL2 = "1E" Then
Call Columbus
End if
If GETLOCAL2 = "1F" Then
Call Greensboro
End if
If GETLOCAL2 = "20" Then
Call Indianapolis
End if
If GETLOCAL2 = "21" Then
Call KansasCity
End if
If GETLOCAL2 = "22" Then
Call Memphis
End if
If GETLOCAL2 = "23" Then
Call Milwaukee
End if
If GETLOCAL2 = "24" Then
Call Nashville
End if
If GETLOCAL2 = "25" Then
Call Pittsburgh
End if
If GETLOCAL2 = "26" Then
Call Portland
End if
If GETLOCAL2 = "27" Then
Call SanAntonio
End if
If GETLOCAL2 = "28" Then
Call SanDiego
End if
If GETLOCAL2 = "29" Then
Call WestPalmBeach
End if
If GETLOCAL2 = "2A" Then
Call Hartford
End if
If GETLOCAL2 = "2B" Then
Call LasVegas
End if
If GETLOCAL2 = "2C" Then
Call Providence
End if
If GETLOCAL2 = "2D" Then
Call Buffalo
End if
If GETLOCAL2 = "2E" Then
Call GrandRapids
End if
If GETLOCAL2 = "2F" Then
Call OklahomaCity
End if
If GETLOCAL2 = "30" Then
Call NewOrleans
End if
If GETLOCAL2 = "31" Then
Call Norfolk
End if
If GETLOCAL2 = "32" Then
Call Knoxville
End if
If GETLOCAL2 = "33" Then
Call Jacksonville
End if
If GETLOCAL2 = "AN" Then
Call AllLocalsNewFoundLand
End if
If GETLOCAL2 = "AP" Then
AllLocalsPacific
End if
If GETLOCAL2 = "AA" Then
Call AllLocalsaTLANTIC
End if
If GETLOCAL2 = "AC" Then
Call AllLocalsCentral
End if
If GETLOCAL2 = "AM" Then
Call AllLocalsMountain
End if
If GETLOCAL2 = "AE" Then
Call AllLocalsEastern
End if

Call ShutDownCard()

End Function
'******************************************************
Function ReadInfo1
    Dim CAMIDHex
    Dim USWDec
    Dim DSWHex
    Dim DSWDec
    Dim GuideHex
    Dim GuideDec
    Dim TimeHex
    Dim TimeDec
    Dim RatingHex
    Dim RatingDec
    Dim SpendingLimitHex
    Dim SpendingLimitDec
    Dim infobox
    Dim actyear
    Dim actmonth
    Dim ActDateHex
    Dim ActDateDec
    Dim PPVLimitHex
    Dim PPVLimitDec
    Dim SpentHex
    Dim SpentDec
    Dim Fuse
    Dim IRDHex
    Dim IRDDec
    Dim RetValue

   if ReceiveATR() = 0 Then

   Exit Function
    End if

    Sc.Write("0B 1A 0E10 C4 48 2A 00 00 80 BF 00")
    Sc.Delay(80)
    Sc.Read(&h02)
       RetValue = Sc.GetByte(&h01)
       Sc.Read (RetValue)

    USWHex1 = HexString(GetByte(29), 2) & HexString(GetByte(30), 2)

    USWDec = Hex2Dec(USWHex1)
        if len(USWDec) < 4 then
           USWDec = "000" & USWDec
        end if

    DSWHex = HexString(GetByte(33), 2) & HexString(GetByte(34), 2)

    DSWDec = Hex2Dec(DSWHex)
        if len(DSWDec) < 4 then
           DSWDec = "000" & DSWDec
        end if

    RatingHex = HexString(GetByte(11), 2)
    RatingDec = Hex2Dec(RatingHex)
        if len(RatingDec) = 1 then
            RatingDec = "0" & RatingDec
        end if

    SpendingLimitHex = HexString(GetByte(12), 2) & HexString(GetByte(13), 2)
    SpendingLimitDec = "$" & int(Hex2Dec(SpendingLimitHex)/100)

    ActDateHex = HexString(GetByte(14), 2) & HexString(GetByte(15), 2)
    if ActDateHex = "0000" then
        ActDateDec = "Not Active"
    else
    ActDateHex = HexString(GetByte(14), 2) & HexString(GetByte(15), 2)
    ActYear = 2000 + left(((GetByte(14)-95) / 12 * 100),1)
    ActMonth = round((right(int((((GetByte(14) - 95)/12))*100),2)/100)*12)
    ActDateDec = ActMonth & "." & GetByte(15) & "." & ActYear

    end if

    Fuse = HexString(GetByte(1), 2) & hexstring(GetByte(1) xor &hFF,2)

    IRDHex = Hexstring(GetByte(21) xor GetByte(25),2) & Hexstring(GetByte(22) xor GetByte(26),2) & Hexstring(GetByte(23) xor GetByte(27),2) & Hexstring(GetByte(24) xor GetByte(28),2)
        if len(IRDHex) <= 4 then
            IRDHex = "0000" & IRDHex
        end if

    IRDDec = Hex2Dec(IRDHex)
        if IRDDec <= 1 then
            IRDDec = "0000000" & IRDDec
        end if

    Sc.Write("02BF00")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    PPVLimitHex = HexString(Sc.GetByte(23), 2) & HexString(Sc.GetByte(24), 2)
    PPVLimitDec = "$" & int(Hex2Dec(PPVLimitHex)/100)
    SpentHex = HexString(Sc.GetByte(21), 2) & HexString(Sc.GetByte(22), 2)
    SpentDec = "$" & int(Hex2Dec(SpentHex)/100)

    Sc.Write("028200")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    Sc.Write("08C448580000179B00")
    Sc.Delay(80)
    Sc.Read(&h02)
            RetValue = Sc.GetByte(&h01)
            Sc.Read (RetValue)

    CAMIDHex = HexString(GetByte(2), 2) & HexString(GetByte(3), 2) & HexString(GetByte(4), 2) & HexString(GetByte(5), 2)
    CAMIDDec1 = "000" & Hex2Dec(CAMIDHex)

    GuideHex = HexString(Sc.GetByte(13), 2)
    GuideDec = Hex2Dec(GuideHex)
        if GuideDec = 0 then
            GuideDec = "00"
        end if
    TimeHex = HexString(Sc.GetByte(11), 2)
    TimeDec = Hex2Dec(TimeHex)

ReadInfo1 = 1

End Function


'' END OF SCRIPT *********************************************************************
' **** THE SECTION BELOW IS FOR MORE EXPERIENCED USERS **********
' MODIFY AT YOUR OWN RISK TYPO'S CAN BE DEADLY TO YOUR CARD!!
'
' Below is a blank template for adding your own 3m.
' Study the above working 3m subs to understand the standard usage.
' Edit the Adress and Bytes to match your 3m's hex file.
' To insert into "Menu"; Use Search, Find the "Example" you wish to replace.
' Replace all 4 instances of "Example" with "Your3M Name".
' (Menu Listing, Button, Call and Sub)
' Test to make sure you have no script errors. Save with a New Name.
' Again, Use at Your Own Risk! Obviously you should be working on a COPY of this
' script and NOT the Original.

Sub Example() 'This will ONL clear the PPV, Tier Area, and 2B00-2BE0.
Dim MsgPromp
Sc.Write("A1")
Call Sc.ProgressBox ("EXAMPLE NOT A 3M !!Just clears PPV, Tiers and 2B00-2BE0.....", 1, 3, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("2014","20DF","D")
Call WriteViaLoader("2024","000000000000000000000000","D")
Call WriteViaLoader("2030","00000000000000000000000000000000","E")
Call WriteViaLoader("2040","00000000000000000000000000000000","E")
Call WriteViaLoader("2050","00000000000000000000000000000000","E")
Call WriteViaLoader("2060","00000000000000000000000000000000","E")
Call WriteViaLoader("2070","00000000000000000000000000000000","E")
Call WriteViaLoader("2080","00000000000000000000000000000000","E")
Call WriteViaLoader("2090","00000000000000000000000000000000","E")
Call WriteViaLoader("20A0","00000000000000000000000000000000","E")
Call WriteViaLoader("20B0","00000000000000000000000000000000","E")
Call WriteViaLoader("20C0","00000000000000000000000000000000","E")
Call WriteViaLoader("20D0","00000000000000000000000000000000","E")
Call WriteViaLoader("20E0","00000000000000000000000000000000","E")
Call WriteViaLoader("20F0","00000000000000000000000000000000","E")
Call WriteViaLoader("2120","00000000000000000000000000000000","E")
Call WriteViaLoader("2130","00000000000000000000000000000000","E")
Call WriteViaLoader("2140","00000000000000000000000000000000","E")
Call WriteViaLoader("2150","00000000000000000000000000000000","E")
Call WriteViaLoader("2160","00000000000000000000000000000000","E")
Call WriteViaLoader("2170","00000000000000000000000000000000","E")
Call WriteViaLoader("2180","00000000000000000000000000000000","E")
Call WriteViaLoader("2190","00000000000000000000000000000000","E")
Call WriteViaLoader("21A0","00000000000000000000000000000000","E")
Call WriteViaLoader("21B0","00000000000000000000000000000000","E")
Call WriteViaLoader("21C0","00000000000000000000000000000000","E")
Call WriteViaLoader("21D0","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("EXAMPLE NOT A 3M !!Just clears PPV, Tiers and 2B00-2BE0.....", 2, 3, "DSSCanada SuperScript 1.0")
Call WriteViaLoader("21E0","00000000000000000000000000000000","E")
Call WriteViaLoader("21F0","00000000000000000000000000000000","E")
Call WriteViaLoader("2200","00000000000000000000000000000000","E")
Call WriteViaLoader("2210","00000000000000000000000000000000","E")
Call WriteViaLoader("2220","00000000000000000000000000000000","E")
Call WriteViaLoader("2230","00000000000000000000000000000000","E")
Call WriteViaLoader("2240","00000000000000000000000000000000","E")
Call WriteViaLoader("2250","00000000000000000000000000000000","E")
Call WriteViaLoader("2260","00000000000000000000000000000000","E")
Call WriteViaLoader("2270","00000000000000000000000000000000","E")
Call WriteViaLoader("2280","00000000000000000000000000000000","E")
Call WriteViaLoader("2290","00000000000000000000000000000000","E")
Call WriteViaLoader("22A0","00000000000000000000000000000000","E")
Call WriteViaLoader("22B0","00000000000000000000000000000000","E")
Call WriteViaLoader("22C0","00000000000000000000000000000000","E")
Call WriteViaLoader("22D0","00000000000000000000000000000000","E")
Call WriteViaLoader("22E0","00000000000000000000000000000000","E")
Call WriteViaLoader("2B00","00000000000000000000000000000000","E")
Call WriteViaLoader("2B10","00000000000000000000000000000000","E")
Call WriteViaLoader("2B20","00000000000000000000000000000000","E")
Call WriteViaLoader("2B30","00000000000000000000000000000000","E")
Call WriteViaLoader("2B40","00000000000000000000000000000000","E")
Call WriteViaLoader("2B50","00000000000000000000000000000000","E")
Call WriteViaLoader("2B60","00000000000000000000000000000000","E")
Call WriteViaLoader("2B70","00000000000000000000000000000000","E")
Call WriteViaLoader("2B80","00000000000000000000000000000000","E")
Call WriteViaLoader("2B90","00000000000000000000000000000000","E")
Call WriteViaLoader("2BA0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BB0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BC0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BD0","00000000000000000000000000000000","E")
Call WriteViaLoader("2BE0","00000000000000000000000000000000","E")
Call Sc.ProgressBox ("EXAMPLE NOT A 3M !!Just clears PPV, Tiers and 2B00-2BE0.....", 3, 3, "DSSCanada SuperScript 1.0")
sc.delay (300)
Call Sc.ProgressBox ("", 0, 0, "")
sc.print VbCr &"EXAMPLE NOT A 3M !!Just clears PPV, Tiers and 2B00-2BE0!"

Sc.Write("A0")

MsgPromp = MsgPromp & vbtab & "Get Locals V8: "  & VbCr
MsgPromp = MsgPromp & vbtab & "Do You Want To Get Locals?: "  & VbCr
GetLocalVal=Sc.ButtonBox( MsgPromp & VbCr &"",  vbDefaultButton2 + vbQuestion, " Do You Want To Get Locals? ", "Yes", "No")

if GetLocalVal = 1 then
Call getlocal2
End if
if  GetLocalVal = 2 then
Exit Sub
End if

End Sub
'********************End Example*****************************
' END OF FILE