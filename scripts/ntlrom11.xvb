'=================================================   =============
'!!! ALL CREDIT GOES TO THE ORIGINAL CREATOR OF THIS SCRIPT !!!
' VERY WELL APPRECIATED FOR YOUR HARD WORK IN THIS PROJECT
'=================================================   =============
' Additions done to this script is as follows:
' --------------------------------------------
'
'1- Added a check for a reply from cam of 69
' due to the test script will reply with 6F
' and a locked cam will reply 69.
'2- Added some sound in aswell so you can go back
' to what ever you were doing and just let the
' script run until Homer sings.
'
' T0Y :)
'
'Remember this is just a hobbie, so sit back relax and enjoy life, before it passes you by :)
'
'*************************************************   *************************************
' New VB Script File - Created 12/28/04
' FOR Dish rom 11 B0C rev STREAMLOCKED only.
' AUTOMATIC SCRIPT
' USES Newd11.hex on LOADER only!!!!!!!!!!
'*************************************************   *************************************
'Instruction Table
'01 Reset Card (Leaves card clock off)
'02 4.608 MHz Card Clock Off -FREEZE CAM
'03 4.608 MHz Card Clock On - FREE RUNNING CAM
'04 DOUBLE HIT, CLOCK LOW, .5 CYCLE DELAY--2*CARD CLOCKS -- ex. 2x xx xx 04 for timing
'05 DOUBLE HIT, CLOCK LOW, 1.5 CYCLE DELAY-2*CARD CLOCKS -- ex. 2x xx xx 05 for timing
'06 Double HIT, CLOCK LOW, 6 CYCLE DELAY-- 2*CARD CLOCKS -- ex. 2x xx xx 06 for timing
'07 Three HIT, CLOCK LOW , 6 CYCLE DELAY-- 2*CARD CLOCKS -- ex. 2x xx xx 07 for rom11 hopeful.
'08 Five HIT, CLOCK LOW, 5 CYCLE DELAY--- 2*CARD CLOCKS -- ex. 2x xx xx 08 for rom11 hopeful.
'09 LOW CLOCK single hit------------------ 2*CARD CLOCKS -- ex. 2x xx xx 09 for timing
'0E XX SET WD TIMER
'0F POWER DOWN CAM
'1X TX RX SPEED
'2X XX XX Delay $2X XX XX Atmel clock cycles
'8X-9X Rx from card, instruction anded with $1f plus 1 bytes Ex. $9F = rx $20 bytes
'aX-FX Tx to card, instruction anded with $5f plus 1 bytes Ex. $FF = Tx $60 bytes
'*************************************************   *************************************
'Commands
'80 Check Card Presence - Sends 1 byte
'90 Get chip ID - Sends 4 Bytes (DISH)
'AX Set Bi-color Led - X = 0 off, X = 1 Red, X = 2 Green
'B0 XX Set Glitch VCC - VCC = (5/255) * XX
Option Explicit
Dim Bytes
dim TestMode
Dim BR2(5)
Dim VCCStart
Dim VCCLimit
Dim VCC
Dim DelayEnd
Dim DelayStart
Dim GlitchType
Dim TryCnt
DIM TryLimit
DIM TRYCNT2
DIM RT
DIM RT2
DIM CL
DIM Packet
DIM logo
TRYCNT2=1
CL=0
'logo = "logo.jpg"
'Call Sc.PictureBox(logo,4)
Sub Main()
' These are the variables you can change for rom 11
' Packet = what packet does the cam need?
' Use this if you know packet one is on cam and you
' want to send Packet 2 or 3
' ex. Packet = 1
' ex. Packet = 2
' ex. Packet = 3 to send the open emm and exit.
SC.RESET
Packet = 1    'packet 1, 2, or 3
DelayStart=&h1780 'testing rom 11 - 1780
     'hit at 140F & 1557 & 16F4 & 14F6 & 1438 & 1398 & 1555
DelayEnd = &H1380 'testing rom 11 - 1380
TryCnt = 200 '330 is good - Number of tries per delay FROM 5-50000
' end of variables
VCCStart = &h40 'YOU CAN CHANGE THIS FROM 21-99 = this is automatic now
VCCLimit = &h00 'YOU CAN CHANGE THIS FROM 00-20 = this is automatic now
GlitchType= &h06 'This is automatic now
VCC = VCCStart
RT = DelayStart
' turn led off
sc.verbose=TRUE
Sc.Write("A0")
Sc.Delay(100)
' card is in turn led on
Sc.Write("A1")
' get atr
sc.verbose=TRUE
Sc.Write("07 0e 03 10 01 03 9a 00") 'reset card
Sc.Read(02)
Bytes = Sc.Getbyte(1)
if Bytes > 25 then
Sc.Read(25)
end if
SC.DELAY(30)
Sc.Write("14 03 10 15 AB 21 00 08 A0 CA 00 00 02 12 00 06 55 0E 03 87 00")
Sc.Read(02)
Bytes = Sc.Getbyte(1)
if Bytes > 7 then
Sc.Read(8)
end if
print
print " Now we will try " & HexString(RT, 4) & " delay" & vbcr
SC.DELAY(30)
Do
Sc.Write("B0" & HexString(VCC, 2))
SC.DELAY(17)
IF CL = 0 then
Sc.Write("07 0e 03 10 01 03 9a 00") 'reset card
sc.read(02)
SC.DELAY(17)
' LOGIN NIPPER
Sc.Write("47 15 E0") '2d
Sc.Write("21003DA0CA000037033554011031054E69705045722049E340 7CADFDB96429F4F6") 'd33
Sc.Write("77C2356D747400000000000000000000000000000000000000 000000000005ce") 'd32
Sc.Write("0E 05 8A 00")

Sc.Read(02)
Bytes = Sc.Getbyte(1)
if Bytes > 8 then
Sc.Read(9)
'bytes=sc.getbyte(:cool:
'PRINT HexString(bytes, 2)
end if
SC.DELAY(10)
end if
CL=0
if Packet = 1 then
' Send D7 Write Packet one
Sc.Write("53 15 E8")
Sc.Write("21 00 45 A0 D7 10 80 40 66 E1 24 39 14 1A CA A1")
Sc.Write("C1 D5 E9 B2 9B 68 F8 61 EF 7F 04 3C 26 55 63 F3")
Sc.Write("37 FE 29 F5 61 DB 8E 17 B5 E1 9B D3 83 99 50 49")
Sc.Write("EC 66 52 53 E2 81 95 DF 32 90 53 12 C9 95 CE 26")
Sc.Write("F0 D9 26 86 05 BE FE F2 B0 20" & HexString(RT, 4) & HexString(GlitchType, 2) & "0E 05 85 00")


Sc.Read(2)
Bytes = Sc.Getbyte(1)
end if
if Packet = 2 then
' Send D7 Write Packet two
Sc.Write("53 15 E8")
Sc.Write("21 00 45 A0 D7 10 C0 40 F8 EE 03 7B 05 7F 77 53")
Sc.Write("27 96 32 18 7D 4D FE CA 1F D9 20 D8 41 CD A8 B3")
Sc.Write("77 CD CF DF CE 4D 0A EC 4D 7C 45 B4 9B 9D 39 0D")
Sc.Write("8E 58 38 25 43 84 98 5E 54 92 5C 09 F4 3B 72 F1")
Sc.Write("C8 4B 55 5A 2D B4 48 2D DD")
Sc.Write("20" & HexString(RT, 4) & HexString(GlitchType, 2) & "0E 05 85 00")



Sc.Read(2)
Bytes = Sc.Getbyte(1)
end if
if Packet = 3 then
' Send Emm to 00 Bugs at C0A1
sc.verbose=TRUE
Sc.Write("07 0e 03 10 01 03 9a 00") 'reset card
Sc.Read(02)
Bytes = Sc.Getbyte(1)
if Bytes > 25 then
Sc.Read(25)
end if
SC.DELAY(50)
'Zero Bugs
Sc.Write("60 15 F6")
Sc.Write("21 00 53 A0 CA 00 00 4D 00 4B 54 01 02 53 41 8D")
Sc.Write("70 D1 9A F0 7B 43 4F 1A 76 61 96 89 69 05 36 4B")
Sc.Write("76 5F 4B 3D 7A F9 59 B9 82 E6 57 80 C3 40 78 42")
Sc.Write("25 38 1D 90 6E EE 22 C1 B8 C2 10 51 55 BB 5B 56")
Sc.Write("92 7D F9 C9 87 55 89 4A 58 92 FB D5 16 B6 67 B1")
Sc.Write("88 73 85 77 B8 05 9C 20 00 FF 0E 05 85 00")

SC.READ(2)
Bytes = Sc.Getbyte(1)
if Bytes > 4 then
    Sc.Read(5)
    bytes=sc.getbyte(3)
END IF
SC.DELAY(200)
print
PRINT "********************************" & VBCR
PRINT "* BEV ROM11 B0C EMM sent *" & VBCR
PRINT "* ROM11 B0C cam should be open *" & VBCR
PRINT "* test in Nagra to see. *" & VBCR
PRINT "* if not, try again.    *" & VBCR
PRINT "********************************" & VBCR
sc.playsound("smart.wav")
exit sub
end if
if Bytes > 4 then
Sc.Read(5)
bytes=sc.getbyte(3)
RT2 = bytes
if RT2 = &H6F then
VCC = VCC - .4 '.2
print "+"
CL=1
SC.DELAY(05)
end IF
if RT2 = &H69 then
VCC = VCC - .4 '.2
print "+"
CL=1
SC.DELAY(05)
end IF
if RT2 = &HFF then
VCC = VCC + 1
print "-"
end if
TryCnt2 = TryCnt2 + 1
if trycnt2 > trycnt then
    RT = RT - 1.5
    TRYCNT2 = 0
    if rt < DelayEnd then
    rt = DelayStart
    END IF
    print
    print " Now we will try " & HexString(RT, 4) & " delay, our VCC is about " & HexString(VCC, 2) & " and our Glitch Type was " & HexString(GlitchType, 2)
    print
END IF
if RT2 = &H90 then
print
print
print "*********** we hit our bug *************"& VbCr
print "9000 was our loggin = good loggin, D7 packet " & Packet & " wrote to cam"
print
PRINT HEXSTRING(SC.GETBYTE(0),2) & HEXSTRING(SC.GETBYTE(1),2) & HEXSTRING(SC.GETBYTE(2),2) & HEXSTRING(SC.GETBYTE(3),2)& HEXSTRING(SC.GETBYTE(4),2)& VbCr
    Sc.Print "===========================================" & VbCr
PRINT HexString(bytes, 2)
print " was hit at " & HexString(RT, 4) & " delay ----VCC WAS " & HexString(VCC, 2) & " , our GlitchType was " & HexString(GlitchType, 2)
print
print
Packet = Packet + 1
SC.DELAY(2500)
end if
if RT2 = &H63 then
print
print
print "*********** we hit our bug *************"& VbCr
print "6300 was our loggin = not logged in, packet didnt take!!"
PRINT HEXSTRING(SC.GETBYTE(0),2) & HEXSTRING(SC.GETBYTE(1),2) & HEXSTRING(SC.GETBYTE(2),2) & HEXSTRING(SC.GETBYTE(3),2)& HEXSTRING(SC.GETBYTE(4),2)& VbCr
    Sc.Print "===========================================" & VbCr
PRINT HexString(bytes, 2)
print " was hit at " & HexString(RT, 4) & " delay ----VCC WAS " & HexString(VCC, 2) & " , our GlitchType was " & HexString(GlitchType, 2)
sc.playsound("doh.wav")
print
print
CL=0
SC.DELAY(2500)
end if
else
PRINT" ! "
VCC = VCC + 1
TryCnt2 = TryCnt2 - 1 ' this is added so it doesn't count resets as a try
end if
     GlitchType = GlitchType + 0.02
     'print HexString(GlitchType, 2)
     if GlitchType > 9.4 then
     GlitchType = &h06
     end if
     'if you want just one Glitchtype remove the ' below
     'GlitchType= &h08
SC.DELAY(05)
sc.verbose=false
LOOP
End Sub
Function HexString(Number,Length)
' This function takes 2 arguments, a number and a length. It converts the decimal
' number given by the first argument to a Hexidecimal string with its length
' equal to the number of digits given by the second argument
Dim RetVal
Dim CurLen
RetVal=Hex(Number)
CurLen=Len(RetVal)
If CurLen<Length Then
RetVal=String(Length-CurLen,"0") & RetVal
End If
HexString=RetVal
End Function